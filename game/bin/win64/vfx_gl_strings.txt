					
						
							
								
									
										
											
												
														
																
																		
																			
																									
																												
																																													
																																																																																											
																																																																																																																																																			
				@WH
		%.*s
		Exits: 
	 ();,
	 The lexer was matching from line %d, offset %d, which
	 This indicates a poorly specified lexer RULE
	 or unterminated input element such as: "STRING["]
	!	&	+	0	6	;	@	F	K	P	U	[	a	g	m	s	y	
	%.*s
	%s at offset %d, 
	D$0H
	H;H s
	JR>8o
	You must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function.
	kE>fvw
	precision highp float;
	precision mediump float;
	w8Hc
	w_Hc
      
                          
                                                                                
                AAAAAAAAAAAAAAAAZZZZZZZZZZZZZZZZUPDATE_STRING_TOKEN_DATABASE
           Found size %d!
          catch 
          cleanup
          filter 
          to 
         "precision mediump int; precision highp float;"
        -----     
        vec2 unpackHalf2x16(highp uint);
        vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
    -
    =
    near %s
    vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord;
    xfb_buffer 
   $%d = 
   ---User Time---
   ---Wall Time---
   --System Time--
   --User+System--
  %7.4f (%5.1f%%)
  --- Name ---
  ---Mem---
  -->  
  Built 
  CS<
  Default target: 
  DomFrontier for BB 
  Host CPU: 
  This option category has no options.
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
  expected one of : 
  int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4);
  int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int);
  int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4);
 !"###$g%&'g()*+,gg-./012gg3g4gggggggggggg5678g9g:;<=>?@ggggggggggggggggggAggggggggBCDEFg
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:
 !"#$%&'()*+,-./0123458688888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888887
 !"#$%&'()*+,-./701777723456H
 !"#$%&'()*+,-./:012345678:9
 !(("#$%&&((&&&&&((
 $$$$$$$$$$$!!!$$$$$$$$$"#
 %s_%s
 && !defined( FORCE_MEDIUM_PRECISION )
 && defined( FORCE_MEDIUM_PRECISION )
 'L>[
 (Start: 
 (default: 
 (member index 
 (must be 0 or 1)
 (must be 0, 1 or 2)
 (not another case construct, corresponding merge, outer loop merge or outer loop continue)
 (or requires extension or capability)
 (or requires extension)
 (post-inc with loop 
 -   
 -*- '
 -- '
 9(X`
 9B A
 9G A
 9H @
 9H$@
 : Extraneous input - expected %s ...
 : Extraneous input - expected <EOF>
 : Extraneous input...
 : Missing %s 
 : Missing <EOF>
 : Missing token (%d)...
 : cannot match to any predicted input...
 : enable
 : error %d : %s
 : expected %s ...
 : expected <EOF>
 : missing elements...
 : packoffset( c%d.%c ) 
 : register( c%d ) 
 : syntax error...
 : syntax not recognized...
 : unexpected input...
 ; 0x
 ;t$h
 <<NULL ALIASEE>>
 <<exit node>>
 <ID> 
 <bad ordering 
 <id> '
 <unknown operation 
 = !{
 = 0; 
 = imageSize(
 = ivec2[4](
 = metadata 
 = textureQueryLod(
 = textureSize(
 = type 
 = { 
 @8s(u
 @v	H
 A9@$
 A9A 
 A9A$
 A9A$A
 A9B 
 A9B$
 A9J$
 A\_^
 A]A\_^[
 A^A\]
 A^A\_
 A^A\_^[
 A^A\_^]
 A^A]A\_^][
 A^A]_
 A^A]_][
 A^][
 A^^[
 A^^]
 A^_[
 A^_]
 A^_^
 A^_^[]
 A^_^][
 A_A\[
 A_A\]
 A_A\^
 A_A\_
 A_A\_^]
 A_A]A\][
 A_A]A\_^
 A_A]A\_^][
 A_A^A\
 A_A^A\][
 A_A^A\^[
 A_A^A\_]
 A_A^A\_^
 A_A^A]
 A_A^A]A\[
 A_A^A]A\]
 A_A^A]A\^
 A_A^A]A\_
 A_A^A]A\_][
 A_A^A]A\_^]
 A_A^A]^]
 A_A^A]_^
 A_A^[
 A_A^]
 A_A^]H
 A_A^^
 A_A^^][
 A_A^_
 A_A^_H
 A_A^_^[
 A_A^_^]
 A_][
 A_][H
 A_^[
 A_^]
 A_^]H
 A__[
 A__]
 A__^
 Analyses:
 Base Class Array'
 Base Class Descriptor at (
 C>TQ
 Class Hierarchy Descriptor'
 Complete Object Locator'
 Constituent <id> '
 Constituent <id> count does not match Result Type <id> '
 Constituent count does not match Result Type <id> '
 D;t$@|
 Found result <id> '
 Free these instances
 Freeing Pass '
 H3E H3E
 H;C(u
 H;C8u
 H;CHu
 H;CXu
 H;Cxu
 H;F(u
 H;F0u
 H;G0u
 H;G8u
 H;K(u
 H;N u
 H;N(u
 H;\$p
 HcA H
 HcyHH
 I;E@u
 I;Fxu
 I;G0u
 I;G`u
 I;Ohu
 I;|$
 Id <
 In Vulkan, BufferBlock is disallowed on variables in the StorageBuffer storage class
 L;F u
 LcA H
 LcY L
 LinePos:
 No predecessors!
 OpTypeVector. Found Op
 Pointer <id> '
 Profile specification
 Result Type <id> '
 Type Descriptor'
 Uninitialized Pass
 [ %s ] 
 [artificial]
 [decl]
 [def]
 [from 
 [line 
 [local]
 [options]
 [private]
 [protected]
 [scope 
 [static]
 [unbounded]
 [vector]
 __explicitInterpAMD
 acq_rel
 acquire
 addrspace(
 align 
 align=
 and 
 and ending with 
 appears in the binary before its dominator 
 arcp
 are referenced but not defined in function 
 arguments.
 arguments. OpTypeFunction <id> '
 at minimum or one of the following extensions: 
 at minimum.
 atomic
 back-edge blocks but the standard requires exactly one
 based on the function's type
 because it is targeted by an OpEntryPoint instruction.
 binding=
 branches to the 
 buffer_reference
 buffer_reference_align=
 called with execution model 
 calling 
 can not find index 
 can only be used with physical addressing models
 cannot appear before the memory model instruction
 cannot appear in a function declaration
 cannot be 0xFFFFFFFF in WebGPU execution environment.
 cannot be a type
 cannot be greater than 3 for pervertexNV
 cannot be used as a member decoration 
 cannot initialize this type of qualifier 
 centroid
 coherent
 coherent 
 columns, but access index is 
 compatibility
 compilation errors.  No code generated.
 component=
 components
 components are not float scalar.
 components are not int scalar.
 components for 
 components, 
 components, but given 
 components, but given only 
 components.
 constant_id=
 construct with the 
 construct, but not to the 
 containing: 
 contains members with BuiltIn decoration. Therefore this 
 contains structure <id> 
 core
 decorated as 
 decoration applied to a non-object
 decoration applied to a value with void type
 decoration applied to an object with invalid type
 decoration may not be applied to 
 decoration targeting 
 defined in block 
 definition does not dominate its parent 
 definition.
 delete
 delete[]
 depends on 
 deprecated in version 
 devicecoherent
 did not find an member index to get underlying data type for struct type.
 do not match.
 does not dominate its case construct 
 does not dominate its use in block 
 does not have a 
 does not match incoming value <id> 
 does not meet this requirement.
 does not reference an OpExtInstImport result Id
 elements]
 else 
 environments.
 equal: 
 exact
 exits the 
 expected
 fast
 flat
 for Entry Point id 
 for appending!
 for target environment 
 for variable in 
 gc "
 gets larger than 3
 gl_in[]
 gl_in[gl_MaxPatchVertices]
 gl_out[]
 has 
 has bit width 
 has branches to multiple other case construct targets 
 has branches to the case construct that targets 
 has components with bit width 
 has invalid branch to block 
 has invalid mask component 
 has no type
 has not been defined
 headed by <ID> 
 highp 
 id '
 id: 
 imageAtomicAdd(volatile coherent 
 imageAtomicAnd(volatile coherent 
 imageAtomicCompSwap(volatile coherent 
 imageAtomicExchange(volatile coherent 
 imageAtomicLoad(volatile coherent 
 imageAtomicMax(volatile coherent 
 imageAtomicMin(volatile coherent 
 imageAtomicOr(volatile coherent 
 imageAtomicXor(volatile coherent 
 imageSize(readonly writeonly volatile coherent 
 in  
 in Vertex or Tessellation execution model requires the ShaderViewportIndexLayerEXT capability.
 in function <
 in the structure <id> '
 inbounds
 index=
 indexes.
 input_attachment_index=
 instruction must be a pointer.
 instructions require Geometry execution model
 int;
 into the structure <id> '
 invariant
 is 0
 is a type, not a value
 is already a merge block for another header
 is banned when using the Vulkan memory model.
 is being used for 
 is decorated with BuiltIn. BuiltIn decoration should only be applied to struct types, variables and constants.
 is defined more than once
 is disallowed
 is not a bool scalar.
 is not a constant.
 is not a float scalar.
 is not a float vector.
 is not a predecessor of <id> 
 is not a scalar integer
 is not a scalar numeric type
 is not a type
 is not a type id
 is not aligned to 
 is not aligned to scalar element size 
 is not allowed by OpenCL 1.2 
 is not allowed by OpenCL 2.0/2.1 
 is not allowed by OpenCL 2.2 
 is not allowed by Vulkan 1.0 specification
 is not allowed by Vulkan 1.1 specification
 is not allowed by WebGPU specification
 is not allowed.
 is not an OpLabel.
 is not an array.
 is not an int scalar.
 is not an int vector.
 is out of bounds for 
 is out of bounds. The structure has 
 is referencing 
 is reserved for future use.
 is targeted by 
 is targeted by block 
 is used outside of it's defining function 
 is:	
 l-value of swizzle cannot have duplicate components
 l-value required
 layout rules: member 
 layoutSecondaryViewportRelativeOffset=
 layoutViewportRelative
 left of '[' is not of type array, matrix, or vector 
 location=
 matrix of
 may not exceed 
 mediump 
 members. Largest valid index is 
 monotonic
 multiple times is not allowed.
 must appear in a block
 must be 0 for a floating-point type, 
 must be a memory object declaration
 must be an OpLabel
 must be explicitly laid out with ArrayStride decorations.
 must be explicitly laid out with MatrixStride decorations.
 must be explicitly laid out with Offset decorations.
 must be of type integer.
 must be present.
 must not use GLSLPacked decoration.
 must not use GLSLShared decoration.
 nand
 new[]
 ninf
 nnan
 noContraction
 nonprivate
 nonuniform
 noperspective
 not satisfying alignment to 
 numerical scalar type
 obuscated
 of function 
 of struct ID <
 offset=
 on module '
 operand at word offset 
 operand index 
 operand of 
 operand: 
 option: 
 or Op
 or earlier
 or later
 overlaps previous member ending at offset 
 passthrough
 patch
 perprimitiveNV
 personality 
 pervertexNV
 perviewNV
 preds = 
 prefix 
 provided in OpGroupMemberDecorate for struct <id> 
 provided in OpMemberDecorate for struct <id> 
 push_constant
 queuefamilycoherent
 reached non-composite type while indexes still remain to be traversed.
 readonly
 readonly 
 release
 requires 
 requires Fragment execution model
 requires Kernel capability
 requires SPIR-V version 
 requires Shader capability
 requires a previous definition
 requires a type
 requires a variable pointers capability
 requires capability InterpolationFunction
 requires one of the following extensions: 
 requires one of these capabilities: 
 requires the Vector16 capability
 restrict
 restrict 
 result type (Op
 runtime-sized array of
 sample
 says it has 
 section "
 seq_cst
 set=
 shaderRecordNV
 singlethread
 slow queries.
 smax 
 smooth
 spec BuiltIn 
 spec BuiltIn FragCoord variable needs to be a 4-component 32-bit float vector. 
 spec BuiltIn FragDepth variable needs to be a 32-bit float scalar. 
 spec BuiltIn FrontFacing variable needs to be a bool scalar. 
 spec BuiltIn InstanceIndex variable needs to be a 32-bit int scalar. 
 spec BuiltIn VertexIndex variable needs to be a 32-bit int scalar. 
 spec BuiltIn WorkgroupSize variable needs to be a 3-component 32-bit int vector. 
 spec allows BuiltIn 
 spec allows BuiltIn FragCoord to be only used for variables with Input storage class. 
 spec allows BuiltIn FragCoord to be used only with Fragment execution model. 
 spec allows BuiltIn FragDepth to be only used for variables with Output storage class. 
 spec allows BuiltIn FragDepth to be used only with Fragment execution model. 
 spec allows BuiltIn FrontFacing to be only used for variables with Input storage class. 
 spec allows BuiltIn FrontFacing to be used only with Fragment execution model. 
 spec allows BuiltIn InstanceIndex to be only used for variables with Input storage class. 
 spec allows BuiltIn InstanceIndex to be used only with Vertex execution model. 
 spec allows BuiltIn VertexIndex to be only used for variables with Input storage class. 
 spec allows BuiltIn VertexIndex to be used only with Vertex execution model. 
 spec requires DepthReplacing execution mode to be declared when using BuiltIn FragDepth. 
 spec:
 specialization-constant
 stage:
 stage: 
 starting at word 
 storage class
 storage class for pointer type <id> '
 storage class must follow 
 storage class requires an additional capability
 stream=
 subgroupcoherent
 t?D9
 tDE3
 tY9\
 taskNV
 textureSize(
 that is not a scalar or vector
 the 
 the same type as Result Type components
 to be int or float scalar or vector type
 to be int or float scalar type
 to be int or float vector type
 to be only used for variables with Input or Output storage class. 
 to be only used for variables with Input storage class. 
 to be used only with Fragment, Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
 to be used only with GLCompute execution model. 
 to be used only with TessellationControl or TessellationEvaluation execution models. 
 to be used only with Vertex, TessellationEvaluation, Geometry, or Fragment execution models. 
 to have 4 components
 to index into a structure must be an OpConstant.
 type <id> 
 type as Result Type: 
 type definition.
 type for pointer <id> '
 uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4);
 umax
 umax 
 umin
 unknown index type 
 unnamed_addr
 unordered
 unsized
 unwind 
 used in function 
 uses storage class 
 vJH+
 variable needs to be a 3-component 32-bit int vector. 
 variable needs to be a 32-bit float array. 
 variable needs to be a 32-bit int scalar. 
 variable needs to be a 32-bit int vector. 
 variable needs to be a 32-bit int. 
 variable needs to be a 4-component 32-bit int vector. 
 version 
 void
 volatile
 volatile 
 which is decorated with BuiltIn 
 which is dependent on 
 with 
 with backedge-taken count 
 with expression
 with two memory access operands requires SPIR-V 1.4 or later
 words instead of 
 words instead.
 words long
 words, but found 
 words, but stated word count is 
 words.
 words: 
 workgroupcoherent
 writeonly
 writeonly 
 wrong operand type
 wrong operand types:
 xchg
 xfb_buffer=
 xfb_offset=
 xfb_stride=
 yielding Result Id 
 | E3
!!!!!!!!!!!!!!!!!!"""######"""###$$$"""###%%%&&&&&&!!!!!!!!!!!'''''''''''''''''''''''''''''''''''!!!!!!!!!!!''''''!!BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB())))*+,BBB-BB.
!""""""
!,X< w
!>6'Y
!T$(H!T$ 
!\>G[
!wfHc
" is not unique, which is not allow in WebGPU env.
" versus "
"#$$$%%%&'()
"%s" (%s)
"(" expected after 'debug' keyword
"(" expected after 'optimize' keyword
")" expected to end 'debug' pragma
")" expected to end 'optimize' pragma
"D) A
"H;L$hu
"H;Npu
"H;\$Pu
"I;Gxu
"defined" can't be (un)defined:
"e?<<<<<<l?
"on" or "off" expected after '(' for 'debug' pragma
"on" or "off" expected after '(' for 'optimize' pragma
"wBHc
####### !###""""""""""""f
#########
#################
######################
#########################
########################################################################################################################################################################
#4o>w
#H;L$@u
#I;G@u
#Ib?AG
#define
#define %s (%s.%s)
#define E_GL_EXT_shader_atomic_int64 1
#define E_GL_EXT_shader_realtime_clock 1
#define GL_AMD_gcn_shader 1
#define GL_AMD_gpu_shader_half_float 1
#define GL_AMD_gpu_shader_half_float_fetch 1
#define GL_AMD_gpu_shader_int16 1
#define GL_AMD_shader_ballot 1
#define GL_AMD_shader_explicit_vertex_parameter 1
#define GL_AMD_shader_fragment_mask 1
#define GL_AMD_shader_image_load_store_lod 1
#define GL_AMD_shader_trinary_minmax 1
#define GL_AMD_texture_gather_bias_lod 1
#define GL_ANDROID_extension_pack_es31a 1
#define GL_ARB_compute_shader 1
#define GL_ARB_derivative_control 1
#define GL_ARB_enhanced_layouts 1
#define GL_ARB_explicit_attrib_location 1
#define GL_ARB_explicit_uniform_location 1
#define GL_ARB_fragment_shader_interlock 1
#define GL_ARB_gpu_shader5 1
#define GL_ARB_gpu_shader_int64 1
#define GL_ARB_post_depth_coverage 1
#define GL_ARB_separate_shader_objects 1
#define GL_ARB_shader_atomic_counters 1
#define GL_ARB_shader_ballot 1
#define GL_ARB_shader_draw_parameters 1
#define GL_ARB_shader_group_vote 1
#define GL_ARB_shader_image_load_store 1
#define GL_ARB_shader_stencil_export 1
#define GL_ARB_shader_texture_image_samples 1
#define GL_ARB_shader_texture_lod 1
#define GL_ARB_shading_language_420pack 1
#define GL_ARB_sparse_texture2 1
#define GL_ARB_sparse_texture_clamp 1
#define GL_ARB_tessellation_shader 1
#define GL_ARB_texture_cube_map_array 1
#define GL_ARB_texture_gather 1
#define GL_ARB_texture_rectangle 1
#define GL_ARB_viewport_array 1
#define GL_ES 1
#define GL_EXT_YUV_target 1
#define GL_EXT_buffer_reference 1
#define GL_EXT_buffer_reference2 1
#define GL_EXT_buffer_reference_uvec2 1
#define GL_EXT_control_flow_attributes 1
#define GL_EXT_demote_to_helper_invocation 1
#define GL_EXT_device_group 1
#define GL_EXT_frag_depth 1
#define GL_EXT_fragment_invocation_density 1
#define GL_EXT_geometry_point_size 1
#define GL_EXT_geometry_shader 1
#define GL_EXT_gpu_shader5 1
#define GL_EXT_multiview 1
#define GL_EXT_nonuniform_qualifier 1
#define GL_EXT_post_depth_coverage 1
#define GL_EXT_primitive_bounding_box 1
#define GL_EXT_samplerless_texture_functions 1
#define GL_EXT_scalar_block_layout 1
#define GL_EXT_shader_16bit_storage 1
#define GL_EXT_shader_8bit_storage 1
#define GL_EXT_shader_explicit_arithmetic_types 1
#define GL_EXT_shader_explicit_arithmetic_types_float16 1
#define GL_EXT_shader_explicit_arithmetic_types_float32 1
#define GL_EXT_shader_explicit_arithmetic_types_float64 1
#define GL_EXT_shader_explicit_arithmetic_types_int16 1
#define GL_EXT_shader_explicit_arithmetic_types_int32 1
#define GL_EXT_shader_explicit_arithmetic_types_int64 1
#define GL_EXT_shader_explicit_arithmetic_types_int8 1
#define GL_EXT_shader_image_load_formatted 1
#define GL_EXT_shader_io_blocks 1
#define GL_EXT_shader_non_constant_global_initializers 1
#define GL_EXT_shader_subgroup_extended_types_float16 1
#define GL_EXT_shader_subgroup_extended_types_int16 1
#define GL_EXT_shader_subgroup_extended_types_int64 1
#define GL_EXT_shader_subgroup_extended_types_int8 1
#define GL_EXT_shader_texture_lod 1
#define GL_EXT_shadow_samplers 1
#define GL_EXT_tessellation_point_size 1
#define GL_EXT_tessellation_shader 1
#define GL_EXT_texture_buffer 1
#define GL_EXT_texture_cube_map_array 1
#define GL_FRAGMENT_PRECISION_HIGH 1
#define GL_GOOGLE_cpp_style_line_directive 1
#define GL_GOOGLE_include_directive 1
#define GL_KHR_blend_equation_advanced 1
#define GL_KHR_shader_subgroup_arithmetic 1
#define GL_KHR_shader_subgroup_ballot 1
#define GL_KHR_shader_subgroup_basic 1
#define GL_KHR_shader_subgroup_clustered 1
#define GL_KHR_shader_subgroup_quad 1
#define GL_KHR_shader_subgroup_shuffle 1
#define GL_KHR_shader_subgroup_shuffle_relative 1
#define GL_KHR_shader_subgroup_vote 1
#define GL_NV_compute_shader_derivatives 1
#define GL_NV_conservative_raster_underestimation 1
#define GL_NV_cooperative_matrix 1
#define GL_NV_fragment_shader_barycentric 1
#define GL_NV_geometry_shader_passthrough 1
#define GL_NV_integer_cooperative_matrix 1
#define GL_NV_mesh_shader 1
#define GL_NV_ray_tracing 1
#define GL_NV_sample_mask_override_coverage 1
#define GL_NV_shader_atomic_int64 1
#define GL_NV_shader_noperspective_interpolation 1
#define GL_NV_shader_sm_builtins 1
#define GL_NV_shader_subgroup_partitioned 1
#define GL_NV_shader_texture_footprint 1
#define GL_NV_shading_rate_image 1
#define GL_NV_viewport_array2 1
#define GL_OES_EGL_image_external 1
#define GL_OES_EGL_image_external_essl3 1
#define GL_OES_geometry_point_size 1
#define GL_OES_geometry_shader 1
#define GL_OES_gpu_shader5 1
#define GL_OES_primitive_bounding_box 1
#define GL_OES_sample_variables 1
#define GL_OES_shader_image_atomic 1
#define GL_OES_shader_io_blocks 1
#define GL_OES_shader_multisample_interpolation 1
#define GL_OES_standard_derivatives 1
#define GL_OES_tessellation_point_size 1
#define GL_OES_tessellation_shader 1
#define GL_OES_texture_3D 1
#define GL_OES_texture_buffer 1
#define GL_OES_texture_cube_map_array 1
#define GL_OES_texture_storage_multisample_2d_array 1
#define GL_OVR_multiview 1
#define GL_OVR_multiview2 1
#define GL_SPIRV 
#define GL_compatibility_profile 1
#define GL_core_profile 1
#define GSAppendVertex( streamName, v ) \
#define VULKAN 
#define float2	vec2
#define float2x3	mat2x3
#define float2x4	mat2x4
#define float3	vec3
#define float3x2	mat3x2
#define float3x3	mat3x3
#define float3x4	mat3x4
#define float4	vec4
#define float4x2	mat4x2
#define float4x3	mat4x3
#define float4x4	mat4x4
#define int2	ivec2
#define int3	ivec3
#define int4	ivec4
#define lerp(a, b, c) mix(a, b, c)
#define mad(a,b,c) fma(a, b, c)
#define mul(a, b) ((b) * (a))
#define uint2	uvec2
#define uint3	uvec3
#define uint4	uvec4
#elif
#elif after #else
#else
#else after #else
#endif
#error
#extension
#extension 
#extension GL_ARB_explicit_attrib_location : enable
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_ARB_tessellation_shader : enable
#extension GL_ARB_texture_cube_map_array : enable
#extension GL_ARB_texture_gather : enable
#extension GL_ARB_viewport_array : enable
#extension GL_GOOGLE_cpp_style_line_directive
#extension GL_GOOGLE_cpp_style_line_directive : enable 
#extension GL_NV_mesh_shader
#extension\s+GL_ARB_shading_language_420pack\s*:\s*enable
#if defined( GL_FRAGMENT_PRECISION_HIGH )
#if/#ifdef/#ifndef
#ifdef
#ifndef
#include
#line
#line 
#line 1
#line 1 "
#pragma
#pragma once
#pragma use_variable_pointers
#undef
#version
#version 
#version 140
#version 300 es
#version 310 es
#version 330
#version 410
#version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
#version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
#version: ES shaders for SPIR-V require version 310 or higher
#version: compilation for SPIR-V does not support the compatibility profile
#version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
#version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
#version: mesh/task shaders require es profile with version 320 or above, or non-es profile with version 450 or above
#version: only version 300, 310, and 320 support the es profile
#version: ray tracing shaders require non-es profile with version 460 or above
#version: statement must appear first in es-profile shader; before comments or newlines
#version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
#version: versions 300, 310, and 320 require specifying the 'es' profile
#version: versions 300, 310, and 320 support only the es profile
#version: versions before 150 do not allow a profile token
$ t	A
$$$$$
$$$$$$
$$$$$$$
$$$$$$$$
$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$
$&,V,S
$&,V,S,V
$&2,S
$2,>S,,
$;Y0r
$@t	A
$Global
$Globals
$H;8u5A
$Hc3D+
$I9L$
$Ib?s
$L;d$Hu
$accept
$undefined
%!2,>S,
%!3,>S,,
%!~1,>S
%"type 
%-.13e
%1,S,>S,
%2,S,>S,,
%3,S,>S,,,
%4,>S,
%4,S,>S,,
%9I64d  
%@,S,V
%@,S,V,
%@,S,V,,
%@,S,V,,,
%@,S,V,,,,
%@,S,V,,,,,S
%@,S,V,,>S
%@,S,V,S
%@,S,V,S,V
%@,S,V,S,V,,,
%@,S,V,S,V,,,,S
%@,S,V,S,V,,V,S
%@,S,V,S,V,>S
%@,S,V,V
%@,V,V
%GoU?*
%H;FPu
%H;Fpu
%H;GHu
%d (%s)
%lld (%s)
%llu (%s)
%s     subgroupAdd(%s);
%s     subgroupAnd(%s);
%s     subgroupBroadcast(%s, uint);
%s     subgroupBroadcastFirst(%s);
%s     subgroupClusteredAdd(%s, uint);
%s     subgroupClusteredAnd(%s, uint);
%s     subgroupClusteredMax(%s, uint);
%s     subgroupClusteredMin(%s, uint);
%s     subgroupClusteredMul(%s, uint);
%s     subgroupClusteredOr(%s, uint);
%s     subgroupClusteredXor(%s, uint);
%s     subgroupExclusiveAdd(%s);
%s     subgroupExclusiveAnd(%s);
%s     subgroupExclusiveMax(%s);
%s     subgroupExclusiveMin(%s);
%s     subgroupExclusiveMul(%s);
%s     subgroupExclusiveOr(%s);
%s     subgroupExclusiveXor(%s);
%s     subgroupInclusiveAdd(%s);
%s     subgroupInclusiveAnd(%s);
%s     subgroupInclusiveMax(%s);
%s     subgroupInclusiveMin(%s);
%s     subgroupInclusiveMul(%s);
%s     subgroupInclusiveOr(%s);
%s     subgroupInclusiveXor(%s);
%s     subgroupMax(%s);
%s     subgroupMin(%s);
%s     subgroupMul(%s);
%s     subgroupOr(%s);
%s     subgroupPartitionedAddNV(%s, uvec4 ballot);
%s     subgroupPartitionedAndNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveAddNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveAndNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveMaxNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveMinNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveMulNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveOrNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveXorNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveAddNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveAndNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveMaxNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveMinNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveMulNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveOrNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveXorNV(%s, uvec4 ballot);
%s     subgroupPartitionedMaxNV(%s, uvec4 ballot);
%s     subgroupPartitionedMinNV(%s, uvec4 ballot);
%s     subgroupPartitionedMulNV(%s, uvec4 ballot);
%s     subgroupPartitionedOrNV(%s, uvec4 ballot);
%s     subgroupPartitionedXorNV(%s, uvec4 ballot);
%s     subgroupQuadBroadcast(%s, uint);
%s     subgroupQuadSwapDiagonal(%s);
%s     subgroupQuadSwapHorizontal(%s);
%s     subgroupQuadSwapVertical(%s);
%s     subgroupShuffle(%s, uint);
%s     subgroupShuffleDown(%s, uint delta);
%s     subgroupShuffleUp(%s, uint delta);
%s     subgroupShuffleXor(%s, uint);
%s     subgroupXor(%s);
%s %s (
%s %s%s : register( c%d );
%s %s;
%s %s[ %d ];
%s (%d)
%s = %s( %s.%s );
%s = %s.%s;
%s allocation count overflow
%s allocation count overflow( %llu > %llu )
%s gl_PerVertex
%s mainIn;
%s mainIn[%d];
%s mainOut;
%s outputPatch[%d];
%s patchIn;
%s patchOut;
%s profile; removed in version %d
%s( mainIn , mainOut );
%s() isn't a known function.
%s.%s = %s;
%s.%s = %s[%d];
%s.%s = %s_%s;
%s.%s = %s_%s[%d];
%s.%s.%s = gl_in[%d].gl_ClipDistance[%d];
%s.%s[%d] = %s[%d];
%s: %s
%s: string format requested %d chars
%s[%d] = %s.%s;
%s[%d] = %s.%s[%d];
%s[line %d:%d] 
%s\%s%s_%08X%08X%08X%08X.vshadercache
%s_%s = %s.%s;
%s_%s = streamName.%s; \
%s_%s[gl_InvocationID] = %s.%s;
%s_%s_%s
%s_gl
%s_gl_builtin
%u (%s)
%wAIc
&2,>S,,,
&?PPPPPPP?
&HcC@H
&YA1H
&YA1I
&YA1L
' as an operand of <id> '
' cannot be OpTypeVoid.
' cannot be a constant zero.
' cannot be a void pointer.
' cannot have a null value.
' cannot have the sign bit set to 1.
' changed from '
' component type does not match Result Type <id> '
' count does not match Result Type <id> '
' count must be one.
' decorated with 
' decorated with both 
' default value must be at least 1.
' defined more than once!
' does not match Pointer <id> '
' does not match the Function Type's return type <id> '
' does not match the OpTypeFunction parameter type of the same index.
' does not represent a value.
' has 
' has a consumer in a different basic block. The consumer instruction <id> is '
' has illegal type.
' id <
' in 
' index is larger than Type <id> '
' is a pointer, which is invalid in the Logical addressing model.
' is a void type.
' is invalid value for boolean argument! Try 0 or 1
' is missing Binding decoration.
' is missing Block decoration.
' is missing Block or BufferBlock decoration.
' is missing DescriptorSet decoration.
' is missing or void.
' is not Workgroup or StorageBuffer.
' is not a boolean type.
' is not a composite type.
' is not a constant instruction with scalar integer type.
' is not a constant integer type.
' is not a constant or module-scope variable.
' is not a constant or undef.
' is not a cooperative matrix type.
' is not a decoration group.
' is not a function type.
' is not a function.
' is not a logical pointer.
' is not a pointer type.
' is not a pointer.
' is not a sampler type.
' is not a scalar constant type.
' is not a scalar numerical type.
' is not a scalar specialization constant.
' is not a scalar type.
' is not a struct type.
' is not a type.
' is not an OpString.
' is not an object.
' is not defined.
' is not initialized.
' is not pointer type
' is not preserving '
' is not the Entry Point operand of an OpEntryPoint.
' is not valid for the WebGPU execution environment.
' is not valid in 
' is the last user of following pass instances.
' must be OpTypeCooperativeMatrixNV.
' must be OpTypeInt with width 32 and signedness 0.
' must be OpTypePointer. Found Op
' must be a boolean constant instruction.
' must be a pointer to an OpTypeStruct.
' must be a scalar integer type.
' must be an OpTypeRuntimeArray.
' must be an the last member of the struct.
' must be less than the ID bound '
' on BasicBlock '
' on Call Graph Nodes '
' on Function '
' on Loop '
' on Module '
' on Region '
' storage class is read-only
' to '
' type does not match Result Type <id> '
' type does not match the Result Type <id> '
' uses more than one PushConstant interface.
' value invalid for integer argument!
' value invalid for uint argument!
' vector component count does not match Result Type <id> '
', has a disallowed initializer & storage class 
', is attempting to create memory for an illegal type, 
', member '
', must have an initializer.
', type<
'. This structure has 
':' missing after extension name
'Alignment'
'AppendStructuredBuffer'
'Argument 0', +
'Argument 1', +
'Array Stride'
'Array member'
'Arrayed'
'Attachment Index'
'Base'
'Binding Point'
'BindlessTexture2D'
'Branch weights'
'Buffer'
'Byte Offset'
'ByteAddressBuffer'
'Capability'
'ClusterSize'
'Coarse'
'Column Count'
'Column Major'
'Column Type'
'Column'
'Columns'
'Comparator'
'Component Count'
'Component Type'
'Component'
'Components'
'Composite'
'Condition'
'Constituents'
'ConsumeStructuredBuffer'
'Continue Target'
'Continued Source'
'Coordinate'
'Count'
'Cull Mask'
'D8l$@
'Decoration Group'
'Default'
'Depth'
'Descriptor Set'
'Destination'
'Direction'
'D~ref~'
'Element Type'
'Element'
'Entry Point'
'Equal'
'Event'
'Events List'
'Execution'
'Extension'
'ExternalDescriptorSet'
'FakeBindlessTexture2D'
'False Label'
'Fast-Math Mode'
'File'
'Flags'
'Float Value'
'Floating-Point Rounding Mode'
'Fragment Index'
'Function Parameter Attribute'
'Function Type'
'Function'
'GlobalWorkOffset'
'GlobalWorkSize'
'Granularity'
'Hit Kind'
'Hit Parameter'
'INCLUDE_BINDLESS_CONSTANTS'
'Image Type'
'Image'
'Index Offset'
'Index'
'Indexes'
'Initializer'
'Insert'
'Instruction'
'Integer Value'
'Interface'
'Invoke'
'L;v v
'LeftMatrix'
'Length'
'Level of Detail'
'Line'
'Linkage Type'
'Literal String'
'Local Size'
'LocalId'
'LocalWorkSize'
'Location'
'Matrix Stride'
'Matrix'
'Member 0 type', +
'Member'
'Memory Access'
'Memory'
'Merge Block'
'Miss Index'
'Mode'
'ND Range'
'NV Acceleration Structure'
'Name'
'Num Elements'
'Num Events'
'Num Packets'
'Number of <<Invocation,invocations>>'
'Object 1'
'Object 2'
'Object'
'Offset'
'Opcode'
'Operand 1'
'Operand 1', +
'Operand 2'
'Operand 2', +
'Operand'
'Operands'
'Operation'
'Packed Indices'
'Packet Alignment'
'Packet Size'
'Param Align'
'Param Size'
'Param'
'Parameter 0 Type', +
'Parameter 1 Type', +
'Payload'
'Pipe'
'Pointer Type'
'Pointer'
'Predicate'
'Profiling Info'
'Qualifier'
'Queue'
'RWBuffer'
'RWByteAddressBuffer'
'RWStructuredBuffer'
'RWTexture1D'
'RWTexture1DArray'
'RWTexture2D'
'RWTexture2DArray'
'RWTexture3D'
'Ray Direction'
'Ray Flags'
'Ray Origin'
'Reserve Id'
'Resident Code'
'Ret Event'
'Return Type'
'RightMatrix'
'Rows'
'SBT Record Offset'
'SBT Record Stride'
'Sample'
'Sampled Image'
'Sampled Type'
'Sampled'
'Sampler'
'SamplerComparisonState'
'SamplerState'
'Scalar'
'Scope'
'Selector'
'Semantics'
'Set'
'Shift'
'Signed Value'
'Signedness'
'Size'
'Source'
'Specialization Constant ID'
'Status'
'Storage'
'Stream Number'
'Stream'
'Stride'
'String'
'Structure Type'
'Structure'
'StructuredBuffer'
'SubpassInput'
'SubpassInputMS'
'TMax'
'TMin'
'Target Label'
'Target Label' operands for OpBranch must be the ID of an OpLabel instruction
'Target Label' operands for OpSwitch must be IDs of an OpLabel instruction
'Target'
'Targets'
'Texel'
'Texture1D'
'Texture1DArray'
'Texture2D'
'Texture2DArray'
'Texture2DMS'
'Texture2DMSArray'
'Texture3D'
'Texture3DArray'
'TextureCube'
'TextureCubeArray'
'True Label'
'Type'
'Unequal'
'Unsigned Value'
'Value'
'Variable, Parent, ...'
'Vector 1'
'Vector 2'
'Vector type'
'Vector'
'Version'
'Vertex count'
'Wait Events'
'Width'
'XFB Buffer Number'
'XFB Stride'
'bool'
'cbuffer'
'centroid'
'class'
'column_major'
'const'
'double'
'exists'
'extern'
'float'
'globallycoherent'
'groupshared'
'half'
'int'
'layout'
'linear'
'matrix'
'member 1 type', +
'nointerpolation'
'noperspective'
'packoffset'
'precise'
'process'
'register'
'return'
'row_major'
's Type must be a scalar or vector type.
's array element type.
's array length.
's callgraph contains function <id> 
's component type.
's function parameter count is not zero.
's function return type is not void.
's layout does not match Object <id> '
's layout.
's matrix column component type.
's matrix column count.
's matrix column type.
's member count.
's member type.
's parameter type.
's return type.
's struct member count.
's type does not match Function <id> '
's type does not match Object <id> '
's type does not match OpFunction's return type.
's type does not match Result Type <id> '
's type does not match Source <id> '
's type is void.
's type.
's vector component count.
's vector element type.
'sample'
'sampler'
'sampler1D'
'sampler2D'
'sampler2DArray'
'sampler2DArrayShadow'
'sampler2DMS'
'sampler2DShadow'
'sampler3D'
'samplerCUBE'
'samplerCube'
'samplerCubeArray'
'shared'
'string'
'struct'
'tbuffer'
'texture'
'texture1D'
'texture2D'
'texture3D'
'textureCUBE'
'textureCube'
'typedef'
'uint'
'uniform'
'vector'
'void'
'volatile'
'x size'
'y size'
'z size'
( 8PX
('8PW
(((((
((((((
(((((('
(((((((
(((((((	
((((((((
(((((((((
((((((((((
(((((((((((
((((((((((((
(((((((((((((((((((
()$^.*+?[]|\-{},:=!
(...)
(9+u9L
(9Q u
(;uKI
(;|$ |
(=umL
(A]_][
(A]_^[
(A^A\][
(A^^][
(A^_][
(A_A\_[
(A_A]A\[
(A_A]A\^
(A_A]_[
(A_A^
(A_A^A\[
(A_A^A\_
(A_A^A\_^[
(A_A^A]A\][
(A_A^A]A\_^][
(A_A^A][
(A_A^_[
(A_A^_]
(A__^[
(D$ E3
(D$ H
(D$ I
(D$ L
(D$ M
(D$ Mc
(D$ f
(D$0D
(D$0H
(D$0I
(D$0L
(D$0M
(D$0f
(D$@H
(D$@I
(D$@L
(D$@M
(D$@f
(D$PE3
(D$PH
(D$PI
(D$PL
(D$Pf
(D$`H
(D$`f
(D$pH
(D$pI
(D$pf
(Did you mean gl_InstanceIndex?)
(Did you mean gl_VertexIndex?)
(DigiCert SHA2 Assured ID Code Signing CA
(DigiCert SHA2 Assured ID Code Signing CA0
(H9iXt
(HcC@H
(L$ D
(L$ H
(L$0f
(L$@H
(L$`f
(L$pH
(M;G`u
(T?j?Y
([]())
(_^][
(channel = 
(end of input).
(except for OpLine, which can be mixed with OpPhi).
(null)
(o:R	
(sext 
(t$ H
(t$0E
(t$0E3
(t$0H
(t$0I
(t$0L
(t$0f
(t$0u&
(t$@H
(t$@I
(t$@f
(t$PH
(t$PI
(t$PL
(t$Pf
(t$`D
(t$`E3
(t$`H
(t$`L
(t$`fff
(t$pI
(t$pL
(t$pf
(trunc 
(u)int16 types can only be in uniform block or buffer storage
(u)int8 types can only be in uniform block or buffer storage
(unknown)
(using array)
(zext 
(|$@H
(|$PD
(|$PI
(|$Pf
(|$`D
(|$`I
(|$pE
(|$pL
) * mat
) -> 
) attempted to be registered!
) can only be formed between a block and a loop header.
) cannot be applied to function id 
) cannot have any Location or Component decorations
) does not match block's predecessor count (
) does not match the type that results from indexing into the Composite (Op
) does not match the type that results from indexing into the base <id> (Op
) does not match the type that results from indexing into the composite (Op
) exceeds the limit (
) for 
) has exceeded the limit (
) in;
) in; 
) may not be decorated with Import Linkage type.
) may not be targeted by both an OpEntryPoint instruction and an OpFunctionCall instruction.
) must have a LinkageAttributes decoration with the Import Linkage type.
) out;
) requires SPIR-V version 
) requires one of these extensions: 
) used for OpTypeFloat.
) used for OpTypeInt.
), while in source code it is (
), words(
)/o>	
): error at column 
)>6{1n
)D$ @
)D$ A
)D$ D
)D$ H
)D$ H+
)D$ H;
)D$ H;F
)D$ I
)D$ L
)D$ f
)D$0A
)D$0D
)D$0E
)D$0H
)D$0H;
)D$0I
)D$0L
)D$0M
)D$0f
)D$@A
)D$@E
)D$@E3
)D$@H
)D$@I
)D$@L
)D$@f
)D$PA
)D$PH
)D$Pu
)D$`H
)D$`L
)D$`f
)L$ f
)L$0H
)L$@L
)L$PH;
)L$PL
)L$`D
)L$pL
)T$ H#
)fA;]
)t -(
)t$ A
)t$ H
)t$ H#
)t$0@
)t$0D
)t$0H
)t$@H
)t$@I
)t$PA
)t$PD
)t$PE
)t$PH
)t$PH#
)t$PI
)t$Pff
)t$`A
)t$`H
)t$`M
)t$pH
)t$pI
)u0fI
)|$PH#
)|$`H
)|$`H#
)|$pH
)|B?d!
*** ERROR! VS input struct member "%s" is missing semantic annotation!
*** Error compiling expression for attribute "%s": %s
*** Error compiling expression for attribute "%s": Expressions on attributes can't use 'this'
*** Error compiling expression for render state %s: %s
*** Error compiling expression for variable "%s": %s
*** Error masking unused parts! Equal sign not found after token "%s"! (line %d)
*** Error masking unused parts! Unknown text found. This is usually caused by a '{' or '}' not tabbed properly or an invalid declaration at the global scope. (line %d):
*** Error parsing annotations! Unknown register set for %s!
*** Error! "%s" can only use Default%d!
*** Error! "%s" can only use Range%d!
*** Error! Attribute "%s": cannot bind to variable "%s" because it is dynamic!
*** Error! Attribute "%s": cannot bind to variable "%s" due to type mismatch!
*** Error! Bindless Texture "%s" is not created with CreateTexture2DWithoutSampler and does not have an attribute.
*** Error! Compiled expression for attribute "%s" is not constant at compile time.
*** Error! Compiled expression for attribute "%s" is too long.
*** Error! Default setting for "%s" cannot be parsed!
*** Error! External cbuffer %s not allowed in static descriptor set.
*** Error! Input color space for "%s" cannot be parsed!
*** Error! Invalid Channel() annotation. Mip algorithm requires at least one input texture arg in texture %s
*** Error! Invalid Channel() annotation. Missing output color channel info for texture %s
*** Error! Invalid channel name %c in texture %s
*** Error! Invalid color channel %s in texture %s
*** Error! Invalid data type for sampler state annotation %s: Must be string
*** Error! Invalid file ending string definition for %s!
*** Error! Invalid hull shader input patch size definition
*** Error! Invalid input texture definition for %s. Missing input color space annotation.
*** Error! Invalid input texture definition for %s. Missing minimum precision annotation.
*** Error! Invalid input texture type for %s
*** Error! Invalid output format %s in texture %s
*** Error! Invalid render attribute definition for %s
*** Error! Invalid render state data type
*** Error! Invalid render state definition for %s
*** Error! Minimum precision for "%s" cannot be parsed!
*** Error! Missing or invalid Channel() annotation in texture %s
*** Error! Missing output texture format for texture %s. Texture variable must either have a Source()/Attribute() annotation or texture processing annotations.
*** Error! Multiply defined render state "%s"
*** Error! Only one basic data type allowed in external constant buffer %s (either all float, all int, or all bool)
*** Error! PatchSize() specification missing in hull shader
*** Error! Range setting for "%s" cannot be parsed!
*** Error! Render state %s is only allowed in %s
*** Error! Sampler %s is inside a descriptor set and has to be immutable. However, sampler state %s is dynamic.
*** Error! SrgbRead value must be true or false
*** Error! Texture %s must have only one Source(), Attribute() or Expression() annotation or texture processing annotations.
*** Error! Texture %s references a Dx9Sampler( %s ), but sampler %s doesn't exist
*** Error! Texture attribute "%s": "%s" is not a shader variable!
*** Error! Texture channel %c appears in multiple channel definitions in texture %s
*** Error! Texture ending string "%s" for "%s" does not start with the '_' character!
*** Error! Texture ending string for "%s" cannot be parsed!
*** Error! Too many channels in channel specification "%s" for texture %s
*** Error! Too many input textures specified for %s
*** Error! Undeclared input texture %s referenced in texture %s
*** Error! Unknown UiType "%s" for %s!
*** Error! Unknown render state %s
*** Error! Unknown variable type for %s!
*** Error! Unsupported input color space %s for texture "%s"
*** Error! UvScaleVar( %s ) on texture %s isn't referencing an existing variable.
*** Error! VS input struct semantic annotation for "%s" cannot be parsed!
*** Error! Value for "%s" cannot be parsed!
*** Error! Value for attribute "%s" cannot be parsed!
*** Error! Value for hull shader input patch size cannot be parsed!
*** Error! Variable "%s" format must be %s with size %d to match the expected source format for source "%s"!
*** Error! Variable "%s" has an annotation string "%s" this is longer than %d characters!
*** Error! Variable "%s" uses too many register elements! Found %d but only supports %d!
*** Error! Variable referenced by UvScaleVar( %s ) on texture %s must be a float or int or vector type.
*** Error! Variable type doesn't match register type for %s!
*** Expression in render state cannot use 'this'
*** Feature source "%s" on bool variable "%s" must stay in the range 0..1!
*** Feature source "%s" on variable "%s" can only be set to an int, bool or float!
*** IR Dump After 
*** IR Dump Before 
*** Unknown source "%s" on variable "%s"!
*** VfxReadAndPrepForDynamicShaderCompileMaterialEditor(1021): Error opening file "%s"!
*** VfxReadAndPrepForDynamicShaderCompileMaterialEditor(1031): Error masking unused parts for "%s"!
***COULDNOTCOMPUTE***
***Error! Variable %s is not an input texture
***Unsupported functionality: 
*+&',-)./00011123456782349567:::;;;<=>?@ABCDD<=>?@ABCDD<=>?@ABCDD88^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^EFGHIJKL^^^^^^^MNOPQRSTUVWXYZ^^^^^^^[\^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^]]]]]]]]]^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^8f
*.vshadercache
*H+H(H
*H+J8
*H+J8E
*H+N(H
*H+O(L
*H+Q8H
*H;Fpu
*I+H8H
*I+K8H
*L+B8I
*L9HHuGL
*StO9>T
*Vc>L
*no default*
++++	
+1.#INF
+C$Hc
+F$Hc
+F,Hc
+G$Hc
+G,Hc
+Hc~@H
+L$<;
+L$<A+
+L$D;
+M<7>
+N|A+
+f)>0'
+fA;]
+h->|
+wBHc
, !<unknown kind #
, 0.0, 1.0
, HLSL parsing failed.
, ID 
, OpTypeRuntimeArray must only be used for the last member of an OpTypeStruct
, OpTypeStruct must not contain an opaque type.
, align 
, at <EOF>
, at offset %d
, binding = %d 
, but access index is 
, but does not immediately precede it in the OpSwitch's target list
, but not via a structured exit
, ccw
, components (1/4 stride) needed are 
, enc 
, f16vec
, float
, float);
, float16_t
, gl_MaxTransformFeedbackInterleavedComponents is 
, id(
, int
, int, int, int
, int, int, int);
, int, int, int, int, int
, ivec
, local_size_y=
, local_size_z=
, minimum stride needed: 
, near %s
, offset 
, operation at 
, or }
, out 
, properties 
, section "
, since it is not specificed as taking an 
, size 
, vec
, which cannot be used with the current execution model:
, which cannot be used with the current execution modes:
, xfb_stride 
,,,,,,,
,,,,;;;
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ@
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJU99
,/<-w
,0<	v
,0<	w
,HR><y5
,HR>O
,HcL$4I
,I<%w
,f16vec
,f16vec4
,float
,float,float
,float16_t
,float16_t,float16_t
,int);
,ivec
,ivec2
,out 
,uTH9n
,vec4
,|%)v
- Corruption of the global PassRegistry
- Pass misconfiguration (e.g.: missing macros)
-%02X
--------A
----<<<
-0.000000e+00
-1.#INF
-> $$ =
-BH>t
-H;.u
-H;L$Xu
-INFINITY
-L;|$Hu
-Stop: 
-bit integer for the addressing model used in the module)
-component vector of
-element array of
-end of input-(
-gl_disable_optimize_glsl
-gl_driver_validate
-gl_shader_hash_d3d
-glsl_to_spirv
-memory-
-spvopt_disable_%s
-sse2
-sse3
-sse4
-tx-struct
-unknown source-
-unknown source-(
-vulkan_disable_convert_to_half
-vulkan_disable_spvopt
-vulkan_disable_spvremapper
-vulkan_force_enable_spvremapper
. Found 
. This may be a bug in the validator.
... Pass execution timing report ...
..om?
.00cfg
.>PJ;I:qE>
.?AUID3DInclude@@
.?AUTDefaultHlslIoResolver@glslang@@
.?AUTDefaultIoResolver@glslang@@
.?AUTDefaultIoResolverBase@glslang@@
.?AUTSmallArrayVector@glslang@@
.?AUTextureUpgradeAndSamplerRemovalTransform@glslang@@
.?AU_Crt_new_delete@std@@
.?AUctype_base@std@@
.?AV<lambda_01ffc428251c6591efb952aeb1f1fe30>@@
.?AV<lambda_036b0122324b0f501a4f4434e8d9e6f9>@@
.?AV<lambda_0411141248eba77a9c463639a47389bc>@@
.?AV<lambda_0503ff8393ee71d69aa5d1d706ab6f8b>@@
.?AV<lambda_05f9bd4027382ebf40db2bd2119ed3cb>@@
.?AV<lambda_062288c46b63d9d2693a7d9de05a087e>@@
.?AV<lambda_06280039500469c79ecb9c9278f0ac32>@@
.?AV<lambda_0792047c7417a5ff41aaedb49c967ed0>@@
.?AV<lambda_07d27ee33325dbe64a8f1f07a4fe3c2d>@@
.?AV<lambda_07f817dbeaf3d9865bacbf61add338cb>@@
.?AV<lambda_08880ea525711c6e131f3cc167fa098e>@@
.?AV<lambda_0984ec0b6499bfe7d8ddeb05cdce8d0c>@@
.?AV<lambda_0ac3814df1aa0a69b33cf6811becd7ad>@@
.?AV<lambda_0c07e5c7eabbcd8231c1a22a360c6d81>@@
.?AV<lambda_0c3eabeb4e438c0c0e13986942eded5e>@@
.?AV<lambda_0d6a2685008b0b2d993b877bc8fea32a>@@
.?AV<lambda_0e1db1da1c34d1a32c2b345482de753d>@@
.?AV<lambda_10716b643b72583dd3a820e8b57cf86e>@@
.?AV<lambda_10f8b2f722ec3835f69c42965f1dad8b>@@
.?AV<lambda_11a5c8746d2be95c7d5f7f525a863fbd>@@
.?AV<lambda_11d94f5d0ff256f6e79732414e9e5a9c>@@
.?AV<lambda_12eb6798e7067e2c93336b24e0efcfbb>@@
.?AV<lambda_1366d13c3fb333dec970673db42963a2>@@
.?AV<lambda_14823c499a4630acb39bd9e0bcea9069>@@
.?AV<lambda_14cf6640565459f5226e10def4356161>@@
.?AV<lambda_15c54aa77d2eda238710d4d556817868>@@
.?AV<lambda_1792f771dd7fbfd0b1494f43946cd742>@@
.?AV<lambda_1793d408620b089ef41984fa6c6441f9>@@
.?AV<lambda_17af366d94c7eed8c6675c221adaa855>@@
.?AV<lambda_18655d8aec938eb5ff62d266c7a387ee>@@
.?AV<lambda_19af8b2f1a485c112cbf0670da392a4a>@@
.?AV<lambda_19cc5b875c4a787d3645ba75376ed3e0>@@
.?AV<lambda_1a19116cc31da7702b1400d4782171fa>@@
.?AV<lambda_1ac62b890c8265586dd91620ae40c22c>@@
.?AV<lambda_1ba44d20c2086e8a69084c83a0d2c5f6>@@
.?AV<lambda_1bbdb9660ae6df668031b5dcebb82ee0>@@
.?AV<lambda_1c74b3c7ed008a44b53a279e9651679f>@@
.?AV<lambda_1cdd8f8c81763ac8d21d1d9329a25404>@@
.?AV<lambda_1ceb9beff9bca449109cddbbb690fbca>@@
.?AV<lambda_1d6e34c8fd901911b1428734f48add86>@@
.?AV<lambda_1e317395c7f6af9a7e631f6d271dd772>@@
.?AV<lambda_1e71e7034f1d44785f047e2810a6eadc>@@
.?AV<lambda_1f0107248d1007b98fb1bc2e829af92b>@@
.?AV<lambda_20d7f077accd1788ec43e4841d711de2>@@
.?AV<lambda_20faf938f82734fd864f99b72fd734c6>@@
.?AV<lambda_22b7c53d205bb0e082c6c45a327eb8a1>@@
.?AV<lambda_23151dea08fd01754418e4b5763af166>@@
.?AV<lambda_23f9443c09be6465fcc95d5ceb558c09>@@
.?AV<lambda_24d49e2023121e234443d7934b0ad15e>@@
.?AV<lambda_25177d6fcde1e1af1d8e7722d7123895>@@
.?AV<lambda_252cab0c7cab4dd1b5cdc3bfda1935e8>@@
.?AV<lambda_25d8229d993b8a3afea4bdd447121f58>@@
.?AV<lambda_25fca9fd8570c56c8bb6a44415401f25>@@
.?AV<lambda_261a3e6e1ec3e4437012e89924706a04>@@
.?AV<lambda_26540fe2da4c07d0acbda1620bfe4b93>@@
.?AV<lambda_2780c4e9ddc8b129b840b3fbb49b67ee>@@
.?AV<lambda_27875edbc1ca260bd0dbc37981fbfca8>@@
.?AV<lambda_29ec1c9eaf1275f3393e110e141fe32b>@@
.?AV<lambda_2b40bba6e8bcb88a2135854a4a7aae87>@@
.?AV<lambda_2b7abdc7110501d2321c069909dcb6fa>@@
.?AV<lambda_2b9c55c142b3aab4657f9db3933b91bf>@@
.?AV<lambda_2d1aa8c8b8a31672a9acd714dff00ff6>@@
.?AV<lambda_2e0006f00d05a5e71d996e7ca1d428aa>@@
.?AV<lambda_2e9c004cb7c0f18ea777bd1128413ba4>@@
.?AV<lambda_2f23002ed3cff2ed437d30eaf5b18ae4>@@
.?AV<lambda_302d23ed0309ef191e9bb931824eadd5>@@
.?AV<lambda_30f08908363f2362ab0102c9e171bcbb>@@
.?AV<lambda_31acd0ab0ab80592e3293f3b0d7d534c>@@
.?AV<lambda_32279f51d3979f8f19efec8095eeae74>@@
.?AV<lambda_340c6aa19c18458fb3b046edf57a5725>@@
.?AV<lambda_34146174d9393249fe4e8f86965a5f60>@@
.?AV<lambda_343eb728bd434940d770b6aab7059d44>@@
.?AV<lambda_3490bb01f8cd1c756f671c034b3c8e6d>@@
.?AV<lambda_34b741d09247c474a01a026e22213061>@@
.?AV<lambda_362f13e0d7944f853ddeccf3a9fe5b40>@@
.?AV<lambda_3661e5d99fba800218ded5d504aa578e>@@
.?AV<lambda_36c822da39e07217ddda3468d22e7af8>@@
.?AV<lambda_36e8d35ca455e35cc0873497151b3e10>@@
.?AV<lambda_36f031ab63ab8369c348433b96d0b293>@@
.?AV<lambda_370b69eadd70f22054b1c30c1dc51758>@@
.?AV<lambda_370cfa714bd2c94f87caeac6d78ccecd>@@
.?AV<lambda_37d5734cce75b6a6e819db22ed23c3e2>@@
.?AV<lambda_391427bec0e80f65e9c551df35100038>@@
.?AV<lambda_39ab6c89a8d28eed07ccfdb91d8058e4>@@
.?AV<lambda_3a2d7c6535cbd4a2a51799c921a5b22c>@@
.?AV<lambda_3be5fb318978bac395152b41025a3909>@@
.?AV<lambda_3cf51cfda149c3dc828837f9aa01a817>@@
.?AV<lambda_3de472c4302e94c4ca87c45b8a148f78>@@
.?AV<lambda_3e91840a46700b1ac839250c65a9d178>@@
.?AV<lambda_3f9f74a42afb69d2dd77b55075aa932b>@@
.?AV<lambda_3fe4fdde58ae29958f86749cebc23a65>@@
.?AV<lambda_406b8d16ceb0d8a0e36cd0c6a0979c6e>@@
.?AV<lambda_418e5805a236cb2b654d053a3785f410>@@
.?AV<lambda_426a1a653046655c06bad2aa3be2003d>@@
.?AV<lambda_4344e8af90db0d76970e3aecbcdd6c11>@@
.?AV<lambda_43a3cde53f38fef1fc46f4a0027fd21e>@@
.?AV<lambda_43c7876dbf18a782dacb3a40118d3662>@@
.?AV<lambda_442253c6c6bc742da1f5915a6b1df96e>@@
.?AV<lambda_4482818b4ee06e2bdb585dfce3428ff3>@@
.?AV<lambda_45a5fd75ceea63f9d6cfba4c1ffed6f7>@@
.?AV<lambda_477d6dc9f5db073226e24bf3420e5439>@@
.?AV<lambda_49d682f1cbbed649429b725cf69f6363>@@
.?AV<lambda_4a49bb9d7a4049809f2bc554c4c3c3e5>@@
.?AV<lambda_4ac7d3f9b4580f17091aaca25b7bd86f>@@
.?AV<lambda_4bcf1410f105d72114e98eec19f131a8>@@
.?AV<lambda_4df0f3992474302eace6a0f68ea42ff8>@@
.?AV<lambda_4fb1f45682f18b56ab6ff42084b9d2d3>@@
.?AV<lambda_4ff8dc3560ca2860d9f7020b0dde7262>@@
.?AV<lambda_50533d45351b0870252aba24ee3420e9>@@
.?AV<lambda_51bfecc9feb95cf49d4bc900e463652d>@@
.?AV<lambda_51c48863abd211425f8d88fd7a2dee83>@@
.?AV<lambda_522f1522a06425135eaaee35f4fba59f>@@
.?AV<lambda_53cc4d1233d5656f9f5dfb5ccde26041>@@
.?AV<lambda_5821416b0a0bfcab2bfc9554b085b5ce>@@
.?AV<lambda_5a9befa26e0425846056061cbcae7bb3>@@
.?AV<lambda_5ae77915c9f5a5e775fbeedeca03b605>@@
.?AV<lambda_5b53e61450e62cd9feacd922abb7a0f3>@@
.?AV<lambda_5bc762e90a021a1da765756da98dd9a6>@@
.?AV<lambda_5c69c7837308a99573bb50dfee2d77c5>@@
.?AV<lambda_5ea627c122ca41b71bb9501e08f0e010>@@
.?AV<lambda_5f4ea400e0ddbd6755db6901cc98d660>@@
.?AV<lambda_5f8eb249afcfd55bfc1e1be03f58d69e>@@
.?AV<lambda_5fa3b6280f053d5825d8cbbd090a7170>@@
.?AV<lambda_60a344ece223c9d2b9f0eb34acd70c85>@@
.?AV<lambda_61de584c4ffdfb505b8eeaf633c2da3b>@@
.?AV<lambda_63b7608ec24adbb4d4a5cda9355ef017>@@
.?AV<lambda_63df440b627fe3b66920486c6a4a4f03>@@
.?AV<lambda_653be034a8f76f8784719f9d0505e140>@@
.?AV<lambda_65a49533954e833ab4661c42a56341e5>@@
.?AV<lambda_65cf23f6c5d75970d8e858261ef648f6>@@
.?AV<lambda_661abbfbc0170f20ffc70e7331b8e395>@@
.?AV<lambda_6722a7ce5d359a6c81b89f4fa4d3d1ae>@@
.?AV<lambda_6908682808afd58985c7c7f4846ef48a>@@
.?AV<lambda_69cf2512ec1d31cf461ac23e263cea3e>@@
.?AV<lambda_69f44845bb24918cf4f0b193e6016e32>@@
.?AV<lambda_6a2a17af546787c90201cfb5aff929f6>@@
.?AV<lambda_6aa6c7a0590002bad55a66d467f3d0a2>@@
.?AV<lambda_6b50337b8c58248655d9ea6386811a20>@@
.?AV<lambda_6c7e3d741f275ee56da0787630eef4bc>@@
.?AV<lambda_6cab6c809bd25f59c8e21fe569e5d5bd>@@
.?AV<lambda_6d703b06bbe54c013ff32f1972d5e0a7>@@
.?AV<lambda_6dd3e462556884c4c36baac77c37de23>@@
.?AV<lambda_6e43a4d854427448d38e243c4fd9a3f9>@@
.?AV<lambda_6e68544d38f2eaddd8ed2eec5ba6ccbf>@@
.?AV<lambda_6f294285e33e7c263c1752ff23cabb55>@@
.?AV<lambda_6f57a0b4562e0e24aeae17185d9fe66a>@@
.?AV<lambda_701806cccde7a1cccab79c3f0bd849b3>@@
.?AV<lambda_70695ccc602e271d61c9f163429eaee7>@@
.?AV<lambda_706f5418d0eb52208014b0cf64da94b1>@@
.?AV<lambda_71715a81194b36ac84f4ca6de376ca3d>@@
.?AV<lambda_72004a64182b4cb0dcbab34f65f5fea6>@@
.?AV<lambda_72beae9e6848c4b6d0fa97d3ea5c8957>@@
.?AV<lambda_736311db28f9dc546d2697742bbb82a2>@@
.?AV<lambda_73716f6ee8f23dc8fece4ff79772f154>@@
.?AV<lambda_7381b51e03bb3a7623466c7d2520629d>@@
.?AV<lambda_7387cec2996bdc169a1be3e1ee3016a0>@@
.?AV<lambda_7553b861845ee7ea9120930bdc59901d>@@
.?AV<lambda_75ae2d1ba34816fdb2754b7da05d6468>@@
.?AV<lambda_761b09a1410b9ca815259f56a5861dfe>@@
.?AV<lambda_765578e4360a5f16c4ef5fe2ee0d0f15>@@
.?AV<lambda_77c673e4a3f31836b25db14c560c99c8>@@
.?AV<lambda_7992c64b7c8bba8096b295e144d58f5d>@@
.?AV<lambda_7bd8837d05ad10c21a5a9e82ebb97ca1>@@
.?AV<lambda_7c75f19d35dc15769e9d10f113aa6a27>@@
.?AV<lambda_7d1aa0756ca7d77abb30b0d9bf0e97aa>@@
.?AV<lambda_7d62b5eae68b1ec07b84993c7238bda7>@@
.?AV<lambda_7dff1d1ef28797162113e5266e16a76c>@@
.?AV<lambda_7fe36572584116c0ac7f4991ca16428b>@@
.?AV<lambda_8111232f052d29434fde72e8dfd21b99>@@
.?AV<lambda_8143fa827ac1e59ed9245a9ca5eebc51>@@
.?AV<lambda_8203fb147847308a614da2019ca5ec8e>@@
.?AV<lambda_829c6792a011d6912cee5ac4c3ce7717>@@
.?AV<lambda_8400c9e298ae4004f54bedc65f5688b8>@@
.?AV<lambda_8405988000d592c8bb318c31d188d44a>@@
.?AV<lambda_863a96988a0d4d997a327bb5821c7d91>@@
.?AV<lambda_866bd0d718fdb6078d0720ded39fcfe1>@@
.?AV<lambda_87d58d4b4ac63515e503f036475ab536>@@
.?AV<lambda_8823ce76b6a799c1d3a47fdbf2402f00>@@
.?AV<lambda_8a6d3e888e42001b1c775c12340ad4e7>@@
.?AV<lambda_8aeeb3be0360b2292a89781e92765f05>@@
.?AV<lambda_8b3bd07082e685ed39dd8313736aa419>@@
.?AV<lambda_8bea274c30fee273fa7c52ee649dcdf5>@@
.?AV<lambda_8bf87c5ed827dbeb735303469d7ad79e>@@
.?AV<lambda_8c20947c49e79f408e04181559b5e404>@@
.?AV<lambda_8c335f050ce4ae0f7d64fc361919c995>@@
.?AV<lambda_8cb1225ab70e46ffb2468e5e374f5af7>@@
.?AV<lambda_8daace18515ebd8766fa02300b8beac9>@@
.?AV<lambda_8e7a7d5c2721dcd9a525913659a11afd>@@
.?AV<lambda_920470c98a7299e6099f79150ecef4f5>@@
.?AV<lambda_92087d7cff5973ca54cc61431b9c4be4>@@
.?AV<lambda_924a05e004da9b6e7bf01385df9c5614>@@
.?AV<lambda_929f7fa3ec77584737cffec07b4c5919>@@
.?AV<lambda_92c6995e04e4182d4a37acc76c82cc03>@@
.?AV<lambda_92fb7e2a0d1dcbeb524d7967da973923>@@
.?AV<lambda_92fbbba0715d09845caa0401598bcc69>@@
.?AV<lambda_93cbb5d8f5ca36107e29a49f83b027e6>@@
.?AV<lambda_93eca927d10293567694d3d90c8f4d45>@@
.?AV<lambda_94823a752238d95b4a0c6a25072b5a0a>@@
.?AV<lambda_956b2d023e429dafd24c05ff68b4ab70>@@
.?AV<lambda_963319738e0d8c2ada194af552add1e1>@@
.?AV<lambda_97c10da097dc246e45540f12187a6a9d>@@
.?AV<lambda_97c31520b716ada2abcfd96063dc812e>@@
.?AV<lambda_98026a82ba23c51f2904fb9d9b555cb4>@@
.?AV<lambda_9901ce9041bfd69c5a7b289175f33fea>@@
.?AV<lambda_995834119c8cd4d77d33c0453322c501>@@
.?AV<lambda_999ad67b4551f8eba12c9acc66459e0e>@@
.?AV<lambda_9a0581c3afe3f86dd461d08bdb54a5d0>@@
.?AV<lambda_9d37987cd1408589cc718c11aa45cebf>@@
.?AV<lambda_9d4d115a05a33ef1a04962e67662efa9>@@
.?AV<lambda_9d7b874c18a31c2cfd1a053e340f8caa>@@
.?AV<lambda_9e5f7ef39f67170e4bc18b123f4a11fa>@@
.?AV<lambda_9ed7022c78caf3e364b68e2a58727d60>@@
.?AV<lambda_9efc63f929498b7c2a58743de0a5009a>@@
.?AV<lambda_9fdd24e47da11df9a85b9c398cd749e8>@@
.?AV<lambda_a1c13600da47b7f3b868360a4728392e>@@
.?AV<lambda_a1f0188f5582b0a3ce6348bcd61879d4>@@
.?AV<lambda_a1f9fd54ad97dbb89411f34fc679d30a>@@
.?AV<lambda_a23da230d44deb90b24f8e3ffb2d2f0e>@@
.?AV<lambda_a2bd8d6171d9d4eb196fe1fe40af23f3>@@
.?AV<lambda_a2c49d1c64f313e0f5442d36615f0970>@@
.?AV<lambda_a2d719a2bdfc26725c8e7a7bc0e668da>@@
.?AV<lambda_a4e706d0e89efdc5fdaa5887fa0a91d6>@@
.?AV<lambda_a541e2493269ea02d579134ecff861a5>@@
.?AV<lambda_a625787163a827b34adc9d37af4f5015>@@
.?AV<lambda_a7d7a1ea8f50b1a4f181568b24f193f5>@@
.?AV<lambda_a8958dfd16014aa445e5f04fcd6953dc>@@
.?AV<lambda_a9f83ffd4858fb9a05ae5cbc0782b60e>@@
.?AV<lambda_aa029af28ac5dbb7b3d79a3066171f8f>@@
.?AV<lambda_aa7a07c9f0fca2dbf25755e77c13c866>@@
.?AV<lambda_abe24b5a300fed7bf4460a0f57ec95c4>@@
.?AV<lambda_ae229126bdd0e6bd2c9c09927f8bc2cb>@@
.?AV<lambda_ae34c7888503b2594012e04b23aec424>@@
.?AV<lambda_b137a0a97c239f0430aec971e5c0ea91>@@
.?AV<lambda_b24c75b79e2cb76f89ff7304e786770b>@@
.?AV<lambda_b259b4d5852fe1044349fc3b57fb2e74>@@
.?AV<lambda_b3e332b63f865ca53a0afe1c246aa1a1>@@
.?AV<lambda_b425c593b3d7da4fb0bd491d3999b45a>@@
.?AV<lambda_b475553a12d831cfa4f6231633905074>@@
.?AV<lambda_b522294996e2c97f9922f8403868f6f7>@@
.?AV<lambda_b525a7f4ea3217679bd3bcdc0af29188>@@
.?AV<lambda_b61727b5629d3f2904f12a33f98ec2aa>@@
.?AV<lambda_b6d60654ddb6767d886de4b94b3013e5>@@
.?AV<lambda_b73d8282cf09cfaddcd064ec244fe3d3>@@
.?AV<lambda_b77debf4353e319f811a60c0589594d4>@@
.?AV<lambda_b7ecfd73dd291c3ad9ea0c46e181100f>@@
.?AV<lambda_b7f8cb0c8cc66132c23918eef857c1ad>@@
.?AV<lambda_baea9d5bd3f3a596b0e3fbb492b9979e>@@
.?AV<lambda_bbf9dee55213fd1547b1a8fa978bbf50>@@
.?AV<lambda_bd4eef13987434eafc3bc93c0f827c39>@@
.?AV<lambda_bdd9827a4a336eebb62ca7865bdc6d6f>@@
.?AV<lambda_be46c0af90919a18f1986b5d9b53c923>@@
.?AV<lambda_be80022a55897b5a5fd86c47ec498ba0>@@
.?AV<lambda_be8cb7d76c4b5ac16ee557374337e850>@@
.?AV<lambda_c0e83da0bf2772c0cb8c9d27ec15bb8b>@@
.?AV<lambda_c176fed0d246e6d32a46e518fe40da15>@@
.?AV<lambda_c17efbb09d7a2e573b2731e3a18e58b4>@@
.?AV<lambda_c1eea946de7690343fec7889d992a49b>@@
.?AV<lambda_c30e468b5ea8a63d56078f24649e9692>@@
.?AV<lambda_c51483247159358bfc0e969aff525b87>@@
.?AV<lambda_c517a1274f30879db5a1c07129337ecb>@@
.?AV<lambda_c58a90fefafdd186486d2978c58b1412>@@
.?AV<lambda_c59a645df007c94cc90294ba17d8f048>@@
.?AV<lambda_c8320ee4f3749878690a96a8764b3afd>@@
.?AV<lambda_c874111fe549042d84de9366378b3909>@@
.?AV<lambda_c922c10d00445d1864098cace0215add>@@
.?AV<lambda_c94942080aa4bef67bdd1e3c2b57d6fa>@@
.?AV<lambda_c9a760d9d66599a613a2b4f43eacf297>@@
.?AV<lambda_c9ffe3c5132425f5e36d75f7b0f5e84b>@@
.?AV<lambda_ca6a5e410f265f083c2492aca9bf6e02>@@
.?AV<lambda_cad2f68fd17da95f214394ac88507ed5>@@
.?AV<lambda_cadf9a7c0a9a48b2973c35b3073213e3>@@
.?AV<lambda_cc593e800dea0eaa4e243b2f04fb6bdd>@@
.?AV<lambda_cd3e2fc2020a3a0e7095808ea5ea1075>@@
.?AV<lambda_ce6003c0d18fbc8e971dd4fddbb030b4>@@
.?AV<lambda_cee96e50ebd2ccfe9b4a886374be4c3c>@@
.?AV<lambda_cf9e64f24727109d988a70c75ad28b66>@@
.?AV<lambda_cfe3c26e7b26e76e1ae4ac10215de243>@@
.?AV<lambda_d25df1932b73922ec64c87a0e6d3cee0>@@
.?AV<lambda_d2debe841b156100770a356060ba3309>@@
.?AV<lambda_d30a3c7d8d071fd8ad14e562a7390e3d>@@
.?AV<lambda_d38c58a4ba11b0ddfb6efdff1d25afb8>@@
.?AV<lambda_d3aeb95d7ad19adefcd39a99507ca4c5>@@
.?AV<lambda_d4282bc1c30d60c850c997232050960d>@@
.?AV<lambda_d4b7308d8207db4e1062abb7c034bbe2>@@
.?AV<lambda_d4c13c055296cc3f0f372cc07a6dd62a>@@
.?AV<lambda_d5ed91c87dab26dead301cd56f036ea2>@@
.?AV<lambda_d61d9be295fb9564c197038b008b38d1>@@
.?AV<lambda_d64e4adb0f77e9154acb6a8759922310>@@
.?AV<lambda_d75fe7aa8a46eff945457ee1f3622143>@@
.?AV<lambda_d7a06087342bc567669ac6231c659b2a>@@
.?AV<lambda_d8ba002339af58495815303bad35aacc>@@
.?AV<lambda_d8fc16f5e31991cf01dada3d69129c65>@@
.?AV<lambda_d9231b5d3c00eb724b37d8bae33cf148>@@
.?AV<lambda_d99d59b990d3a72ce75812e6c9562807>@@
.?AV<lambda_d9a3bfb820364132dc9ffebe479a9270>@@
.?AV<lambda_da7376a42906a93590e09d6a61289d2a>@@
.?AV<lambda_daa3bf1adbed79e9ffeaa4f9b2225c4d>@@
.?AV<lambda_dad8c3d0dcd034e04683c27674c4b373>@@
.?AV<lambda_db8b3257dda4a6180359ce7af5b30405>@@
.?AV<lambda_dc41538dbe6f41001e4442372a856620>@@
.?AV<lambda_dcb7f621d48d829353d5bbd01bb3abdb>@@
.?AV<lambda_dcc99e0db608dc23fc72a9e2a32a50ce>@@
.?AV<lambda_dd58bc0557ade0dd039347b4d5d00323>@@
.?AV<lambda_de07a45b7c38d0f09bfc5852f986aa27>@@
.?AV<lambda_de9c0a1cbcb489fcc524fb8a3ea9837b>@@
.?AV<lambda_dfaa4191901394cf26fa2dee6298becd>@@
.?AV<lambda_e062b110bed152260c6c726d0a432c5e>@@
.?AV<lambda_e196e437f6451e8ffd5040ea9d27bd06>@@
.?AV<lambda_e20b6704397722a502a585b94ebe94ca>@@
.?AV<lambda_e21f653c67f262e33e69d132bc515dd6>@@
.?AV<lambda_e2f496aaa00a260d65b837f3686f5ccc>@@
.?AV<lambda_e3ae43eb6d5dfad18df17d54b1617745>@@
.?AV<lambda_e43a73ea13a53bf6127a7da185761b1f>@@
.?AV<lambda_e495fe2bdc48d4f9e5cdc8f3aa07eba6>@@
.?AV<lambda_e4fc45e14be4e6a3d4540031311acd64>@@
.?AV<lambda_e5267a1a7ae0de147e41df50075e0231>@@
.?AV<lambda_e593c26e18c9aa9a737d03e07d304668>@@
.?AV<lambda_e790478f58af5fa6a03d36914f4c8fac>@@
.?AV<lambda_e8b3d6c17a137f553b762b1468e8e274>@@
.?AV<lambda_e9b2fa05b69ad318456ccd0881aaf04d>@@
.?AV<lambda_e9c936cb93c6671e8303a180044e9b47>@@
.?AV<lambda_ead18916832bed4b770811689fc4a172>@@
.?AV<lambda_ee7e5973d0031afdb7c7341041506ab6>@@
.?AV<lambda_ef3e14b66c1beb77699f812282f54486>@@
.?AV<lambda_f00d22e87ab49c41fd33e5728eb20288>@@
.?AV<lambda_f069030dab28c5d7b0da7c60889effce>@@
.?AV<lambda_f085be6385708b574f76b75238f496ad>@@
.?AV<lambda_f10ab3304ff1ffe3fd1b809e45980764>@@
.?AV<lambda_f22b123cc92db1a759a8cdd451463f54>@@
.?AV<lambda_f26ff537cf3e5ac2c268f26cf2368f66>@@
.?AV<lambda_f3436c0263e5a5eabcd5f6aab573dc71>@@
.?AV<lambda_f4642c729abc98c1e08ad1de1f2deff0>@@
.?AV<lambda_f88e22d98dadda0f2976808fedf0ae91>@@
.?AV<lambda_fa07fca1029f4ecef374e9b13837a8ce>@@
.?AV<lambda_fa84d0676fe9158ce1e653456c993ac3>@@
.?AV<lambda_fa94c8d664a772f6ffda43941dd657d5>@@
.?AV<lambda_fe3aa2a41614c51afa978d6d360dd9e7>@@
.?AV<lambda_feb28a8fc1d136f28c08dbfc9b18f561>@@
.?AV<lambda_febccfbcc58b95efa7e80f2f3c87dcf4>@@
.?AV<lambda_febfd70b75a718cae1f41a0ddf7af2d9>@@
.?AV<lambda_fed47b6adffccb47b9ead2f3bf022bf8>@@
.?AV<lambda_ff01092110b3f2733cd5c2048f2d4709>@@
.?AV<lambda_ff61b666811aed06f4e22bed8b5e77b5>@@
.?AV<lambda_ffa1bef1e94074a3f33f3ed63b690dea>@@
.?AV<lambda_ffd3c9ba70f65cd0e524b13530faa5fa>@@
.?AV?$CFmtStrN@$0BAA@$0A@@@
.?AV?$IntrusiveList@VInstruction@opt@spvtools@@@utils@spvtools@@
.?AV?$IntrusiveNodeBase@VInstruction@opt@spvtools@@@utils@spvtools@@
.?AV?$SmallVector@I$01@utils@spvtools@@
.?AV?$ValueMapCallbackVH@PEBVValue@llvm@@VWeakVH@2@U?$ValueMapConfig@PEBVValue@llvm@@@2@@llvm@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@AEBVDecoration@56@AEBVInstruction@56@11@ZQEAV3456@AEBV856@AEBV956@AEBV956@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAPEBDAEAW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0HL@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0HM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IB@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IN@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IP@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0JF@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0JJ@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0KP@$$CBDAEBW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Binder@U_Unforced@std@@P8DefUseManager@analysis@opt@spvtools@@EAAXPEAVInstruction@56@@ZQEAV3456@AEBU?$_Ph@$00@2@@std@@
.?AV?$_Func_base@II@std@@
.?AV?$_Func_base@PEBV?$vector@PEAUDominatorTreeNode@opt@spvtools@@V?$allocator@PEAUDominatorTreeNode@opt@spvtools@@@std@@@std@@PEBUDominatorTreeNode@opt@spvtools@@@std@@
.?AV?$_Func_base@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@std@@PEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_base@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@std@@PEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_base@PEBVBasicBlock@val@spvtools@@PEBV123@@std@@
.?AV?$_Func_base@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std@@
.?AV?$_Func_base@PEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@std@@
.?AV?$_Func_base@PEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEBV1234@PEAVConstantManager@234@@std@@
.?AV?$_Func_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@
.?AV?$_Func_base@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@
.?AV?$_Func_base@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_base@XAEAI@std@@
.?AV?$_Func_base@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@
.?AV?$_Func_base@XAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_base@XI@std@@
.?AV?$_Func_base@XPEAI@std@@
.?AV?$_Func_base@XPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_base@XPEAVBlock@spv@@@std@@
.?AV?$_Func_base@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_base@XPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_base@XPEAVTIntermTyped@glslang@@PEAV12@PEAV12@PEAV12@_N@std@@
.?AV?$_Func_base@XPEBI@std@@
.?AV?$_Func_base@XPEBUDominatorTreeNode@opt@spvtools@@@std@@
.?AV?$_Func_base@XPEBUDominatorTreeNode@opt@spvtools@@PEBU123@@std@@
.?AV?$_Func_base@XPEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_base@XPEBVBasicBlock@opt@spvtools@@PEBV123@@std@@
.?AV?$_Func_base@XPEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_base@XPEBVBasicBlock@val@spvtools@@PEBV123@@std@@
.?AV?$_Func_base@XPEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_base@XW4Extension@spvtools@@@std@@
.?AV?$_Func_base@XW4SpvCapability_@@@std@@
.?AV?$_Func_base@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std@@
.?AV?$_Func_base@_NAEAVTType@glslang@@AEAV12@@std@@
.?AV?$_Func_base@_NAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_base@_NAEBVTType@glslang@@AEBV12@AEBV12@@std@@
.?AV?$_Func_base@_NAEBVTType@glslang@@AEBV12@W4TOperator@2@H@std@@
.?AV?$_Func_base@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@23@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@
.?AV?$_Func_base@_NI@std@@
.?AV?$_Func_base@_NPEAI@std@@
.?AV?$_Func_base@_NPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_base@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_base@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@std@@
.?AV?$_Func_base@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_base@_NPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_base@_NPEAVInstruction@opt@spvtools@@PEAIPEAIPEAI@std@@
.?AV?$_Func_base@_NPEBI@std@@
.?AV?$_Func_base@_NPEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_base@_NW4Op@spv@@I@std@@
.?AV?$_Func_base@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@
.?AV?$_Func_impl@P6A?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@ZV?$allocator@H@2@V12@I@std@@
.?AV?$_Func_impl@P6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@ZV?$allocator@H@8@PEBV1234@PEAV534@PEAV634@AEBV78@@std@@
.?AV?$_Func_impl@P6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@1PEAVConstantManager@234@@ZV?$allocator@H@std@@PEBV1234@PEBV5234@PEBV1234@PEBV1234@PEAV6234@@std@@
.?AV?$_Func_impl@P6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZV?$allocator@H@2@XAEBV12@@std@@
.?AV?$_Func_impl@P6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@ZV?$allocator@H@6@_NPEAV123@PEAV423@AEBV56@@std@@
.?AV?$_Func_impl@V<lambda_01ffc428251c6591efb952aeb1f1fe30>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_036b0122324b0f501a4f4434e8d9e6f9>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_0411141248eba77a9c463639a47389bc>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_0503ff8393ee71d69aa5d1d706ab6f8b>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_05f9bd4027382ebf40db2bd2119ed3cb>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_062288c46b63d9d2693a7d9de05a087e>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_06280039500469c79ecb9c9278f0ac32>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_0792047c7417a5ff41aaedb49c967ed0>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_07d27ee33325dbe64a8f1f07a4fe3c2d>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_07f817dbeaf3d9865bacbf61add338cb>@@V?$allocator@H@std@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std@@
.?AV?$_Func_impl@V<lambda_08880ea525711c6e131f3cc167fa098e>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_0984ec0b6499bfe7d8ddeb05cdce8d0c>@@V?$allocator@H@std@@XPEBUDominatorTreeNode@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_0ac3814df1aa0a69b33cf6811becd7ad>@@V?$allocator@H@std@@XPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_0c07e5c7eabbcd8231c1a22a360c6d81>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_0c3eabeb4e438c0c0e13986942eded5e>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_0d6a2685008b0b2d993b877bc8fea32a>@@V?$allocator@H@std@@XPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_0e1db1da1c34d1a32c2b345482de753d>@@V?$allocator@H@std@@_NAEBVTType@glslang@@AEBV45@W4TOperator@5@H@std@@
.?AV?$_Func_impl@V<lambda_10716b643b72583dd3a820e8b57cf86e>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_10f8b2f722ec3835f69c42965f1dad8b>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_11a5c8746d2be95c7d5f7f525a863fbd>@@V?$allocator@H@std@@XPEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_11d94f5d0ff256f6e79732414e9e5a9c>@@V?$allocator@H@std@@XPEBI@std@@
.?AV?$_Func_impl@V<lambda_12eb6798e7067e2c93336b24e0efcfbb>@@V?$allocator@H@std@@XPEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_1366d13c3fb333dec970673db42963a2>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_14823c499a4630acb39bd9e0bcea9069>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_14cf6640565459f5226e10def4356161>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_15c54aa77d2eda238710d4d556817868>@@V?$allocator@H@std@@PEBVBasicBlock@val@spvtools@@PEBV456@@std@@
.?AV?$_Func_impl@V<lambda_1792f771dd7fbfd0b1494f43946cd742>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_1793d408620b089ef41984fa6c6441f9>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_17af366d94c7eed8c6675c221adaa855>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_18655d8aec938eb5ff62d266c7a387ee>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_19af8b2f1a485c112cbf0670da392a4a>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_19cc5b875c4a787d3645ba75376ed3e0>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_1a19116cc31da7702b1400d4782171fa>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_1ac62b890c8265586dd91620ae40c22c>@@V?$allocator@H@std@@_NAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_1ba44d20c2086e8a69084c83a0d2c5f6>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_1bbdb9660ae6df668031b5dcebb82ee0>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_1c74b3c7ed008a44b53a279e9651679f>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_1cdd8f8c81763ac8d21d1d9329a25404>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_1ceb9beff9bca449109cddbbb690fbca>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_1d6e34c8fd901911b1428734f48add86>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_1e317395c7f6af9a7e631f6d271dd772>@@V?$allocator@H@std@@XW4Extension@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_1e71e7034f1d44785f047e2810a6eadc>@@V?$allocator@H@std@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_1f0107248d1007b98fb1bc2e829af92b>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_20d7f077accd1788ec43e4841d711de2>@@V?$allocator@H@std@@XW4SpvCapability_@@@std@@
.?AV?$_Func_impl@V<lambda_20faf938f82734fd864f99b72fd734c6>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@PEBV456@@std@@
.?AV?$_Func_impl@V<lambda_22b7c53d205bb0e082c6c45a327eb8a1>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_23151dea08fd01754418e4b5763af166>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_23f9443c09be6465fcc95d5ceb558c09>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_24d49e2023121e234443d7934b0ad15e>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_25177d6fcde1e1af1d8e7722d7123895>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_252cab0c7cab4dd1b5cdc3bfda1935e8>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_25d8229d993b8a3afea4bdd447121f58>@@V?$allocator@H@std@@XPEAVBlock@spv@@@std@@
.?AV?$_Func_impl@V<lambda_25fca9fd8570c56c8bb6a44415401f25>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_261a3e6e1ec3e4437012e89924706a04>@@V?$allocator@H@std@@XAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_26540fe2da4c07d0acbda1620bfe4b93>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_2780c4e9ddc8b129b840b3fbb49b67ee>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_27875edbc1ca260bd0dbc37981fbfca8>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_29ec1c9eaf1275f3393e110e141fe32b>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_2b40bba6e8bcb88a2135854a4a7aae87>@@V?$allocator@H@std@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std@@
.?AV?$_Func_impl@V<lambda_2b7abdc7110501d2321c069909dcb6fa>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_2b9c55c142b3aab4657f9db3933b91bf>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_2d1aa8c8b8a31672a9acd714dff00ff6>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_2e0006f00d05a5e71d996e7ca1d428aa>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_2e9c004cb7c0f18ea777bd1128413ba4>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_2f23002ed3cff2ed437d30eaf5b18ae4>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_302d23ed0309ef191e9bb931824eadd5>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_30f08908363f2362ab0102c9e171bcbb>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_31acd0ab0ab80592e3293f3b0d7d534c>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_32279f51d3979f8f19efec8095eeae74>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_340c6aa19c18458fb3b046edf57a5725>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_34146174d9393249fe4e8f86965a5f60>@@V?$allocator@H@std@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_343eb728bd434940d770b6aab7059d44>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_3490bb01f8cd1c756f671c034b3c8e6d>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_34b741d09247c474a01a026e22213061>@@V?$allocator@H@std@@_NPEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_362f13e0d7944f853ddeccf3a9fe5b40>@@V?$allocator@H@std@@XPEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_3661e5d99fba800218ded5d504aa578e>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_36c822da39e07217ddda3468d22e7af8>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_36e8d35ca455e35cc0873497151b3e10>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_36f031ab63ab8369c348433b96d0b293>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_370b69eadd70f22054b1c30c1dc51758>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_370cfa714bd2c94f87caeac6d78ccecd>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_37d5734cce75b6a6e819db22ed23c3e2>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_391427bec0e80f65e9c551df35100038>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_39ab6c89a8d28eed07ccfdb91d8058e4>@@V?$allocator@H@std@@XW4SpvCapability_@@@std@@
.?AV?$_Func_impl@V<lambda_3a2d7c6535cbd4a2a51799c921a5b22c>@@V?$allocator@H@std@@_NPEAI@std@@
.?AV?$_Func_impl@V<lambda_3be5fb318978bac395152b41025a3909>@@V?$allocator@H@std@@XPEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_3cf51cfda149c3dc828837f9aa01a817>@@V?$allocator@H@std@@_NAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_3de472c4302e94c4ca87c45b8a148f78>@@V?$allocator@H@std@@_NPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_3e91840a46700b1ac839250c65a9d178>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_3f9f74a42afb69d2dd77b55075aa932b>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_3fe4fdde58ae29958f86749cebc23a65>@@V?$allocator@H@std@@_NPEAI@std@@
.?AV?$_Func_impl@V<lambda_406b8d16ceb0d8a0e36cd0c6a0979c6e>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_418e5805a236cb2b654d053a3785f410>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_426a1a653046655c06bad2aa3be2003d>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_4344e8af90db0d76970e3aecbcdd6c11>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_43a3cde53f38fef1fc46f4a0027fd21e>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_43c7876dbf18a782dacb3a40118d3662>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_442253c6c6bc742da1f5915a6b1df96e>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_4482818b4ee06e2bdb585dfce3428ff3>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_45a5fd75ceea63f9d6cfba4c1ffed6f7>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_477d6dc9f5db073226e24bf3420e5439>@@V?$allocator@H@std@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std@@
.?AV?$_Func_impl@V<lambda_49d682f1cbbed649429b725cf69f6363>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_4a49bb9d7a4049809f2bc554c4c3c3e5>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_4ac7d3f9b4580f17091aaca25b7bd86f>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_4bcf1410f105d72114e98eec19f131a8>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_4df0f3992474302eace6a0f68ea42ff8>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_4fb1f45682f18b56ab6ff42084b9d2d3>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_4ff8dc3560ca2860d9f7020b0dde7262>@@V?$allocator@H@std@@XPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_50533d45351b0870252aba24ee3420e9>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_51bfecc9feb95cf49d4bc900e463652d>@@V?$allocator@H@std@@_NAEAVTType@glslang@@AEAV45@@std@@
.?AV?$_Func_impl@V<lambda_51c48863abd211425f8d88fd7a2dee83>@@V?$allocator@H@std@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_522f1522a06425135eaaee35f4fba59f>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_53cc4d1233d5656f9f5dfb5ccde26041>@@V?$allocator@H@std@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@56@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_5821416b0a0bfcab2bfc9554b085b5ce>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_5a9befa26e0425846056061cbcae7bb3>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_5ae77915c9f5a5e775fbeedeca03b605>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_5b53e61450e62cd9feacd922abb7a0f3>@@V?$allocator@H@std@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@56@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_5bc762e90a021a1da765756da98dd9a6>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_5c69c7837308a99573bb50dfee2d77c5>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_5ea627c122ca41b71bb9501e08f0e010>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@PEAIPEAIPEAI@std@@
.?AV?$_Func_impl@V<lambda_5f4ea400e0ddbd6755db6901cc98d660>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@3@PEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_5f8eb249afcfd55bfc1e1be03f58d69e>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_5fa3b6280f053d5825d8cbbd090a7170>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_60a344ece223c9d2b9f0eb34acd70c85>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_61de584c4ffdfb505b8eeaf633c2da3b>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_63b7608ec24adbb4d4a5cda9355ef017>@@V?$allocator@H@std@@_NAEBVTType@glslang@@AEBV45@W4TOperator@5@H@std@@
.?AV?$_Func_impl@V<lambda_63df440b627fe3b66920486c6a4a4f03>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_653be034a8f76f8784719f9d0505e140>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_65a49533954e833ab4661c42a56341e5>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_65cf23f6c5d75970d8e858261ef648f6>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_661abbfbc0170f20ffc70e7331b8e395>@@V?$allocator@H@std@@PEBV?$vector@PEAUDominatorTreeNode@opt@spvtools@@V?$allocator@PEAUDominatorTreeNode@opt@spvtools@@@std@@@3@PEBUDominatorTreeNode@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_6722a7ce5d359a6c81b89f4fa4d3d1ae>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_6908682808afd58985c7c7f4846ef48a>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_69cf2512ec1d31cf461ac23e263cea3e>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_69f44845bb24918cf4f0b193e6016e32>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_6a2a17af546787c90201cfb5aff929f6>@@V?$allocator@H@std@@XPEBVBasicBlock@opt@spvtools@@PEBV456@@std@@
.?AV?$_Func_impl@V<lambda_6aa6c7a0590002bad55a66d467f3d0a2>@@V?$allocator@H@std@@XPEBUDominatorTreeNode@opt@spvtools@@PEBU456@@std@@
.?AV?$_Func_impl@V<lambda_6b50337b8c58248655d9ea6386811a20>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_6c7e3d741f275ee56da0787630eef4bc>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_6cab6c809bd25f59c8e21fe569e5d5bd>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_6d703b06bbe54c013ff32f1972d5e0a7>@@V?$allocator@H@std@@_NAEBVTType@glslang@@AEBV45@AEBV45@@std@@
.?AV?$_Func_impl@V<lambda_6dd3e462556884c4c36baac77c37de23>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_6e43a4d854427448d38e243c4fd9a3f9>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_6e68544d38f2eaddd8ed2eec5ba6ccbf>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_6f294285e33e7c263c1752ff23cabb55>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_6f57a0b4562e0e24aeae17185d9fe66a>@@V?$allocator@H@std@@XPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_701806cccde7a1cccab79c3f0bd849b3>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_70695ccc602e271d61c9f163429eaee7>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_706f5418d0eb52208014b0cf64da94b1>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_71715a81194b36ac84f4ca6de376ca3d>@@V?$allocator@H@std@@_NPEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_72004a64182b4cb0dcbab34f65f5fea6>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_72beae9e6848c4b6d0fa97d3ea5c8957>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_736311db28f9dc546d2697742bbb82a2>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_73716f6ee8f23dc8fece4ff79772f154>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_7381b51e03bb3a7623466c7d2520629d>@@V?$allocator@H@std@@_NAEBVTType@glslang@@AEBV45@AEBV45@@std@@
.?AV?$_Func_impl@V<lambda_7387cec2996bdc169a1be3e1ee3016a0>@@V?$allocator@H@std@@_NAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_7553b861845ee7ea9120930bdc59901d>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_75ae2d1ba34816fdb2754b7da05d6468>@@V?$allocator@H@std@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_761b09a1410b9ca815259f56a5861dfe>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_765578e4360a5f16c4ef5fe2ee0d0f15>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@3@PEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_77c673e4a3f31836b25db14c560c99c8>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_7992c64b7c8bba8096b295e144d58f5d>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_7bd8837d05ad10c21a5a9e82ebb97ca1>@@V?$allocator@H@std@@XPEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_7c75f19d35dc15769e9d10f113aa6a27>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@3@PEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_7d1aa0756ca7d77abb30b0d9bf0e97aa>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_7d62b5eae68b1ec07b84993c7238bda7>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_7dff1d1ef28797162113e5266e16a76c>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_7fe36572584116c0ac7f4991ca16428b>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_8111232f052d29434fde72e8dfd21b99>@@V?$allocator@H@std@@XPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_8143fa827ac1e59ed9245a9ca5eebc51>@@V?$allocator@H@std@@XPEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_8203fb147847308a614da2019ca5ec8e>@@V?$allocator@H@std@@_NAEBVTType@glslang@@AEBV45@AEBV45@@std@@
.?AV?$_Func_impl@V<lambda_829c6792a011d6912cee5ac4c3ce7717>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_8400c9e298ae4004f54bedc65f5688b8>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_8405988000d592c8bb318c31d188d44a>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_863a96988a0d4d997a327bb5821c7d91>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_866bd0d718fdb6078d0720ded39fcfe1>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_87d58d4b4ac63515e503f036475ab536>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_8823ce76b6a799c1d3a47fdbf2402f00>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_8a6d3e888e42001b1c775c12340ad4e7>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_8aeeb3be0360b2292a89781e92765f05>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_8b3bd07082e685ed39dd8313736aa419>@@V?$allocator@H@std@@_NPEBI@std@@
.?AV?$_Func_impl@V<lambda_8bea274c30fee273fa7c52ee649dcdf5>@@V?$allocator@H@std@@_NPEBI@std@@
.?AV?$_Func_impl@V<lambda_8bf87c5ed827dbeb735303469d7ad79e>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_8c20947c49e79f408e04181559b5e404>@@V?$allocator@H@std@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_8c335f050ce4ae0f7d64fc361919c995>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_8cb1225ab70e46ffb2468e5e374f5af7>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_8daace18515ebd8766fa02300b8beac9>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_8e7a7d5c2721dcd9a525913659a11afd>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_920470c98a7299e6099f79150ecef4f5>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_92087d7cff5973ca54cc61431b9c4be4>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_924a05e004da9b6e7bf01385df9c5614>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_929f7fa3ec77584737cffec07b4c5919>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_92c6995e04e4182d4a37acc76c82cc03>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_92fb7e2a0d1dcbeb524d7967da973923>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_92fbbba0715d09845caa0401598bcc69>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_93cbb5d8f5ca36107e29a49f83b027e6>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@3@PEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_93eca927d10293567694d3d90c8f4d45>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_94823a752238d95b4a0c6a25072b5a0a>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_956b2d023e429dafd24c05ff68b4ab70>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_963319738e0d8c2ada194af552add1e1>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_97c10da097dc246e45540f12187a6a9d>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_97c31520b716ada2abcfd96063dc812e>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_98026a82ba23c51f2904fb9d9b555cb4>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_9901ce9041bfd69c5a7b289175f33fea>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_995834119c8cd4d77d33c0453322c501>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_999ad67b4551f8eba12c9acc66459e0e>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_9a0581c3afe3f86dd461d08bdb54a5d0>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_9d37987cd1408589cc718c11aa45cebf>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_9d4d115a05a33ef1a04962e67662efa9>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_9d7b874c18a31c2cfd1a053e340f8caa>@@V?$allocator@H@std@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_9e5f7ef39f67170e4bc18b123f4a11fa>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_9ed7022c78caf3e364b68e2a58727d60>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_9efc63f929498b7c2a58743de0a5009a>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_9fdd24e47da11df9a85b9c398cd749e8>@@V?$allocator@H@std@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@56@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_a1c13600da47b7f3b868360a4728392e>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_a1f0188f5582b0a3ce6348bcd61879d4>@@V?$allocator@H@std@@XPEAVBlock@spv@@@std@@
.?AV?$_Func_impl@V<lambda_a1f9fd54ad97dbb89411f34fc679d30a>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_a23da230d44deb90b24f8e3ffb2d2f0e>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_a2bd8d6171d9d4eb196fe1fe40af23f3>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_a2c49d1c64f313e0f5442d36615f0970>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_a2d719a2bdfc26725c8e7a7bc0e668da>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_a4e706d0e89efdc5fdaa5887fa0a91d6>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_a541e2493269ea02d579134ecff861a5>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_a625787163a827b34adc9d37af4f5015>@@V?$allocator@H@std@@XW4SpvCapability_@@@std@@
.?AV?$_Func_impl@V<lambda_a7d7a1ea8f50b1a4f181568b24f193f5>@@V?$allocator@H@std@@_NAEBVTType@glslang@@AEBV45@W4TOperator@5@H@std@@
.?AV?$_Func_impl@V<lambda_a8958dfd16014aa445e5f04fcd6953dc>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_a9f83ffd4858fb9a05ae5cbc0782b60e>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_aa029af28ac5dbb7b3d79a3066171f8f>@@V?$allocator@H@std@@_NW4SpvExecutionModel_@@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_aa7a07c9f0fca2dbf25755e77c13c866>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_abe24b5a300fed7bf4460a0f57ec95c4>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_ae229126bdd0e6bd2c9c09927f8bc2cb>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_ae34c7888503b2594012e04b23aec424>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_b137a0a97c239f0430aec971e5c0ea91>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_b24c75b79e2cb76f89ff7304e786770b>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_b259b4d5852fe1044349fc3b57fb2e74>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_b3e332b63f865ca53a0afe1c246aa1a1>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_b425c593b3d7da4fb0bd491d3999b45a>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_b475553a12d831cfa4f6231633905074>@@V?$allocator@H@std@@_NPEBI@std@@
.?AV?$_Func_impl@V<lambda_b522294996e2c97f9922f8403868f6f7>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_b525a7f4ea3217679bd3bcdc0af29188>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@3@PEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_b61727b5629d3f2904f12a33f98ec2aa>@@V?$allocator@H@std@@_NPEAVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_b6d60654ddb6767d886de4b94b3013e5>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_b73d8282cf09cfaddcd064ec244fe3d3>@@V?$allocator@H@std@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std@@
.?AV?$_Func_impl@V<lambda_b77debf4353e319f811a60c0589594d4>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_b7ecfd73dd291c3ad9ea0c46e181100f>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_b7f8cb0c8cc66132c23918eef857c1ad>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_baea9d5bd3f3a596b0e3fbb492b9979e>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_bbf9dee55213fd1547b1a8fa978bbf50>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_bd4eef13987434eafc3bc93c0f827c39>@@V?$allocator@H@std@@XPEBVBasicBlock@opt@spvtools@@PEBV456@@std@@
.?AV?$_Func_impl@V<lambda_bdd9827a4a336eebb62ca7865bdc6d6f>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_be46c0af90919a18f1986b5d9b53c923>@@V?$allocator@H@std@@XPEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_be80022a55897b5a5fd86c47ec498ba0>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_be8cb7d76c4b5ac16ee557374337e850>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_c0e83da0bf2772c0cb8c9d27ec15bb8b>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_c176fed0d246e6d32a46e518fe40da15>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_c17efbb09d7a2e573b2731e3a18e58b4>@@V?$allocator@H@std@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_c1eea946de7690343fec7889d992a49b>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_c30e468b5ea8a63d56078f24649e9692>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_c51483247159358bfc0e969aff525b87>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_c517a1274f30879db5a1c07129337ecb>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_c58a90fefafdd186486d2978c58b1412>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_c59a645df007c94cc90294ba17d8f048>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_c8320ee4f3749878690a96a8764b3afd>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_c874111fe549042d84de9366378b3909>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_c922c10d00445d1864098cace0215add>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_c94942080aa4bef67bdd1e3c2b57d6fa>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_c9a760d9d66599a613a2b4f43eacf297>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_c9ffe3c5132425f5e36d75f7b0f5e84b>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_ca6a5e410f265f083c2492aca9bf6e02>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_cad2f68fd17da95f214394ac88507ed5>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_cadf9a7c0a9a48b2973c35b3073213e3>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_cc593e800dea0eaa4e243b2f04fb6bdd>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_cd3e2fc2020a3a0e7095808ea5ea1075>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_ce6003c0d18fbc8e971dd4fddbb030b4>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_cee96e50ebd2ccfe9b4a886374be4c3c>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_cf9e64f24727109d988a70c75ad28b66>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_cfe3c26e7b26e76e1ae4ac10215de243>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@PEBV456@@std@@
.?AV?$_Func_impl@V<lambda_d25df1932b73922ec64c87a0e6d3cee0>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@PEAIPEAIPEAI@std@@
.?AV?$_Func_impl@V<lambda_d2debe841b156100770a356060ba3309>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_d30a3c7d8d071fd8ad14e562a7390e3d>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@std@@@3@PEBVBasicBlock@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_d38c58a4ba11b0ddfb6efdff1d25afb8>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_d3aeb95d7ad19adefcd39a99507ca4c5>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_d4282bc1c30d60c850c997232050960d>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_d4b7308d8207db4e1062abb7c034bbe2>@@V?$allocator@H@std@@_NAEBVValidationState_t@val@spvtools@@PEBVFunction@56@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_d4c13c055296cc3f0f372cc07a6dd62a>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_d5ed91c87dab26dead301cd56f036ea2>@@V?$allocator@H@std@@_NPEBI@std@@
.?AV?$_Func_impl@V<lambda_d61d9be295fb9564c197038b008b38d1>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_d64e4adb0f77e9154acb6a8759922310>@@V?$allocator@H@std@@XAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_d75fe7aa8a46eff945457ee1f3622143>@@V?$allocator@H@std@@XPEAVTIntermTyped@glslang@@PEAV45@PEAV45@PEAV45@_N@std@@
.?AV?$_Func_impl@V<lambda_d7a06087342bc567669ac6231c659b2a>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_d8ba002339af58495815303bad35aacc>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_d8fc16f5e31991cf01dada3d69129c65>@@V?$allocator@H@std@@_NAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_d9231b5d3c00eb724b37d8bae33cf148>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_d99d59b990d3a72ce75812e6c9562807>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_d9a3bfb820364132dc9ffebe479a9270>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@PEBV456@@std@@
.?AV?$_Func_impl@V<lambda_da7376a42906a93590e09d6a61289d2a>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_daa3bf1adbed79e9ffeaa4f9b2225c4d>@@V?$allocator@H@std@@_NPEAI@std@@
.?AV?$_Func_impl@V<lambda_dad8c3d0dcd034e04683c27674c4b373>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_db8b3257dda4a6180359ce7af5b30405>@@V?$allocator@H@std@@_NPEAI@std@@
.?AV?$_Func_impl@V<lambda_dc41538dbe6f41001e4442372a856620>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@I@std@@
.?AV?$_Func_impl@V<lambda_dcb7f621d48d829353d5bbd01bb3abdb>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_dcc99e0db608dc23fc72a9e2a32a50ce>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_dd58bc0557ade0dd039347b4d5d00323>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_de07a45b7c38d0f09bfc5852f986aa27>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_de9c0a1cbcb489fcc524fb8a3ea9837b>@@V?$allocator@H@std@@XPEBUDominatorTreeNode@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_dfaa4191901394cf26fa2dee6298becd>@@V?$allocator@H@std@@_NPEAI@std@@
.?AV?$_Func_impl@V<lambda_e062b110bed152260c6c726d0a432c5e>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_e196e437f6451e8ffd5040ea9d27bd06>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_e20b6704397722a502a585b94ebe94ca>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_e21f653c67f262e33e69d132bc515dd6>@@V?$allocator@H@std@@XW4spv_message_level_t@@PEBDAEBUspv_position_t@@PEBD@std@@
.?AV?$_Func_impl@V<lambda_e2f496aaa00a260d65b837f3686f5ccc>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_e3ae43eb6d5dfad18df17d54b1617745>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_e43a73ea13a53bf6127a7da185761b1f>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_e495fe2bdc48d4f9e5cdc8f3aa07eba6>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@3@PEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_e4fc45e14be4e6a3d4540031311acd64>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_e5267a1a7ae0de147e41df50075e0231>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_e593c26e18c9aa9a737d03e07d304668>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_e790478f58af5fa6a03d36914f4c8fac>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_e8b3d6c17a137f553b762b1468e8e274>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_e9b2fa05b69ad318456ccd0881aaf04d>@@V?$allocator@H@std@@_NPEAVIRContext@opt@spvtools@@PEAVInstruction@56@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_e9c936cb93c6671e8303a180044e9b47>@@V?$allocator@H@std@@XPEAI@std@@
.?AV?$_Func_impl@V<lambda_ead18916832bed4b770811689fc4a172>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_ee7e5973d0031afdb7c7341041506ab6>@@V?$allocator@H@std@@XAEAI@std@@
.?AV?$_Func_impl@V<lambda_ef3e14b66c1beb77699f812282f54486>@@V?$allocator@H@std@@_NPEAVFunction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_f00d22e87ab49c41fd33e5728eb20288>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_f069030dab28c5d7b0da7c60889effce>@@V?$allocator@H@std@@XW4SpvCapability_@@@std@@
.?AV?$_Func_impl@V<lambda_f085be6385708b574f76b75238f496ad>@@V?$allocator@H@std@@_NPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_f10ab3304ff1ffe3fd1b809e45980764>@@V?$allocator@H@std@@XAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_f22b123cc92db1a759a8cdd451463f54>@@V?$allocator@H@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@I@std@@
.?AV?$_Func_impl@V<lambda_f26ff537cf3e5ac2c268f26cf2368f66>@@V?$allocator@H@std@@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_f3436c0263e5a5eabcd5f6aab573dc71>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_f4642c729abc98c1e08ad1de1f2deff0>@@V?$allocator@H@std@@_NI@std@@
.?AV?$_Func_impl@V<lambda_f88e22d98dadda0f2976808fedf0ae91>@@V?$allocator@H@std@@XPEBI@std@@
.?AV?$_Func_impl@V<lambda_fa07fca1029f4ecef374e9b13837a8ce>@@V?$allocator@H@std@@XI@std@@
.?AV?$_Func_impl@V<lambda_fa84d0676fe9158ce1e653456c993ac3>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEAVIRContext@67@PEAVInstruction@67@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@3@@std@@
.?AV?$_Func_impl@V<lambda_fa94c8d664a772f6ffda43941dd657d5>@@V?$allocator@H@std@@_NW4Op@spv@@I@std@@
.?AV?$_Func_impl@V<lambda_fe3aa2a41614c51afa978d6d360dd9e7>@@V?$allocator@H@std@@_NPEAI@std@@
.?AV?$_Func_impl@V<lambda_feb28a8fc1d136f28c08dbfc9b18f561>@@V?$allocator@H@std@@XPEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_febccfbcc58b95efa7e80f2f3c87dcf4>@@V?$allocator@H@std@@II@std@@
.?AV?$_Func_impl@V<lambda_febfd70b75a718cae1f41a0ddf7af2d9>@@V?$allocator@H@std@@XAEBVInstruction@opt@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_fed47b6adffccb47b9ead2f3bf022bf8>@@V?$allocator@H@std@@PEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@std@@@3@PEBVBasicBlock@val@spvtools@@@std@@
.?AV?$_Func_impl@V<lambda_ff01092110b3f2733cd5c2048f2d4709>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_ff61b666811aed06f4e22bed8b5e77b5>@@V?$allocator@H@std@@W4spv_result_t@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@std@@
.?AV?$_Func_impl@V<lambda_ffa1bef1e94074a3f33f3ed63b690dea>@@V?$allocator@H@std@@PEBVConstant@analysis@opt@spvtools@@PEBVType@567@PEBV4567@PEAVConstantManager@567@@std@@
.?AV?$_Func_impl@V<lambda_ffd3c9ba70f65cd0e524b13530faa5fa>@@V?$allocator@H@std@@PEBVBasicBlock@val@spvtools@@PEBV456@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@AEBVDecoration@56@AEBVInstruction@56@11@ZQEAV3456@AEBV856@AEBV956@AEBV956@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAPEBDAEAW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0HL@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0HM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IB@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IM@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IN@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0IP@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0JF@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0JJ@$$CBDW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8BuiltInsValidator@?A0x520dac5e@val@spvtools@@EAA?AW4spv_result_t@@PEBDW4SpvExecutionModel_@@AEBVDecoration@56@AEBVInstruction@56@33@ZQEAV3456@AEAY0KP@$$CBDAEBW48@AEBV956@AEBVInstruction@56@AEBVInstruction@56@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@W4spv_result_t@@AEBVInstruction@val@spvtools@@@std@@
.?AV?$_Func_impl@V?$_Binder@U_Unforced@std@@P8DefUseManager@analysis@opt@spvtools@@EAAXPEAVInstruction@56@@ZQEAV3456@AEBU?$_Ph@$00@2@@std@@V?$allocator@H@2@XPEAVInstruction@opt@spvtools@@@std@@
.?AV?$_Iosb@H@std@@
.?AV?$_Node_class@DV?$regex_traits@D@std@@@std@@
.?AV?$_Node_str@D@std@@
.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@
.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@
.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$codecvt@DDU_Mbstatet@@@std@@
.?AV?$collate@D@std@@
.?AV?$ctype@D@std@@
.?AV?$ilist_half_node@VInstruction@llvm@@@llvm@@
.?AV?$ilist_node@VInstruction@llvm@@@llvm@@
.?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@
.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@
.?AV?$numpunct@D@std@@
.?AVAccelerationStructureNV@analysis@opt@spvtools@@
.?AVAggressiveDCEPass@opt@spvtools@@
.?AVArray@analysis@opt@spvtools@@
.?AVArrayConstant@analysis@opt@spvtools@@
.?AVAssignment@@
.?AVBackEnd@gla@@
.?AVBackEndPointer@gla_llvm@@
.?AVBackEndTranslator@gla@@
.?AVBlock@spv@@
.?AVBlockMergePass@opt@spvtools@@
.?AVBool@analysis@opt@spvtools@@
.?AVBoolConstant@analysis@opt@spvtools@@
.?AVBottomTranslator@?A0xba436a1f@@
.?AVBuilder@spv@@
.?AVCExpressionParserCallback@@
.?AVCFGCleanupPass@opt@spvtools@@
.?AVCFakeSamplerShaderParamBuilder@@
.?AVCHlslParser@@
.?AVCShaderParamBuilder@@
.?AVCStreamRewriter@@
.?AVCUtlStackMachineBuilder@@
.?AVCVfxContextMgrGL@@
.?AVCVfxD3dInclude@@
.?AVCVfxEntrypointsGL@@
.?AVCVfxGL@@
.?AVCVfxShaderFile@@
.?AVCVfxShaderFileVulkan@@
.?AVCVfxShaderReparserGL@@
.?AVCVfxShaderValidatorGL@@
.?AVCVfxShaderValidatorGLslang@@
.?AVCVfxStackMachineBuilder@@
.?AVCallInst@llvm@@
.?AVCallbackVH@llvm@@
.?AVCanonicalizeCFG@?A0x18fa78c3@@
.?AVCanonicalizeInsts@?A0xd0304466@@
.?AVCmpInst@llvm@@
.?AVCoalesceInserts@?A0x05f7874d@@
.?AVCompositeConstant@analysis@opt@spvtools@@
.?AVConstant@analysis@opt@spvtools@@
.?AVConstantFoldingRules@opt@spvtools@@
.?AVConvertToHalfPass@opt@spvtools@@
.?AVCooperativeMatrixNV@analysis@opt@spvtools@@
.?AVDataLayout@llvm@@
.?AVDeadBranchElimPass@opt@spvtools@@
.?AVDeadInsertElimPass@opt@spvtools@@
.?AVDecomposeInsts@?A0x0e38dab4@@
.?AVDeviceEvent@analysis@opt@spvtools@@
.?AVEarlyReturnElim@?A0x916bcef6@@
.?AVEliminateDeadFunctionsPass@opt@spvtools@@
.?AVEliminateDeadMembersPass@opt@spvtools@@
.?AVEvent@analysis@opt@spvtools@@
.?AVExtractValueInst@llvm@@
.?AVFCmpInst@llvm@@
.?AVFlattenCondAssn@?A0xba42c427@@
.?AVFloat@analysis@opt@spvtools@@
.?AVFloatConstant@analysis@opt@spvtools@@
.?AVFoldingRules@opt@spvtools@@
.?AVForbidIncluder@TShader@glslang@@
.?AVForwardPointer@analysis@opt@spvtools@@
.?AVFunction@analysis@opt@spvtools@@
.?AVFunction@spv@@
.?AVFunctionPass@llvm@@
.?AVGatherInsts@?A0xccc0023f@@
.?AVGetElementPtrInst@llvm@@
.?AVGlslBackEnd@@
.?AVGlslManager@gla@@
.?AVGlslTarget@gla@@
.?AVGlslTranslator@gla@@
.?AVHlslGrammar@glslang@@
.?AVHlslParseContext@glslang@@
.?AVHlslScanContext@glslang@@
.?AVHlslTokenStream@glslang@@
.?AVICmpInst@llvm@@
.?AVIExpressionShaderVariableCallback@@
.?AVIHlslParserCallbacks@@
.?AVIStreamRewriter@@
.?AVIVfx@@
.?AVIVfxShaderValidator@@
.?AVIdentifyStructures@gla_llvm@@
.?AVIfConversion@opt@spvtools@@
.?AVImage@analysis@opt@spvtools@@
.?AVImmutablePass@llvm@@
.?AVIncluder@TShader@glslang@@
.?AVInlineExhaustivePass@opt@spvtools@@
.?AVInlinePass@opt@spvtools@@
.?AVInsertValueInst@llvm@@
.?AVInstruction@llvm@@
.?AVInstruction@opt@spvtools@@
.?AVInstruction@spv@@
.?AVInstructionList@opt@spvtools@@
.?AVIntConstant@analysis@opt@spvtools@@
.?AVInteger@analysis@opt@spvtools@@
.?AVIntrinsicCombine@?A0x544e1657@@
.?AVLocalAccessChainConvertPass@opt@spvtools@@
.?AVLocalRedundancyEliminationPass@opt@spvtools@@
.?AVLocalSingleBlockLoadStoreElimPass@opt@spvtools@@
.?AVLocalSingleStoreElimPass@opt@spvtools@@
.?AVManager@gla@@
.?AVMatrix@analysis@opt@spvtools@@
.?AVMatrixConstant@analysis@opt@spvtools@@
.?AVMemPass@opt@spvtools@@
.?AVMergeReturnPass@opt@spvtools@@
.?AVModule@spv@@
.?AVModulePass@llvm@@
.?AVNamedBarrier@analysis@opt@spvtools@@
.?AVNullConstant@analysis@opt@spvtools@@
.?AVOpaque@analysis@opt@spvtools@@
.?AVPHINode@llvm@@
.?AVPass@llvm@@
.?AVPass@opt@spvtools@@
.?AVPipe@analysis@opt@spvtools@@
.?AVPipeStorage@analysis@opt@spvtools@@
.?AVPointer@analysis@opt@spvtools@@
.?AVPrivateManager@gla@@
.?AVProcessLinesPass@opt@spvtools@@
.?AVQueue@analysis@opt@spvtools@@
.?AVRedundancyEliminationPass@opt@spvtools@@
.?AVRelaxFloatOpsPass@opt@spvtools@@
.?AVReserveId@analysis@opt@spvtools@@
.?AVRuntimeArray@analysis@opt@spvtools@@
.?AVSECantCompute@opt@spvtools@@
.?AVSENode@opt@spvtools@@
.?AVSSARewritePass@opt@spvtools@@
.?AVSampledImage@analysis@opt@spvtools@@
.?AVSampler@analysis@opt@spvtools@@
.?AVScalarConstant@analysis@opt@spvtools@@
.?AVScalarReplacementPass@opt@spvtools@@
.?AVScalarize@?A0x787a8456@@
.?AVSelectInst@llvm@@
.?AVSimplificationPass@opt@spvtools@@
.?AVStruct@analysis@opt@spvtools@@
.?AVStructConstant@analysis@opt@spvtools@@
.?AVTAnonMember@glslang@@
.?AVTBuiltInIdTraverser@glslang@@
.?AVTBuiltInParseables@glslang@@
.?AVTBuiltInParseablesHlsl@glslang@@
.?AVTBuiltIns@glslang@@
.?AVTCompiler@@
.?AVTConstTraverser@glslang@@
.?AVTConstUnionArray@glslang@@
.?AVTDeferredCompiler@glslang@@
.?AVTFinalLinkTraverser@?1??finalCheck@TIntermediate@glslang@@QEAAXAEAVTInfoSink@@_N@Z@
.?AVTFunction@glslang@@
.?AVTGlslangToSpvTraverser@?A0x310b7db5@@
.?AVTGlslangToTopTraverser@@
.?AVTIndexTraverser@glslang@@
.?AVTInductiveTraverser@glslang@@
.?AVTInputScanner@glslang@@
.?AVTIntermAggregate@glslang@@
.?AVTIntermBinary@glslang@@
.?AVTIntermBranch@glslang@@
.?AVTIntermConstantUnion@glslang@@
.?AVTIntermLoop@glslang@@
.?AVTIntermMethod@glslang@@
.?AVTIntermNode@@
.?AVTIntermOperator@glslang@@
.?AVTIntermSelection@glslang@@
.?AVTIntermSwitch@glslang@@
.?AVTIntermSymbol@glslang@@
.?AVTIntermTraverser@glslang@@
.?AVTIntermTyped@glslang@@
.?AVTIntermUnary@glslang@@
.?AVTIoMapResolver@glslang@@
.?AVTIoMapper@glslang@@
.?AVTLiveTraverser@glslang@@
.?AVTNoContractionAssigneeCheckingTraverser@?A0x80dbd912@@
.?AVTNoContractionPropagator@?A0x80dbd912@@
.?AVTOutputTraverser@glslang@@
.?AVTParseContext@glslang@@
.?AVTParseContextBase@glslang@@
.?AVTParseVersions@glslang@@
.?AVTPpContext@glslang@@
.?AVTPrecisionManager@glslang@@
.?AVTProgram@glslang@@
.?AVTReflection@glslang@@
.?AVTReflectionTraverser@glslang@@
.?AVTRemapIdTraverser@glslang@@
.?AVTScanContext@glslang@@
.?AVTShHandleBase@@
.?AVTShader@glslang@@
.?AVTSymbol@glslang@@
.?AVTSymbolDefinitionCollectingTraverser@?A0x80dbd912@@
.?AVTType@glslang@@
.?AVTUserIdTraverser@glslang@@
.?AVTVarGatherTraverser@glslang@@
.?AVTVarSetTraverser@glslang@@
.?AVTVariable@glslang@@
.?AVTokenizableIncludeFile@TPpContext@glslang@@
.?AVType@analysis@opt@spvtools@@
.?AVUnaryInstruction@llvm@@
.?AVUser@llvm@@
.?AVValue@llvm@@
.?AVValueHandleBase@llvm@@
.?AVVector@analysis@opt@spvtools@@
.?AVVectorConstant@analysis@opt@spvtools@@
.?AVVectorDCE@opt@spvtools@@
.?AVVoid@analysis@opt@spvtools@@
.?AV_Facet_base@std@@
.?AV_Generic_error_category@std@@
.?AV_Iostream_error_category@std@@
.?AV_Locimp@locale@std@@
.?AV_Node_assert@std@@
.?AV_Node_back@std@@
.?AV_Node_base@std@@
.?AV_Node_capture@std@@
.?AV_Node_end_group@std@@
.?AV_Node_end_rep@std@@
.?AV_Node_endif@std@@
.?AV_Node_if@std@@
.?AV_Node_rep@std@@
.?AV_Root_node@std@@
.?AV_System_error@std@@
.?AVbad_alloc@std@@
.?AVbad_cast@std@@
.?AVbad_exception@std@@
.?AVbad_function_call@std@@
.?AVcodecvt_base@std@@
.?AVerror_category@std@@
.?AVexception@std@@
.?AVfacet@locale@std@@
.?AVfailure@ios_base@std@@
.?AVios_base@std@@
.?AVlength_error@std@@
.?AVlogic_error@std@@
.?AVout_of_range@std@@
.?AVregex_error@std@@
.?AVruntime_error@std@@
.?AVspirvbin_base_t@spv@@
.?AVspirvbin_t@spv@@
.?AVsystem_error@std@@
.?AVtInput@TPpContext@glslang@@
.?AVtMacroInput@TPpContext@glslang@@
.?AVtMarkerInput@TPpContext@glslang@@
.?AVtStringInput@TPpContext@glslang@@
.?AVtTokenInput@TPpContext@glslang@@
.?AVtUngotTokenInput@TPpContext@glslang@@
.?AVtZeroInput@TPpContext@glslang@@
.?AVtype_info@@
.CRT$XCA
.CRT$XCC
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPX
.CRT$XPXA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.H;L$8u
.P6A?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
.P6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@23@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@Z
.P6APEBVConstant@analysis@opt@spvtools@@PEBVType@123@PEBV0123@1PEAVConstantManager@123@@Z
.P6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
.P6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@12@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@std@@@std@@@Z
.addsub.p
.andnp
.asrhub.sat
.backedge
.bitsclri
.body
.chop
.crc32.32.8
.data
.data$r
.demorgan
.edata
.exit
.extrqi
.ftz.f
.gfids$x
.gfids$y
.goodsyntax
.http://www.digicert.com/ssl-cps-repository.htm0
.i32.512
.i64.512
.i?0@I
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.init
.insertq
.iv.next
.lcssa
.ldu.dq
.length
.length()
.length() on vectors and matrices
.length();
.loadret
.lobit
.loopexit
.lpad-body
.lr.ph
.lsli
.mask
.mask.512
.masked
.maskz.512
.member0
.member1
.mwait
.nbitsclri
.noexc
.nonloopexit
.offs
.or.or
.pd.256
.pd.512
.pdata
.pfpnacc
.ph.qb
.ph.w
.phi.trans.insert
.phminposuw
.popcountp
.pre-phi
.preheader
.promoted
.ps.256
.ps.512
.pxfer.map
.rdata
.rdata$T
.rdata$r
.rdata$zzzdbg
.reg2mem
.reload
.reloc
.rn.ftz
.rnd.goodsyntax
.rs.ph
.rs.ph.w
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.sat.
.split
.split-lp
.split1
.split2
.svw.trun
.termcond
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.tls$
.tls$ZZZ
.to.SXTHI.asrh
.trunc
.unr-lcssa
.unr1-lcssa
.unr2-lcssa
.unshifted
.vaddhubs
.vbroadcast.s
.vbroadcast.ss.ps
.vextracti128
.vrcrotate.acc
.vrmpy
.vsat
.w.ph
.xJ>Hf
.xacc
.xdata
.xdata$x
/*BEGIN_UNIFORMBINDINGS
// LunarGOO output
// OpModuleProcessed 
//////
///////
///////////
///////////////
////a
//ATTRIBMAP
//o/'
/2GG>!B
/<vu	
/=$!6
/>58d%
/H3L$(I
/L3D$HL3
/http://crl3.digicert.com/sha2-assured-cs-g1.crl05
/http://crl4.digicert.com/sha2-assured-cs-g1.crl0L
/oo/4
/uuLc
00.read.tgid.
00u2A
0123456789
0123456789-+Ee
0123456789ABCDEF0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789ABCDEFabcdef-+Xx
0123456789ABCDEFabcdef-+XxPp
0123456789abcdef0
0123456789abcdefghijklmnopqrstuvwxyz
061110000000Z
09:55:06
0><[cZUg^>
0A\_]
0A]A\^
0A]A\_^[
0A]_]
0A]_^][
0A^A\_
0A^A]A\_[
0A^A]A\_^][
0A^A][
0A^A]]
0A^A]_^]
0A^^[
0A^^]
0A^_]
0A^_^
0A^_^][
0A_A\]
0A_A\^
0A_A]A\
0A_A]_^]
0A_A^A\
0A_A^A\^]
0A_A^A\_^
0A_A^A]
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0A_A^A]^]
0A_A^A]_^
0A_A^A]_^][
0A_A^[
0A_A^]
0A_A^^
0A_A^_
0A_A^_][
0A_A^_^[
0A_A^_^]
0A_^[
0A__]
0A__^
0D9sTu
0H;K8vPH
0L9D$(u%
0X8b?~
0fD9V
0ffffff
0iN>/
0t6H;
0u2H;^Hu,A
0u6H;
0u6L9gHu0I;
0u=H9QHu7
0uHH;
0uHI;
0uJM;
0uNH;
0uP9s0uKH
0uUI9^HuOA
0u]fff
0unE9n0uhA
0v0b1
1#IND
1#INF
1#QNAN
1#SNAN
1.#IND
1.dpp
1.extractps
1/4 stride is too large:
12.and.pi
12.cvt
1234BBBBBBBB56
131022120000Z
141022000000Z
16-bit  literal
16-bit arrays not supported
16-bit hexadecimal literal
16-bit integer literal
16-bit literal
16-bit octal literal
16-bit or 32-bit 
16-bit signed integer
16-bit signed integer vector
16-bit unsigned integer
16-bit unsigned integer literal
16-bit unsigned integer vector
16-bit vectors only take vector types
16.sat.
181004000000Z
1:1: Tokens : ( T__18 | T__19 | T__20 | T__21 | T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | BOOLLITERAL | ID | INTEGERLITERAL | HEXINTEGERLITERAL | FLOATLITERAL | COMMENT | WS );
1:1: Tokens : ( T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | T__29 | T__30 | T__31 | T__32 | T__33 | T__34 | T__35 | T__36 | T__37 | T__38 | T__39 | T__40 | T__41 | T__42 | T__43 | T__44 | T__45 | T__46 | T__47 | T__48 | T__49 | T__50 | T__51 | T__52 | T__53 | T__54 | T__55 | T__56 | T__57 | T__58 | T__59 | T__60 | T__61 | T__62 | T__63 | T__64 | T__65 | T__66 | T__67 | T__68 | T__69 | T__70 | T__71 | T__72 | T__73 | T__74 | T__75 | T__76 | T__77 | T__78 | T__79 | T__80 | T__81 | T__82 | T__83 | T__84 | T__85 | T__86 | T__87 | T__88 | T__89 | T__90 | T__91 | T__92 | T__93 | T__94 | T__95 | T__96 | T__97 | T__98 | T__99 | T__100 | T__101 | T__102 | T__103 | T__104 | T__105 | T__106 | T__107 | T__108 | T__109 | T__110 | T__111 | T__112 | T__113 | T__114 | T__115 | CONSTANT_REGISTER | PACK_OFFSET | VECTOR_TYPE | MATRIX_TYPE | STATIC | ID | INTEGERLITERAL | FLOATLITERAL | STRINGLITERAL | WS | LINE | PRAGMA | UNKNOWN );
1<.	/>:
1A9p 
1H;>u?I
1H;>uBI
1I9p 
1u	H9w
2 Entry points cannot share the same name and ExecutionMode.
2.brevp
2.combine.
2.conv.
2.crc32.
2.mpyud.
2.pd.256
2.ps.256
2.vrcmpys.s1rp
200321043410Z0#
211007120000Z0M1
211110000000Z0b1
2333333
241022000000Z0G1
281022120000Z0r1
2DRect
2L;l$hu"
2]fQ	?5!
2dq.256
2http://crl3.digicert.com/DigiCertAssuredIDCA-1.crl08
2http://crl4.digicert.com/DigiCertAssuredIDCA-1.crl0w
2ph.512
2ps.512
2si64
2u'L9s
2u'L9v
2usi64
2wVHc
3.4svn
311110000000Z0e1
32-bit 
32-bit signed integer
32-bit signed integer vector
32-bit signed literal
32-bit unsigned integer
32-bit unsigned integer vector
32.f32
3333333
3333333333333333UUUUUUUUUUUUUUUU
33333333H
33333333I
33333333L+
3333A
3>N;kU
3>fvw
4 argument intrinsic
4.60 glslang Khronos. 13.3381
4.fastcorner9
4.fastcorner9.not
4.round.r
42.pcmp
4http://crl3.digicert.com/DigiCertAssuredIDRootCA.crl0:
4http://crl3.digicert.com/DigiCertAssuredIDRootCA.crl0O
4http://crl4.digicert.com/DigiCertAssuredIDRootCA.crl0
4http://crl4.digicert.com/DigiCertAssuredIDRootCA.crl0:
5 !"55#$%5&55555555555555555'55555555()55555*5+,5-55.5555////0551235555555555555555555555555555554
5555555555555
555555555555555555555
5@8t$xH
5L;Gpu
5http://cacerts.digicert.com/DigiCertAssuredIDCA-1.crt0
6.mmx.por
600.read.global.size.
600.read.local.size.
600.read.ngroups.
600.read.tidig.
64-bit hexadecimal literal
64-bit integer
64-bit integer literal
64-bit integer vector
64-bit literal
64-bit octal literal
64-bit unsigned integer
64-bit unsigned integer literal
64-bit unsigned integer vector
64.f64
642sd
642ss
6D8}gM
6M+J`A
7  !!77777777"#$%&'()*+7777777777777777777777,777-777777./07777771777777777777237777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777456
700PP
700WP
777777
7777777777
777777777777777777777777777
7777777777777777777777777777
777777777777777777777777777777777
789:;<;;;;;;;;=>?@@@A
79:1: element : ( struct_decl | function_definition | variable_definition[ false ] | constant_buffer | type_def | bindless_constant_def | auto_bindless_texture2d_binding | semicolon= ';' );
7http://cacerts.digicert.com/DigiCertAssuredIDRootCA.crt0
8 t6H
8 teM
8"u=A
8#u"HcP 
8- or 16-bit loads must be a scalar, vector or matrix type
8- or 16-bit stores must be a scalar, vector or matrix type
8- or 16-bit types can only be used with width-only conversions
8-bit arrays not supported
8-bit signed integer
8-bit signed integer vector
8-bit unsigned integer
8-bit unsigned integer vector
8-bit vectors only take vector types
8-u]I
8.u*I
80tWD
86.avx
86.avx.vextractf128.
86.avx512.
86.avx512.vbroadcast.s
86.int
86.xend
86.xtest
8=$KD-
8@8:t
8@t)M
8@v	H
8@v	I
8@w	H9X
8@w	H9p
8@w	H9w@
8@w	H9x
8@w	I9w@
8@w	L9`
8@w	M9w@
8A^A\^[
8A^A]_[
8A^_^[
8A^_^]
8A_A\][
8A_A]
8A_A]A\_^]
8A_A]_^
8A_A^A]A\
8A_A^A]A\^[
8A_A^A]A\_^][
8A_A^A][
8A_A^A]]
8A_A^^]
8A_A^_[
8A_A^_^
8A_A^_^][
8Csinf
8D$ tf
8D9sTu
8D;7u-H
8G3uD
8H;L$Pr
8L$AH
8L$Pt
8L;E r
8L;|$pu'
8T$tu
8T$ut
8Z(t%
8\$ t
8\$ u
8\$(t
8\$@H
8\$Ht
8\$pt
8\$xt
8\u.H
8_,t/3
8_^][
8ke?;
9(uDH
9)w@9*w<H
9)~(H
9)~.H
9)~oH
90uVM
99C }
99~-H
99~BH
9>powf
9>v	H
9@w	H
9@w	H9Q
9@w	H9Y
9@w	H9q
9@w	L9a
9@w	L9i
9@w"H
9@w)H
9@w+H
9@wAH
9@w^H
9A }qf
9A0t	
9C s(H
9C s)H
9C |K
9C }(H
9D$8tR
9D$8ta
9D$PtR
9D$Pu
9D$Puv
9D$hta
9H }+H
9T$8t
9X@u4
9YTtX
9Y`~.
9\$(t	3
9\$0w
9\$@~w
9\u'H
9\u-H
9\u.H
9^ ~6f
9_$~jD
9_,~lA
9g>@3
9l>Lt
9s8~$
9sh~(ff
9t$(t0L
9t$P~58
9t$x~2L
9u'v	H
9w ~%
9w8~&f
9wP~#f
9wP~R3
9y u.
9y4v'3
9y`~q
9|$ tUA
9|$(tUA
9|$0v
9|$0w
9|$@v
9|$Pv
9|$`v
9}8v	H
9}Hv	H
9}Xv	H
: 64-bit atomics require the Int64Atomics capability
: CommandLine Error: Argument '
: Dependency 
: DontFlatten
: DontUnroll
: Execution scope is limited to Subgroup or Workgroup
: Flatten
: Function storage class forbidden when the Shader capability is declared.
: MakeAvailableKHR Memory Semantics also requires either Release or AcquireRelease Memory Semantics
: MakeVisibleKHR Memory Semantics also requires either Acquire or AcquireRelease Memory Semantics
: Memory Scope QueueFamilyKHR requires capability 
: Memory Semantics MakeAvailableKHR requires capability 
: Memory Semantics MakeVisibleKHR requires capability 
: Memory Semantics OutputMemoryKHR requires capability 
: Memory Semantics Release and AcquireRelease cannot be used for operand Unequal
: Memory Semantics UniformMemory requires capability Shader
: Memory Semantics Volatile requires capability VulkanMemoryModelKHR
: Memory Semantics can have at most one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
: Unroll
: Vulkan specification requires Memory Semantics to have one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
: according to the Vulkan spec atomic Result Type needs to be a 32-bit int scalar type
: can't specify both Aliased and Restrict for PhysicalStorageBufferEXT pointer.
: can't specify both AliasedPointerEXT and 
: can't specify both AliasedPointerEXT and RestrictPointerEXT for PhysicalStorageBufferEXT pointer.
: direct index for structure
: expected 
: expected Aliased or Restrict for PhysicalStorageBufferEXT pointer.
: expected AliasedPointerEXT or RestrictPointerEXT for 
: expected AliasedPointerEXT or RestrictPointerEXT for PhysicalStorageBufferEXT pointer.
: expected Comparator to be of type Result Type
: expected Execution Scope to be a 32-bit int
: expected Memory Scope to be a 32-bit int
: expected Memory Semantics to be a 32-bit int
: expected Memory Semantics to include a Vulkan-supported storage class
: expected Memory Semantics to include a storage class
: expected Named Barrier to be of type OpTypeNamedBarrier
: expected Pointer to be a pointer to int or float 
: expected Pointer to be of type OpTypePointer
: expected Pointer to point to a value of 32-bit int type
: expected Pointer to point to a value of type Result Type
: expected Result Type to be OpTypeNamedBarrier
: expected Result Type to be bool scalar type
: expected Result Type to be int or float scalar type
: expected Result Type to be int scalar type
: expected Result Type to be void
: expected Stream to be constant instruction
: expected Stream to be int scalar
: expected Subgroup Count to be a 32-bit int
: expected Value to be of type Result Type
: expected Value type and the type pointed to by Pointer to be the same
: expected more operands after 
: expected no more operands after 
: for the -
: in Vulkan 1.0 environment Memory Scope is limited to 
: in Vulkan 1.1 environment Memory Scope is limited to 
: in Vulkan environment Execution Scope is limited to 
: in Vulkan environment Execution scope is limited to 
: in Vulkan environment, Memory Scope cannot be CrossDevice
: in WebGPU environment Execution Scope is limited to 
: in WebGPU environment Memory Scope is limited to 
: lexer error %d :
: missing 
: no shortcircuit
: operand 
: storage class forbidden by universal validation rules.
: storage class must be Function, Workgroup, CrossWorkGroup or Generic in the OpenCL environment.
: truncated 
:"u:A
:"u`D
:#u@I
:6t=M
:9uKI
::::::::::
:::::::::::::::::::::::::::
::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::
:>)*	v
:>t6k'
:@8q,t	3
:@w H
:@wFH
:@wJH
:@wMH
:Ehu/H
:\u'H
:\u0H
:fD9G
; <label>:
; Bound: 
; Error: Block without parent!
; Function Attrs: 
; Generator: 
; IR after last pass
; IR before pass 
; Materializable
; ModuleID = '
; SPIR-V
; Schema: 
; Version: 
; [ DW_TAG_user_base ]
; may be removed in future release
;#t @
;(uAH
;-1F>
;.u1L
;8u*I
;;;;;;;;zzz
;;;;J,,JJ;;JJ;;JJ,,JJ;;JJ;;J;,,
;;;;JJJJ;;;;JJJJUD
;>t2H
;@v	H
;@w	H9k
;A ~W
;A0suH
;BIb?
;C }FH
;C ~M
;D$0u
;D$0v	
;D$4u
;D$Du
;D$Pu
;D$XtK
;D8o-t
;E$s ;
;EXt*H
;G(uRH
;H9>&X
;H;T$@r
;I9|$
;K sEH
;L$hu
;P,v	
;Q(w	I
;S sAH
;S sCH
;S sIH
;S sKH
;S }AH
;T$x|
;W sEH
;Y }Mf
;Z }Mf
;\$(t.H
;\$(u
;\$4|KH
;\$8t	L
;\$8u
;\$<tR
;\$@u
;\$H|
;\$`u
;\$p|
;]/t4L
;_0}-
;l$Pu
;p0t#H
;y8u*H
;|$ u
;|$4u
;|$8r
;|$@u
;|$Ptsf
;|$Pu
;|$Xu
;|$`u
;|$ht
;} s\L9v(u4H
<	#uKI
<	w	@
< t;<	t7
< u L
< u"H
< u$I
< u(H
<!uaH
<!ubH
<!ugH
<"u$H
<"u(H
<"u)H
<"u_L
<"uiH
<"uzH
<$@wzI
<$H9M
<%u H
<&u(H
<(u5H
<*u!H
<*u(H
<*u-H
<*uCH
<*uSL
<*u[H9{
<*u`H
<*ugL
<+u"H
<+u)H
<+u3H
<+u:H
<+uHH
<+uOH
<+uSL
<,u"H
<,u)H
<-u"H
<-u%H
<-u(H
<-u)H
<-u1L
<-u8I
<-u;H
<-u=D8r
<-uPH
<.u"H
<.u$H
<.u&H
<.u(H
<.u)H
<.u1L
<.u:H
</u%H
</u(H
</u)H
<<Unknown>>
<<exit node>>
<<nameless>> = 
<<null function: 0x
<<tu	
<>#n2
<CHcD$0=
<DOWN>
<EOF>
<EOR>
<GujH
<I;N8u
<Invalid operator> 
<bad token>
<badref>
<badref> = 
<deleted>
<empty name> 
<exiting>
<float
<header>
<htr<jtb<lt6<tt&<wt
<instruction>
<invalid>
<latch>
<missing 
<multiple exits> 
<no text for the token>
<nsw>
<null Type>
<null operand!>
<nuw>
<placeholder or erroneous Constant>
<premain>
<uint
<unknown op>
<unrecognized-type>
=	 ();,
= *cannot print option value*
= *unknown option value*
= {[8V
=============================--------------------------------
====> 
=imb;D
=w#Ic
> (Op
> calls 
> is later referenced by 
> is used by entry point '
> which is called with execution model 
>+>ZQ"v
>, but is not listed as an interface
>4TBY
>>  #uses=
>@v	H
>@v	I
>@w	H9^
>@w	I9n
>@w-H
>@w.H
>H9t$(u%
>M9u t
>constmerge
>ffffff
>jtm}S
>uZ>`
?!5WOo
?*u8H
?+>^m
?49HoKC
?5zlO
?7zQ6$
?7{KV
?8UUUUU
?8bunz8
?:kP<
??0CThreadMutex@@QEAA@PEBD@Z
??1CThreadMutex@@QEAA@XZ
?@En[vP
?@v	H
?@w	H9O
?@w	M9o
?@w3D
?A8u,t
?CUtlString::FormatV
?ComposeFileName@CBufferString@@QEAAPEBDPEBD0D@Z
?Cu0f9w
?E=$% B
?ExtendPath@CBufferString@@QEAAPEBDPEBDD@Z
?FixSlashes@CBufferString@@QEAAPEBDD@Z
?FixupPathName@CBufferString@@QEAAPEBDXZ
?Format@CBufferString@@QEAAHPEBDZZ
?H33H
?H9kPt
?H;|$X
?I;~`t~
?I;~`u
?Insert@CBufferString@@QEAAPEBDHPEBDH_N@Z
?JV8f
?Lock@CThreadFastMutex@@AECAXPEBDHII@Z
?Lock@CThreadMutex@@QEAAXPEBDH@Z
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@AEBULeafCodeInfo_t@@PEBDZZ
?LoggingSystem_Log@@YA?AW4LoggingResponse_t@@HW4LoggingSeverity_t@@VColor@@PEBDZZ
?N]TUUU
?Purge@CBufferString@@QEAAXH@Z
?QY^&
?R0I?
?ShortenPath@CBufferString@@QEAAPEBD_N@Z
?StripTrailingSlash@CBufferString@@QEAAPEBDXZ
?TY,>5
?UUUUUU
?Unlock@CThreadMutex@@QEAAXPEBDH@Z
?V_SplitString2@@YAXPEBDPEAPEBDHAEAV?$CUtlVector@PEADV?$CUtlMemory@PEADH@@@@@Z
?V_stristr_fast@@YAPEBDPEBD0@Z
?WUUUUU
?f`Y4
?kxG2)
?t D+
?t#D+
?t$A+
?t$D+
?t$E+
?t%D+
?t&D+
?t'D+
?t(D+
?t*E+
?t+D+
?t,D+
?t.A+
?t.D+
?t2D+
?t2E+
?t<D+
?tDD+
?t_v>
?uOE2
?{Q}<
@ $?<
@ 9B s
@ 9B t
@ 9C u
@ A+P<H
@ H+C
@ H9A r
@ H;C
@ I+@
@ L+@
@#1,>S,
@#2,>S,,
@$A9A
@(9B(}
@(9C(u
@(D9C(u%
@(I9A
@(L;H
@,8C,u
@,9B,~
@.data
@.gfids
@.tls
@09B0
@09C0u9H
@09C0uk
@09F0u
@0;A0A
@0;B0r
@0;C0r
@0A9A0
@0H+F(H
@1,S,>S,,
@2,S,>S,,,
@30t'H
@4,>S,,
@4,S,>S,,,
@8(t'H
@8(t7H
@8(tK
@8(tPH
@8,9u
@80t#H
@80tG
@80tZH
@80tc
@87t/@8s
@88t'L
@88t5
@88tWH
@88uV
@8H9C8
@8h%uvE
@8i-t
@8j-t
@8l$ 
@8l$8t
@8l$@u
@8n,t
@8n-t
@8o,H
@8o-t
@8o8uWH
@8p-t
@8q$t
@8q-t
@8r,t
@8s,H
@8s-t
@8sat
@8t$0
@8t$0t]E
@8t$@
@8t$@t]H
@8t$AtbI
@8t$Xt*
@8t$[I
@8t$]A
@8t$xt'I
@8uwL
@8uwtD
@8uwtJ
@8uwu
@8w,t
@8x u
@8x-t
@8y u
@8y-t
@8z,t
@8z,t~3
@8z-t
@8{,@
@8{,H
@8{,t
@8{-t
@8{-u
@8|$0
@8|$4t
@8|$8uVH
@8|$Pt
@8|$Pt-
@8|$^t
@8|$`u"
@8|$p
@8|$pD
@8},t
@8}-t
@8}-u
@8}oI
@8~,H
@8~,t
@8~-t
@:f9F:
@:fA9D$:
@:fA9E:u
@:|$Pu
@>%>b
@@H9X@H
@A\_^
@A]A\^
@A]_^][
@A^A\_
@A^A]A\
@A^A]A\_^
@A^A]^
@A^[]
@A^^]
@A^_[
@A^_^
@A^_^][
@A_A\_
@A_A\_^]
@A_A]A\_[
@A_A]A\_^
@A_A]A\_^][
@A_A]_
@A_A^A\
@A_A^A\][
@A_A^A\_]
@A_A^A\_^
@A_A^A\_^[]
@A_A^A]
@A_A^A]A\]
@A_A^A]A\_
@A_A^A]A\_][
@A_A^A]A\_^[
@A_A^A]A\_^]
@A_A^]
@A_A^^
@A_A^_
@A_A^_^[
@A_A^_^]
@A_][
@A_^]
@A__^
@A__^][
@D;GD
@D;GDu
@D;t$8
@DA;D$Du!
@HI;E
@PH9BPu
@PH9BPuaH
@PL+@HI
@S0t$H
@SATAUAVAWH
@SATAVAWH
@SATAWH
@SAUAVAWH
@SAUH
@SAVAWH
@SAVH
@SAWH
@SUATAUAWH
@SUATAUH
@SUATAVAWH
@SUATAWH
@SUATH
@SUAUAVAWH
@SUAUAWH
@SUAVH
@SUAWH
@SUVATAUAVAWH
@SUVATAUH
@SUVAVH
@SUVH
@SUVWATAUAVAWH
@SUVWATAUAWH
@SUVWATAVAWH
@SUVWAUAVAWH
@SUVWAUAWH
@SUVWAUH
@SUVWAVAWH
@SUVWAVH
@SUVWAWH
@SUVWH
@SUWATAUAVAWH
@SUWATAUAWH
@SUWATAWH
@SUWAUAVH
@SUWAUAWH
@SUWAUH
@SUWAVH
@SUWAWH
@SUWH
@SVATAUAVAWH
@SVATAUAVH
@SVATAUAWH
@SVATAVAWH
@SVAUAVH
@SVAVH
@SVAWH
@SVWATAUAVAWH
@SVWATAUH
@SVWATAVAWH
@SVWATAVH
@SVWATAWH
@SVWAUH
@SVWAVAWH
@SVWAVH
@SVWAWH
@SVWH
@SWATAUAVH
@SWATAUAWH
@SWATAVH
@SWATAWH
@SWAUAVAWH
@SWAUAWH
@SWAUH
@SWAVAWH
@SWAVH
@SWAWH
@UATAUAVAWH
@UATAUAVH
@UATAUAWH
@UATAUH
@UATAVAWH
@UATAVH
@UATH
@UAUAVAWH
@UAUAVH
@UAUAWH
@UAUH
@UAVAWH
@UAVH
@UAWH
@USATAVAWH
@USATAVH
@USATH
@USAUAVAWH
@USAUAVH
@USAUH
@USAVH
@USAWH
@USVATAUAVAWH
@USVATAUH
@USVATAWH
@USVAUAVAWH
@USVAUAVH
@USVAUAWH
@USVAVAWH
@USVAVH
@USVAWH
@USVH
@USVWATAUAVAWH
@USVWATAUAVH
@USVWATAUAWH
@USVWATAUH
@USVWATAVAWH
@USVWATAVH
@USVWATH
@USVWAUAVAWH
@USVWAUAVH
@USVWAVAWH
@USVWAVH
@USVWAWH
@USVWH
@USWATAUAVAWH
@USWATAUAVH
@USWATH
@USWAUAVAWH
@USWAUAVH
@USWAUAWH
@USWAVAWH
@USWAWH
@USWH
@UVATAUAVAWH
@UVATAUAVH
@UVATAUH
@UVATAVAWH
@UVATAVH
@UVATH
@UVAUAVAWH
@UVAUAVH
@UVAUAWH
@UVAUH
@UVAVAWH
@UVAVH
@UVAWH
@UVWATAUAVAWH
@UVWATAUAWH
@UVWATAWH
@UVWAUAVH
@UVWAUAWH
@UVWAVAWH
@UVWAVH
@UVWAWH
@UVWH
@UWATAUAWH
@UWATAVAWH
@UWATAVH
@UWATAWH
@UWAUAVAWH
@UWAUAVH
@UWAVAWH
@UWAVH
@UWAVI
@UWAWH
@VATAUAWH
@VATAUH
@VATAWH
@VATH
@VAUAVH
@VAVAWH
@VAVH
@VAWH
@VWATAUAVH
@VWATAUAWH
@VWATAVAWH
@VWATH
@VWAUAWH
@VWAVAWH
@VWAVH
@VWAWH
@WATAUAVAWH
@WATAVAWH
@WATAWH
@WATH
@WAUH
@WAVAWH
@WAVH
@WAWH
@XH;X
@XHcL$dH
@^8U)zj
@b;zO]
@count
@data
@entryPointOutput
@fE9|
@finitetmp
@gl_SubgroupInvocationID
@gl_SubgroupSize
@hI+@`H
@patchConstantOutput
@patchConstantResult
@pn>6
@position
@sampleCount
@sampleResultShadow
@sampleStructTemp
@this
@w	H!n
@w	H!{
@w	H#
@w	H9]
@w	H9}
@w	H;E
@w	H;G
@w	H;J
@w	H;V
@w	I!w
@w	I#
@w	I9]
@w	L!v
@w	L#
@w	L;E
@w	L;M
@w	M!H
@w	M#
@w	M;F@
@w+L9s
@w8E;
A	@(H
A	D$$
A	G@H
A	H;C
A	H;G
A	L$(
A 9B s
A 9C s
A A+Q<H
A A9@ s
A A9C s
A BuiltIn variable (id 
A FunctionCall must happen within a function body.
A H+A
A H9G u
A H;O
A L+A
A block must end with a branch instruction.
A function (
A function must begin with a label
A module-scope OpVariable with initialization value cannot be marked with the Import Linkage Type.
A!H;B
A$A9B
A$H;G
A'H;G
A(A9B(}
A(A9h
A(H9A H
A(H9A t
A(H9A uA
A(H9G(ttI
A(H;A t
A(H;A tVH
A(H;G
A(HcA H
A(I9A H
A(I9B
A(I;C
A(LcQ D;Q
A(LcQ H
A+M<A+
A+MDA+
A+M\A+
A+Mt+
A+U|A+
A,A9B,~
A,A9h
A03>A|
A09B0
A0E+A(t
A3D$ 
A3F8%
A3G8I
A8)t2M
A81t@@8r
A81teM
A84.u
A86taH
A89t2M
A8@-t
A8A,I
A8A-t
A8H+A0H
A8H9A
A8H;PHt
A8U-t
A8X-t
A8Zxt
A8\$ L
A8^-u
A8_-t
A8u-t
A8v,@
A8v-t
A8w*t
A8w,@
A8w-t
A8~,t
A8~-t
A9@ }
A9A u
A9A }
A9B$A
A9C }
A9P s
A9Q s
A9Q }
A9R s
A9pTu
A9q sEI
A9q }EI
A9v@t	H
A:(uiI
A;@ }
A;@X}
A;A }
A;B }
A;BX}
A;RX}
A;]0u
A;q s?I
A;q }?I
A;x(r
A>l$/
A>pP&
A@8APtMD
A@9APt/H
A@9APtBD
A@H9A
A@H9A8t	I
A@L;A
AA,A$
AA<Fu
ABCDEFGHIJKLMNOPQRSTUVWXYZ
ABGR8888
ACCSTRUCTNV
ADD_ASSIGN
AHH+A@H
AK>(v
ALWAYS
AMPERSAND
ANDROID_VULKAN
ANDROID_VULKAN_4_0
AND_ASSIGN
AND_OP
ANISO
ANISOTROPIC
ANTLR - 
ANTLR3_EXCEPTION number %d (%08X).
ANTLR3_EXCEPTION: %s
APH9AHt+
ARGB8888
ATAUAVAWH
ATAUAVH
ATAUAWH
ATAUH
ATAVAWH
ATAVH
ATI1N
ATI2N
ATI_DST16
ATI_DST24
ATOMIC_UINT
ATTRIBUTE
AUAVAWH
AUAVH
AUAWH
AVAWH
AXH9AP
A\_[]
A\_^[]
A\_^][
A]A\]
A]A\][
A]A\^[]
A]A\^]
A]A\_^
A]A\_^[]
A]A\_^]
A]^[]
A]_[]
A]_^[
A]_^[]
A]_^]
A^A\[]
A^A\]
A^A\^]
A^A\_
A^A\_]
A^A\_^[]
A^A\_^]
A^A]A\]
A^A]A\^
A^A]A\^]
A^A]A\_[]
A^A]A\_^
A^A]A\_^[]
A^A][]
A^A]]
A^A]^
A^A]^[
A^A]^[]
A^A]^]
A^A]^][
A^A]_
A^A]_[]
A^A]_]
A^A]_^[
A^A]_^[]
A^A]_^]
A^^[]
A^^][
A^_[]
A^_][
A^_^[]
A^_^]
A^_^][
A_A\]
A_A\^[]
A_A\_
A_A\_[]
A_A\_]
A_A\_^[]
A_A\_^]
A_A]A\
A_A]A\]
A_A]A\^
A_A]A\^[
A_A]A\^[]
A_A]A\_[]
A_A]A\_]
A_A]A\_^
A_A]A\_^[]
A_A]]
A_A]^
A_A]^[]
A_A]^]
A_A]_[]
A_A]_]
A_A]_^]
A_A^A\
A_A^A\]
A_A^A\^[]
A_A^A\^]
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]
A_A^A]A\]
A_A^A]A\^
A_A^A]A\^[]
A_A^A]A\^]
A_A^A]A\^][
A_A^A]A\_
A_A^A]A\_[]
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A_A^A][]
A_A^A]]
A_A^A]^[]
A_A^A]^]
A_A^A]_[]
A_A^A]_]
A_A^A]_^
A_A^A]_^[]
A_A^A]_^][
A_A^]
A_A^][
A_A^^
A_A^^[]
A_A^^]
A_A^_
A_A^_[]
A_A^_]
A_A^_^[]
A_A^_^]
A_A^_^][
A_^[]
A__[]
A__^[
A__^[]
A__^]
A__^][
A`1w>
A`H9AX
A`H9AXt
A`H9AXu
AbsISubINTEL
AbsUSubINTEL
Absolute value
AccessChain
According to the 
According to the Vulkan spec BuiltIn 
According to the Vulkan spec BuiltIn HelperInvocation variable needs to be a bool scalar. 
According to the Vulkan spec BuiltIn InvocationId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn PatchVertices variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn PointCoord variable needs to be a 2-component 32-bit float vector. 
According to the Vulkan spec BuiltIn PointSize variable needs to be a 32-bit float scalar. 
According to the Vulkan spec BuiltIn Position variable needs to be a 4-component 32-bit float vector. 
According to the Vulkan spec BuiltIn PrimitiveId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn SampleId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn SampleMask variable needs to be a 32-bit int array. 
According to the Vulkan spec BuiltIn SamplePosition variable needs to be a 2-component 32-bit float vector. 
According to the Vulkan spec BuiltIn TessCoord variable needs to be a 3-component 32-bit float vector. 
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 2-component 32-bit float array. 
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 4-component 32-bit float array. 
According to the WebGPU spec BuiltIn LocalInvocationIndex variable needs to be a 32-bit int.
According to the WebGPU spec BuiltIn Position variable needs to be a 4-component 32-bit float vector. 
Acosh
Acquire
AcquireRelease
AcquireSRWLockExclusive
AcquireSRWLockShared
Actual:
Actually dude, we didn't seem to be expecting anything here, or at least
Adding cached shader: %s
Address
Address Space in Bottom IR: 
AddressU
AddressV
AddressW
Addresses
Addressing model must be Logical for WebGPU environment.
Addressing model must be Physical32 or Physical64 
Aggressive Dead Code Elimination
AkJ %I3
Alias Analysis
Aliased
AliasedPointer
AliasedPointerEXT
Aligned
Alignment
AlignmentId
All OpSampledImage instructions must be in the same block in which their Result <id> are consumed. OpSampledImage Result Type <id> '
All OpVariable instructions in a function must be the first instructions in the first block.
All variables in the following storage classes must have an 
AllMemoryBarrier
AllMemoryBarrierWithGroupSync
Allocating a variable containing a 16-bit element in 
Allocating a variable containing a 8-bit element in 
AllowRecip
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
AlphaTestEnable
AlphaTestFunc
AlphaTestRef
AlphaToCoverageEnable
Android SM 4.0 (VULKAN)
Annotation %s doesn't have any values. Ignoring annotation.
AnyHitNV
AoS other than size 4 or 1 in middle end: 
ApH9A@t
Append
AppendStructuredBuffer
Applying map: 
April
Arg list too long
Arguments
Array
Array access is out of bounds, array size is 
Array pairs tested
ArrayLength
ArrayStride
Arrays not supported in texture template types
Asinh
At least one shader must specify a layout(max_primitives = value)
At least one shader must specify a layout(max_vertices = value)
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify an output layout(vertices=...)
Atan2
Atanh
AtomicAdd
AtomicAnd
AtomicCompSwap
AtomicCompareExchange
AtomicCompareExchangeWeak
AtomicCounter
AtomicCounterAdd
AtomicCounterAnd
AtomicCounterCompSwap
AtomicCounterDecrement
AtomicCounterExchange
AtomicCounterIncrement
AtomicCounterMax
AtomicCounterMemory
AtomicCounterMin
AtomicCounterOr
AtomicCounterSubtract
AtomicCounterXor
AtomicExchange
AtomicFlagClear
AtomicFlagTestAndSet
AtomicIAdd
AtomicIDecrement
AtomicIIncrement
AtomicISub
AtomicLoad
AtomicMax
AtomicMin
AtomicOr
AtomicSMax
AtomicSMin
AtomicStorage
AtomicStorageOps
AtomicStore
AtomicUMax
AtomicUMin
AtomicXor
Attempted to get underlying data type via member index for non-struct type.
August
AuthE
AuthenticAMD
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
Aw/Ic
AwYHc
B	H;A
B 9A t
B 9C 
B 9E 
B 9G u
B H+B
B H;A
B$A9C
B$H;A
B'H;A
B'H;G
B(A9@(|
B(H9B 
B(H9C
B(H9G
B(H;A
B(I9A(
B(I9C
B(L;A
B+H;A
B,A9@,
B.H;A
B09A0
B0A9A0
B0E+B(
B0E+B(t
B0E+B(t*M
B0L;A
B0fff
B49C4uc
B88C8uZ
B8H;NHt
B8L;A
B8|09
B98C9uQ
B<9C<uI
B>H;C
B@9C@uA
B@H9C@
BC?>6t9^	c:>
BD$0M
BD$8M
BD9CDu9H
BF>^G
BGR565
BGR888
BGR888_BLUESCREEN
BGRA1010102
BGRA4444
BGRA5551
BGRA8888
BGRA8888_LINEAR
BGRX5551
BGRX8888
BGRX8888_LINEAR
BHH9AHt
BHH9C u1H
BHH9C u:H
BHI9@Hu
BILINEAR
BINORMAL
BL$(A
BLENDINDICES
BLENDWEIGHT
BLEND_FACTOR
BOOLCONSTANT
BOOLLITERAL
BORDER
BREAK
BUFFER
BVEC2
BVEC3
BVEC4
BXI9AX
B`H+BXH
Back-edges (
BackColor
BackSecondaryColor
BackStencilDepthFailOp
BackStencilFailOp
BackStencilFunc
BackStencilPassOp
Bad BackEndPointer ctor used.
Bad DataLayout ctor used.  Tool did not specify a DataLayout to use?
Bad address
Bad aggregation op
Bad file descriptor
Bad unary op
Banerjee applications
Banerjee independence
Banerjee successes
Barrier
BaryCoordNV
BaryCoordNoPersp
BaryCoordNoPerspAMD
BaryCoordNoPerspCentroid
BaryCoordNoPerspCentroidAMD
BaryCoordNoPerspNV
BaryCoordNoPerspSample
BaryCoordNoPerspSampleAMD
BaryCoordPullModel
BaryCoordPullModelAMD
BaryCoordSmooth
BaryCoordSmoothAMD
BaryCoordSmoothCentroid
BaryCoordSmoothCentroidAMD
BaryCoordSmoothSample
BaryCoordSmoothSampleAMD
Base recognizer function 'alreadyParsedRule' called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntil' called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntilSet' called by unknown parser type - provide override for this function
Base recognizer function 'match' called by unknown parser type - provide override for this function
Base recognizer function 'matchAny' called by unknown parser type - provide override for this function
Base recognizer function 'mismatch' called by unknown parser type - provide override for this function
Base recognizer function 'synPred' called by unknown parser type - provide override for this function
Base recognizer function antlr3RecognitionExceptionNew called by unknown parser type - provide override for this function
Base recognizer function consumeUntilSet called by unknown parser type - provide override for this function
Base recognizer function displayRecognitionError called by unknown parser type - provide override for this function
Base recognizer function recover called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedSet called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedToken called by unknown parser type - provide override for this function
BaseInstance
BaseVertex
Basic Alias Analysis (stateless AA impl)
Basic Type in Bottom IR
BeginInvocationInterlockEXT
Bellevue1
Bhttp://cacerts.digicert.com/DigiCertSHA2AssuredIDCodeSigningCA.crt0
BinaryProperties_GetValue
Binding
BindlessConstants_t g_constants[ %d ];
BitCast applied to a non-pointer
BitCount
BitFieldInsert
BitFieldSExtract
BitFieldUExtract
BitPiece
BitReverse
Bitcast
Bitwise not
BitwiseAnd
BitwiseOr
BitwiseXor
BlendEnable
BlendFactor
BlendOp
BlendOpAlpha
Block
Block 
Block(s) 
Boolean
BorderColor
BoundingBox
Branch
Branch: Break
Branch: Continue
Branch: Kill
Branch: Return
Branch: Unknown Branch
BranchConditional
Break critical edges in CFG
Broken pipe
Buffer
BufferBlock
BuildMainEntryPointWrapper
BuildNDRange
BuiltIn
BuiltIn 
BuiltIn (No allowed mixing of built-in variables and 
BuiltIns can only target variables, structs or constants
BuiltinSymbolTable {
ByVal
ByteAddressBuffer
C	2G	
C	2G	$
C	:E	
C D8`
C D8h
C D9A s
C H+C
C H9AHu
C H9B0
C H9C
C H;C u
C I+C
C$9C w&H
C$A9@
C$L9e
C$v	H
C(D8 
C(D8 u
C(H+C H
C(H9(t
C(H9C u
C(H;^
C(I9@
C(I;]
C(L9(u
C(L9x
C(L;8u
C(Lcf
C*fD;
C,ssE
C-yh/
C0D8(
C0H9C(
C0H9C(t;
C0H;A
C5R?	
C83G8
C8<(u
C8H9C0r
C8H9C0t'H
C8H9C0u
C8H;^
C8H;y
C8I;PHt
C8I;_Ht
C8L;q
C8L;y
C8w	L9x
C@H98t%H
C@H9C8r
C@H9E
C@H9x
C@H;A
C@I;@Ht
C@L90t%H
CA< t(<#t
CALLDATAINNV
CALLDATANV
CARET
CD$@H+
CD$@M
CD$PH
CD$PM
CD$XL
CDA;ED
CENTROID
CHH9CXr
CHL9!t!H
CL$ L9D$0L
CL$0H
CL$PH
CL$XH
CL:>8
CLAMP
CLE;f
CMemAllocSystemInitialize
COHERENT
COLON
COLOR
COMMA
COMMENT
COMMON
COMPARISON_ANISOTROPIC
COMPARISON_MIN_LINEAR_MAG_MIP_POINT
COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_MAG_MIP_LINEAR
COMPARISON_MIN_MAG_MIP_POINT
COMPARISON_MIN_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_POINT_MAG_MIP_LINEAR
CONST
CONSTANT_REGISTER
CONTINUE
COrderedConstructor_Create<class COrderedInitShutdownRefWrapper<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)>,class CResolveOrderedFunc<class COrderedInitShutdownRefWrapper<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)>,&void __cdecl _ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)>(class COrderedConstructor_DependencyManagement<class COrderedInitShutdownRefWrapper<&void __cdecl EarlyInit_Common(bool,class COrderedConstructor_DependencyManagement<void> &)> > &)>,0>::AddRef
CPHc,
CPHcL$0I
CPacked
CT$8H
CT$PE3
CT$PH
CT$pA
CT$pE3
CT$pH
CUtlBuffer::VaPrintf
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlLeanVectorFixedGrowableBase<unsigned char,12,short>::EnsureCapacity
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase
CUtlRBTree overflow with %u elements!
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxAnnotation,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlRBTree<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,class CVfxParsedShaderParam *,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlRBTree<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short,class CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<class CUtlString,int,unsigned short,bool (__cdecl*)(class CUtlString const &,class CUtlString const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlRBTree<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short,class CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::CKeyLess,class CUtlMemory<struct UtlRBTreeNode_t<struct CUtlMap<unsigned int,class CVfxEntrypointsGL *,unsigned short,bool (__cdecl*)(unsigned int const &,unsigned int const &)>::Node_t,unsigned short>,unsigned short> >::NewNode
CUtlStreamBuffer does not support TEXT_BUFFER's use CUtlBuffer
CVfxContextMgrGL::CreateGLContext - Failed SDL_CreateWindow() for OpenGL dummy window
CVfxContextMgrGL::CreateGLContext - Failed SDL_GL_CreateContext() for OpenGL Device Context
CVfxContextMgrGL::CreateGLContext - Unable to initialize SDL.
CVfxContextMgrGL::CreateGLContext - missing OpenGL v2.0 entrypoints
CVfxContextMgrGL::CreateGLContext - missing OpenGL v3.0 entrypoint 'glGetStringi'
CVfxContextMgrGL::CreateGLContext - missing OpenGL v3.1 / GL_ARB_uniform_buffer_object extension entrypoints
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.1 / GL_ARB_get_program_binary
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.1 / GL_ARB_separate_shader_objects
CVfxContextMgrGL::CreateGLContext - missing OpenGL v4.3 / GL_ARB_program_interface_query extension entrypoints
CVfxContextMgrGL::GetGLEntrypointsForThread - Failed to Intialize OpenGL
CVfxD3dInclude::Open(105): Cannot read file "%s"
CVfxD3dInclude::Open(120): Cannot find include file %s
CVfxD3dInclude::Open(46): Cannot use absolute paths for shader includes. Found %s
CVfxEntrypointsGL::CreateGLContext
CVfxGL::CompileShaderAndGetVariables(2934): ERROR! Can't load vfx_dx11 dll!
CVfxGL::CompileShaderAndGetVariables(2947): ERROR! Can't load vfx_dx9 dll!
CVfxGL::CompileShaderAndGetVariables(3018): ERROR! Failed to convert GLSL to SPIRV!
CVfxGL::Init
CVfxGL::Init() - fsFactory can't get '%s' interface.
CVfxShaderFile::Unserialize
CVfxShaderValidatorGLslang::GetBinaryShader::<lambda_b73d8282cf09cfaddcd064ec244fe3d3>::operator ()
CVfxShaderValidatorGLslang::Initialize
CWD>~3
CXA8pXt
CXH9BXu
CXH9CP
CXHc8H
C\$@H;
C`H9B`t
C`H9CXt9H
CalculateLevelOfDetail
CalculateLevelOfDetailUnclamped
Call Graph SCC Pass Manager
Call graph node <<null function>>
Call graph node for function: '
CallGraph Construction
CallGraph Pass Manager
CallGraph Root is: 
CallableData ID
CallableDataNV
CallableNV
Calling D3DPreprocess()
Can not compute
Can only compare integers and floats
Can only compare scalars and vectors
Can only convert scalars and vectors
Can only use one of gl_ClipDistance or gl_ClipDistancePerViewNV
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Can only use one of gl_CullDistance or gl_CullDistancePerViewNV
Can only use one of gl_Layer or gl_LayerPerViewNV
Can only use one of gl_Position or gl_PositionPerViewNV
Can only use one of gl_ViewportMask or gl_ViewportMaskPerViewNV
Can't find constant buffer %s in constant buffer list
Can't find resource %s in effect parameter list
Can't find sampler %s in effect parameter list
Can't find shader constant %s in effect parameter list
Cannot allocate a variable containing a 16-bit type in 
Cannot allocate a variable containing a 8-bit type in 
Cannot attach multiple ES shaders of the same type to a single program
Cannot copy composites of 8- or 16-bit types
Cannot copy memory of objects containing 8- or 16-bit types
Cannot create a composite containing 8- or 16-bit types
Cannot create undefined values with 8- or 16-bit types
Cannot cross link ES and desktop profiles
Cannot declare a function in a function body
Cannot extract from a composite of 8- or 16-bit types
Cannot extract from a vector of 8- or 16-bit types
Cannot find option named '
Cannot form constants of 8- or 16-bit types
Cannot insert into a composite of 8- or 16-bit types
Cannot insert into a vector of 8- or 16-bit types
Cannot mix ES profile with non-ES profile shaders
Cannot reuse block name within the same interface:
Cannot shuffle a vector of 8- or 16-bit types
Cannot specify more than one option with cl::ConsumeAfter!
Cannot transpose matrices of 16-bit floats
Cannot use a pointer in the PhysicalStorageBuffer storage class
Cannot use both gl_FragColor and gl_FragData
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Canonicalize instructions for LunarGLASS
Canonicalize natural loops
Canonicalize the CFG for LunarGLASS
Capability
Capability 
Capability Image1D is required to access storage image
Capability ImageBuffer is required to access storage image
Capability ImageCubeArray is required to access 
Capability ImageRect is required to access storage image
Capability StorageImageReadWithoutFormat is required to 
Capability StorageImageWriteWithoutFormat is required to write 
CapabilityFragmentShaderPixelInterlockEXT
CapabilityFragmentShaderSampleInterlockEXT
CapabilityFragmentShaderShadingRateInterlockEXT
CaptureEventProfilingInfo
Case construct that targets 
Cd$XL
Ceiling
Centroid
CfE9ghu<fE9
Ch;8u=L
ChH+C`H
ChH;Q
ChH;^
CheckAccessFullyMapped
CheckBox
Cl$ H
Cl$@A
Cl$PH
Clamp
ClampToEdge
Class
Classes: Workgroup, CrossWorkgroup, Private, and Function
Classifying expressions for: 
Clay Clay Shader Compiler
Clay Shader Compiler
Cleanup: discarding lookahead
Cleanup: popping
ClipDistance
ClipDistancePerViewNV
ClipVertex
CloseHandle
CloseThreadpoolTimer
CloseThreadpoolWait
CloseThreadpoolWork
ClosestHitNV
Clspv
ClusteredReduce
CmdExecTime
Codeplay
Coherent
ColMajor
Color
ColorWriteEnable0
ColorWriteEnable1
ColorWriteEnable2
ColorWriteEnable3
Column Major operand <id> '
Column type is not defined.
Columns in a matrix must be of type vector.
Combine intrinsics for LunarGLASS
Combine redundant instructions
Comma
CommandLine
CommitReadPipe
CommitWritePipe
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
CompareStringEx
CompareStringW
Comparison Operator in Bottom IR: 
Comparison Vector Operator in Bottom IR: 
ComparisonFunc
Compilation failed; CVfxShaderReparserGL failed to reparse shader source.
Compilation failed; no code produced.  Log string from driver %s
Compilation failed; no code produced.  Log string from glslang:
Compile Targets
CompileTargets
Component
Component decoration specified for type 
Component index 
Component literal at operand 
Component type is not defined.
CompositeConstruct
CompositeExtract
CompositeInsert
Compute Shader
ComputeDerivativeGroupLinearNV
ComputeDerivativeGroupQuadsNV
Computed:
Condition
Condition operand for OpBranchConditional must be of boolean type
Const
ConstOffset
ConstOffset image operand not allowed 
ConstOffsets
ConstType
Constant
Constant:
ConstantBuffer
ConstantComposite
ConstantFalse
ConstantNull
ConstantPipeStorage
ConstantSampler
ConstantTrue
Construct 
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3
Construct bmat3x2
Construct bmat3x4
Construct bmat4
Construct bmat4x2
Construct bmat4x3
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct combined texture-sampler
Construct cooperative matrix
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3
Construct dmat3x2
Construct dmat3x4
Construct dmat4
Construct dmat4x2
Construct dmat4x3
Construct double
Construct dvec2
Construct dvec3
Construct dvec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3
Construct f16mat3x2
Construct f16mat3x4
Construct f16mat4
Construct f16mat4x2
Construct f16mat4x3
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct float
Construct float16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3
Construct imat3x2
Construct imat3x4
Construct imat4
Construct imat4x2
Construct imat4x3
Construct int
Construct int16_t
Construct int64
Construct int8_t
Construct ivec2
Construct ivec3
Construct ivec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3
Construct mat3x2
Construct mat3x4
Construct mat4
Construct mat4x2
Construct mat4x3
Construct multiInserts out of multiple insert/extracts
Construct reference
Construct reference type
Construct structure
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uint16_t
Construct uint64
Construct uint8_t
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3
Construct umat3x2
Construct umat3x4
Construct umat4
Construct umat4x2
Construct umat4x3
Construct uvec2
Construct uvec3
Construct uvec4
Construct vec2
Construct vec3
Construct vec4
Constu
Consume
ConsumeStructuredBuffer
Continue Target 
ContractionOff
Contradictory depth layouts
Contradictory input layout primitives
Contradictory input vertex spacing
Contradictory layout max_primitives values
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory local size
Contradictory local size specialization ids
Contradictory output layout primitives
Contradictory triangle ordering
Contradictory xfb_stride
Control the amount of inlining to perform (default = 225)
Control the amount of phi node folding to perform (default = 1)
ControlBarrier
Convert bool to double
Convert bool to float
Convert bool to float16_t
Convert bool to in16t_t
Convert bool to int
Convert bool to int64
Convert bool to int8_t
Convert bool to uint
Convert bool to uint16_t
Convert bool to uint64
Convert bool to uint8_t
Convert double to bool
Convert double to float
Convert double to float16_t
Convert double to int
Convert double to int16_t
Convert double to int64
Convert double to int8_t
Convert double to uint
Convert double to uint16_t
Convert double to uint64
Convert double to uint8_t
Convert float to bool
Convert float to double
Convert float to float16_t
Convert float to int
Convert float to int16_t
Convert float to int64
Convert float to int8_t
Convert float to uint
Convert float to uint16_t
Convert float to uint64
Convert float to uint8_t
Convert float16_t to bool
Convert float16_t to double
Convert float16_t to float
Convert float16_t to int
Convert float16_t to int16_t
Convert float16_t to int64
Convert float16_t to int8_t
Convert float16_t to uint
Convert float16_t to uint16_t
Convert float16_t to uint64
Convert float16_t to uint8_t
Convert int to bool
Convert int to double
Convert int to float
Convert int to float16_t
Convert int to int16_t
Convert int to int64
Convert int to int8_t
Convert int to uint
Convert int to uint16_t
Convert int to uint64
Convert int to uint8_t
Convert int16_t to bool
Convert int16_t to double
Convert int16_t to float
Convert int16_t to float16_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to int8_t
Convert int16_t to uint
Convert int16_t to uint16_t
Convert int16_t to uint64
Convert int16_t to uint8_t
Convert int64 to bool
Convert int64 to double
Convert int64 to float
Convert int64 to float16_t
Convert int64 to int
Convert int64 to int16_t
Convert int64 to int8_t
Convert int64 to uint
Convert int64 to uint16_t
Convert int64 to uint64
Convert int64 to uint8_t
Convert int8_t to bool
Convert int8_t to double
Convert int8_t to float
Convert int8_t to float16_t
Convert int8_t to int
Convert int8_t to int16_t
Convert int8_t to int64
Convert int8_t to uint
Convert int8_t to uint16_t
Convert int8_t to uint64
Convert int8_t to uint8_t
Convert pointer to uint64_t
Convert uint to bool
Convert uint to double
Convert uint to float
Convert uint to float16_t
Convert uint to int
Convert uint to int16_t
Convert uint to int64
Convert uint to int8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to uint8_t
Convert uint16_t to bool
Convert uint16_t to double
Convert uint16_t to float
Convert uint16_t to float16_t
Convert uint16_t to int
Convert uint16_t to int16_t
Convert uint16_t to int64
Convert uint16_t to int8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to uint8_t
Convert uint64 to bool
Convert uint64 to double
Convert uint64 to float
Convert uint64 to float16_t
Convert uint64 to int
Convert uint64 to int16_t
Convert uint64 to int64
Convert uint64 to int8_t
Convert uint64 to uint
Convert uint64 to uint16
Convert uint64 to uint8_t
Convert uint64_t to pointer
Convert uint8_t to bool
Convert uint8_t to double
Convert uint8_t to float
Convert uint8_t to float16_t
Convert uint8_t to int
Convert uint8_t to int16_t
Convert uint8_t to int64
Convert uint8_t to int8_t
Convert uint8_t to uint
Convert uint8_t to uint16_t
Convert uint8_t to uint64
ConvertFToS
ConvertFToU
ConvertPtrToU
ConvertSToF
ConvertUToF
ConvertUToPtr
Cooperative matrix 'K' mismatch: 
Cooperative matrix 'M' mismatch: 
Cooperative matrix 'N' mismatch: 
Cooperative matrix constructor argument must be scalar or cooperative matrix
Cooperative matrix scopes must match: 
Cooperative matrix types (or types containing them) can only be allocated 
Cooperative matrix types must not be used in shared memory
CooperativeMatrixLengthNV
CooperativeMatrixLoadNV
CooperativeMatrixMulAddNV
CooperativeMatrixNV
CooperativeMatrixNV capability is present
CooperativeMatrixStoreNV
CopyLogical
CopyMemory
CopyMemorySized
CopyObject
Copyright (c) by P.J. Plauger, licensed by Dinkumware, Ltd. ALL RIGHTS RESERVED.
CorExitProcess
Corrupt image type definition
Could not perform requested binary operation
Could not process include directive
CounterBuffer
Coupled subscript pairs
CpH+ChH
CpH;A
CreateEventExW
CreateEventW
CreateFileW
CreateInterface
CreateMutexA
CreatePipeFromPipeStorage
CreateSemaphoreExW
CreateSemaphoreW
CreateSymbolicLinkW
CreateThreadpoolTimer
CreateThreadpoolWait
CreateThreadpoolWork
CreateUserEvent
Cross
CrossDevice
CrossWorkgroup
CrossWorkgroup or Function: 
CrossWorkgroupMemory
Ct$0I
CubeFaceCoordAMD
CubeFaceIndexAMD
CullDistance
CullDistancePerViewNV
CullMode
Currently unhandled instruction 
Currently unsupported instruction: 
Cx<au
Cx<au	
Cx<fu	
CxH9Cpr
Cy2@K>
C|$0I
C|$@H
C|$@I
D	C8H
D	x$A
D W?{W
D$	H3
D$ 9YTu
D$ ;D$X
D$ ;V
D$ <9w
D$ A3
D$ A;
D$ A;E(
D$ D8
D$ D91H
D$ D9uTu
D$ D:	
D$ D;
D$ D;l$(teM
D$ E3
D$ H+
D$ H98
D$ H9D$(u
D$ H9E
D$ H;
D$ H;C
D$ H;D$(t
D$ H;G
D$ H;L$Hr"A
D$ I+
D$ I;
D$ L+
D$ L9D$(u"
D$ L9E
D$ L;
D$ fD;	
D$ ff
D$ t*L
D$ u-H
D$ v	
D$!H3
D$!L3
D$"H3
D$"L3
D$#H3
D$#L3
D$$;D$ u
D$$D;
D$$H3
D$$H;
D$%H3
D$&H3
D$'H3
D$(D8
D$(D8#u
D$(E3
D$(H+
D$(H9
D$(H9A
D$(H9APw
D$(H9C
D$(H9D$ t
D$(H9G
D$(H;
D$(H;D$0r
D$(H;D$8
D$(H;L$pr"A
D$(Hc
D$(I+
D$(I;
D$(I;F
D$(L+
D$(L9
D$(L;
D$(Lc
D$(M;
D$(fff
D$(usH
D$)H3
D$)L3
D$*H3
D$*L3
D$+H3
D$+L3
D$,9D$$
D$,9D$$tUA
D$,E3
D$,H3
D$,L3
D$-H3
D$-L3
D$.H3
D$.L3
D$/H3
D$/L3
D$0 H
D$0)H
D$09D$(
D$09nTu
D$0;D$4u
D$0;D$8|
D$0;D$P|
D$0;D$P}
D$0=1
D$0@2
D$0A;
D$0D#
D$0D8
D$0E#
D$0E3
D$0H	
D$0H#
D$0H+
D$0H9A
D$0H9C
D$0H9G
D$0H;
D$0H;D$8r
D$0H;E
D$0H;F
D$0H;L$`r
D$0H;M
D$0Hc
D$0HcCdH
D$0HcH
D$0I+
D$0I;
D$0L+
D$0L;
D$0Lc!L
D$0M+
D$0M9N
D$0M;
D$0fD
D$0fH
D$0t5
D$0tu
D$0uuH+
D$0w-
D$0}H
D$19|$8
D$1H3
D$1H9M
D$1L3
D$2H3
D$2L3
D$3H3
D$3L3
D$49C
D$49D$8tBL
D$49D$Dta
D$4D;E0
D$4H+
D$4H3
D$4H;
D$4L+
D$4L3
D$4f)G
D$5H3
D$5L+
D$5L3
D$6H3
D$6L3
D$7H3
D$7L3
D$8 H
D$89p 
D$89|$`
D$8;D$Xt	H
D$8A+
D$8A;
D$8D+
D$8D8
D$8E2
D$8E3
D$8E8} tEH
D$8H+
D$8H+D$0H
D$8H9
D$8H9A
D$8H9D$H
D$8H9G
D$8H;
D$8H;D$@r
D$8H;D$Hu
D$8H;\$P
D$8H;q
D$8I+
D$8I;
D$8L+
D$8L9
D$8L;
D$8fA
D$9H3
D$:H3
D$;H3
D$<9D$$
D$<9D$8ta
D$<9D$@uZ
D$<;D$$t
D$<A+
D$<H3
D$=H3
D$>H3
D$?H3
D$@%I
D$@+C
D$@;D$`L
D$@A;
D$@D8
D$@E2
D$@E3
D$@E8} tFH
D$@E;
D$@H+
D$@H9A
D$@H9C
D$@H9D$8
D$@H9D$8t
D$@H9N
D$@H;
D$@H;A
D$@H;C
D$@H;D$H
D$@H;F
D$@H;G
D$@H;M
D$@H;rH
D$@Hc
D$@HcH
D$@HcS(E3
D$@I+
D$@I9D$8r
D$@I;
D$@Ic
D$@L+
D$@L9c
D$@L;
D$@L;D$Hu
D$@M+
D$@M;
D$@fA
D$@fD
D$@t/H+
D$@tU
D$A+L
D$AH3
D$BH3
D$CH3
D$D9D$HuP
D$DH3
D$DH;EP
D$EH3
D$FH3
D$GH3
D$H9Y$
D$H9^0
D$H;T$X
D$H;^0
D$H;_
D$H@8~
D$HD8
D$HE3
D$HH+
D$HH+D$@H
D$HH9A
D$HH9C
D$HH9D$8
D$HH9D$@
D$HH9D$X
D$HH9\$8t
D$HH9\$Xt
D$HH;
D$HH;D$Pr
D$HH;E
D$HH;M
D$HH;T$P
D$HI+
D$HI;
D$HL+
D$HL9
D$HL98
D$HL9G
D$HL;
D$HL;D$`
D$HLc
D$HM+
D$HM;
D$HM;NXt
D$Hf;
D$P H
D$P I
D$P8A t
D$P9D$0
D$P;D$X
D$P;E
D$P;t$@u
D$PD8
D$PE3
D$PE;
D$PH+
D$PH9D$Hr
D$PH9D$Xu"
D$PH9G t
D$PH9M
D$PH;
D$PH;C
D$PH;C(t
D$PH;D$Xr
D$PH;F
D$PHc
D$PHcChH
D$PHcH
D$PHcX H
D$PI+
D$PI;
D$PIc
D$PL+
D$PL+}
D$PL;
D$PL;D$Xu
D$PLc
D$PM+
D$PMc
D$Pv	H
D$QH3
D$RH3
D$SH3
D$TH3
D$TH;
D$UH3
D$VH3
D$WH3
D$X%	
D$X9<
D$X9Y$
D$X;E
D$XA3
D$XD8
D$XD8p
D$XD90}
D$XD9e
D$XE3
D$XH+
D$XH9D$8t
D$XH9D$H
D$XH9D$Pu
D$XH9D$h
D$XH;
D$XH;D$`r
D$XH;G
D$XH;M
D$XH;M r
D$XI+
D$XI;
D$XL+
D$XL;
D$XM+
D$ZH3
D$[H3
D$[L3
D$\E3
D$`A+
D$`A;
D$`D;
D$`E#
D$`E3
D$`H+
D$`H+D$XH
D$`H9D$Xr
D$`H9D$x
D$`H9G
D$`H9h
D$`H;
D$`H;A
D$`H;D$hr%A
D$`Hc
D$`HcH
D$`HcK`
D$`I+
D$`I;
D$`L+
D$`L;
D$`M+
D$`M;
D$`f9X
D$`t4L
D$`u$E
D$`v	H
D$aL3
D$bL3
D$cL3
D$d;\$t
D$h$?<
D$h9A
D$h;D$8
D$h;E
D$hA+
D$hD;
D$hE2
D$hE3
D$hH9A
D$hH9B
D$hH9D$8
D$hH9D$X
D$hH9D$`
D$hH9E
D$hH9FH
D$hH9G0t
D$hH9N
D$hH;
D$hH;D$pr
D$hH;G
D$hH;M
D$hH;M r
D$hH;MPr$A
D$hH;X
D$hHc
D$hI+
D$hI;
D$hL+
D$hL+)E3
D$hL9
D$hL;
D$hL;	
D$hL;y
D$hff
D$p9D$t
D$p;E
D$p;]
D$p@8t$@ti
D$pA;
D$pE+
D$pE3
D$pH+
D$pH9D$0
D$pH9FH
D$pH;
D$pH;D$0u
D$pH;E
D$pHcH
D$pHi
D$pI;
D$pIc
D$pL+
D$pL;
D$pfA
D$pff
D$x9<
D$xA;
D$xD;
D$xE3
D$xH+
D$xH9
D$xH9D$8ufH
D$xH9D$p
D$xH;
D$xH;E
D$xH;M
D$xI;
D$xL+
D$xL;
D$xL;E
D$xf	C
D$xf9X
D(8Ht}
D+@(t
D+D$<D;
D+D$tE+
D+E$D;
D+E(t%L
D+FDE+
D+I(t
D/ 9C uo
D08@t	
D15S1
D16_SHADOW
D18 t
D24FS8
D24S8
D24X4S4
D24X8
D24X8_SHADOW
D3D$HA
D3DCOLORtoUBYTE4
D3DCompile
D3DDisassemble
D3DPreprocess
D3DPreprocess() failed with no error message! CVfxGL::GetAllShaderVariables(3401): 
D3DReflect
D3DStripShader
D3DXPreprocess() failed with no error message! CVfxGL::CompileShaderAndGetVariables(2566): 
D8 tK
D8$:u
D8&t!
D8&t4H
D8(t H
D80t8H
D80t{3
D82u&H
D88Ht!
D88Hte
D8?tnH
D8A,A
D8A-t
D8APtPH
D8AQtV
D8AQt^H
D8ATt7
D8ATtJ
D8AptAH
D8B,H
D8B-t
D8I,A
D8I-t
D8Q-t
D8T$(
D8T$8t
D8T$Pu
D8\$@t
D8`,t
D8`-t
D8a-t
D8b-t
D8b-u
D8c-t
D8c-u
D8c@u
D8d$1
D8d$8
D8d$8t
D8d$@
D8d$Dt-H
D8d$H
D8d$Ht
D8d$`t
D8d$ht
D8egt	I
D8eoL
D8eou5E3
D8f-t
D8g,t
D8g-A
D8g-t
D8g-u
D8gpt-H
D8k-A
D8k-t
D8l$0
D8l$0E
D8l$@t
D8l$ht
D8n,t
D8n-t
D8o	t4
D8o-t
D8o-u
D8p,A
D8q	t4
D8q-t
D8r-t
D8s,t
D8s-A
D8s-t
D8t$8t
D8t$Ht
D8uPt
D8ugL
D8x,t
D8y-t
D8z,t
D8z-t
D8{,t
D8{-A
D8{-t
D8{-u
D8|$ u
D8|$8
D8|$@t
D8|$`t6L
D8|$xA
D8}gL
D8}gM
D8}gu
D8~(u
D9"t	H
D91~HH
D96tcH
D96w	L9~
D97tcH
D97w	H9O
D97w	L9
D97wCD93w>H
D97wGD93wBH
D98Ht;H
D98t7
D9;w6A;
D9>v	H
D9@ s
D9A }
D9ATu
D9B s
D9B }
D9D$@~:H
D9H A
D9H$t
D9I }
D9I$t
D9I0t
D9Q$t
D9R$A
D9X0H
D9\$@u
D9`8w
D9`8w	H
D9b0u
D9c t
D9d$ v
D9d$(v
D9d$0v
D9d$8v
D9d$H
D9d$Hv
D9d$`v
D9d$xv	H
D9h0|
D9l$ v
D9l$4
D9n(t+H
D9q$A
D9sTu
D9t$ v
D9t$0
D9t$0t
D9t$0v
D9t$4
D9t$@
D9t$@v
D9t$@w
D9t$Hv
D9t$Xv
D9t$Xv	H
D9t$pw
D9ugt
D9y }
D9z }
D9|$ 
D9|$ v
D9|$ ~{H
D9|$$t}
D9|$0v
D9|$8tKM
D9|$x
D9|5Lt
D:\dev\source2\main\src\thirdparty\glslang\External\spirv-tools\source\opt\type_manager.cpp
D;-j~
D;@ s
D;@ }
D;C sOH
D;C };H
D;C }FH
D;C }IH
D;H A
D;K };H
D;Klvi
D;Ktv<
D;Q s
D;X s
D;d$8
D;d$Pu
D;d$h|
D;d$pu
D;d$x}<
D;epu
D;l$0ta
D;l$8
D;l$<ta
D;l$`
D;mXs@
D;s }OH
D;t$,}
D;t$0H
D;t$8
D;t$8tp
D;t$P
D;x }
D;y u	E
D;{ }CH
D;|$ 
D;|$P
D;|$l
D;|$p
D;|$|t~H
D<P0I
D@8~-t
DCE Vars: 
DD$$H
DD$(E3
DD$`H
DEBUG
DEBUG build
DECR_SAT
DEC_OP
DEFAULT
DEMOTE
DEPTH
DEST_ALPHA
DEST_COLOR
DEVICECOHERENT
DFSNumbers invalid: 
DFUI,,
DFUI,U
DIGIT
DISCARD
DIV_ASSIGN
DMAT2
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4
DMAT4X2
DMAT4X3
DMAT4X4
DOUBLE
DOUBLECONSTANT
DPdxCoarse
DPdxFine
DPdyCoarse
DPdyFine
DT$xE
DVEC2
DVEC3
DVEC4
DW_ATE_UTF
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_decimal_float
DW_ATE_edited
DW_ATE_float
DW_ATE_hi_user
DW_ATE_imaginary_float
DW_ATE_lo_user
DW_ATE_numeric_string
DW_ATE_packed_decimal
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_signed_fixed
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_unsigned_fixed
DW_LANG_Ada83
DW_LANG_Ada95
DW_LANG_C
DW_LANG_C89
DW_LANG_C99
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_D
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Fortran95
DW_LANG_Java
DW_LANG_Modula2
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_PLI
DW_LANG_Pascal83
DW_LANG_UPC
DW_LANG_hi_user
DW_LANG_lo_user
DW_TAG_APPLE_property
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_template_template_param
DW_TAG_MIPS_loop
DW_TAG_access_declaration
DW_TAG_arg_variable
DW_TAG_array_type
DW_TAG_auto_variable
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_class_template
DW_TAG_class_type
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_compile_unit
DW_TAG_condition
DW_TAG_const_type
DW_TAG_constant
DW_TAG_dwarf_procedure
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_formal_parameter
DW_TAG_format_label
DW_TAG_friend
DW_TAG_function_template
DW_TAG_hi_user
DW_TAG_imported_declaration
DW_TAG_imported_module
DW_TAG_imported_unit
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_interface_type
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_lo_user
DW_TAG_member
DW_TAG_module
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_namespace
DW_TAG_packed_type
DW_TAG_partial_unit
DW_TAG_pointer_type
DW_TAG_ptr_to_member_type
DW_TAG_reference_type
DW_TAG_restrict_type
DW_TAG_rvalue_reference_type
DW_TAG_set_type
DW_TAG_shared_type
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subprogram
DW_TAG_subrange_type
DW_TAG_subroutine_type
DW_TAG_template_alias
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_type_unit
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_unspecified_type
DW_TAG_variable
DW_TAG_variant
DW_TAG_variant_part
DW_TAG_volatile_type
DW_TAG_with_stmt
DXT1_ONEBITALPHA
DXT5_NM
D\$xH
Data Layout
Dd$pH
Dd$pL
Dead Store Elimination
DebugCompilationUnit
DebugDeclare
DebugExpression
DebugFunction
DebugFunctionDeclaration
DebugGlobalVariable
DebugInfo
DebugInfoNone
DebugInlinedAt
DebugInlinedVariable
DebugLexicalBlock
DebugLexicalBlockDiscriminator
DebugLocalVariable
DebugMacroDef
DebugMacroUndef
DebugNoScope
DebugOperation
DebugScope
DebugTypeArray
DebugTypeBasic
DebugTypeComposite
DebugTypeEnum
DebugTypeFunction
DebugTypeInheritance
DebugTypeMember
DebugTypePointer
DebugTypePtrToMember
DebugTypeQualifier
DebugTypeTemplate
DebugTypeTemplateParameter
DebugTypeTemplateParameterPack
DebugTypeTemplateTemplateParameter
DebugTypeVector
DebugTypedef
DebugValue
Debugging instructions are not allowed in the WebGPU execution 
December
DecodePointer
Decompose instructions for LunarGLASS
Decorate
DecorateId
DecorateString
DecorateStringGOOGLE
DecorationAliasedPointerEXT
DecorationGroup
DecorationHlslCounterBufferGOOGLE
DecorationHlslSemanticGOOGLE
DecorationNonUniformEXT
DecorationRestrictPointerEXT
Decorations taking ID parameters may not be used with OpDecorateId
Decorations that don't take ID parameters may not be used with OpDecorateId
DecrementCounter
DefaultSamplerState
Degrees
DeleteCriticalSection
DeleteFileW
Deleting
Deleting old shadercache file: %s
Delta applications
Delta independence
Delta propagations
Delta successes
Demote
Demote all values to stack slots
DemoteToHelperInvocationEXT
DenormFlushToZero
DenormPreserve
DependencyInfinite
DependencyLength
Depth
DepthBias
DepthBiasClamp
DepthClipEnable
DepthEnable
DepthFunc
DepthGreater
DepthLess
DepthReplacing
DepthStencil
DepthUnchanged
DepthWriteEnable
Deref
Derivative instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model: 
Derivative instructions require Fragment or GLCompute execution model: 
DerivativeControl
DerivativeGroupLinearNV
DerivativeGroupQuadsNV
Description
DescriptorSet
Details
Determinant
Determining loop execution counts for: 
Dev Shader
DevShader
Device
Device, Workgroup and Invocation
DeviceEnqueue
DeviceEvent
DeviceGroup
DeviceIndex
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
DigiCert Assured ID CA-1
DigiCert Assured ID CA-10
DigiCert Assured ID Root CA0
DigiCert Inc1
DigiCert Timestamp Responder0
DigiCert1%0#
Dim SubpassData requires Fragment execution model: 
Dim SubpassData requires Sampled to be 2
Dim SubpassData requires format Unknown
Directory not empty
Disable branch optimizations in CodeGenPrepare
Disable memory promotion in LICM pass
Disable select to branch conversion.
Disabled
Display all available options
Display available options (-help-hidden for more)
Display list of all available options
Display list of available options (-help-list-hidden for more)
Display the version of this program
Distance
Domain Shader
Domain error
Dominance Frontier Construction
Dominator Tree Construction
DominatorTree is not up to date!
DontFlatten
DontInline
DontUnroll
DrawId
DrawIndex
DrawParameters
DstBlend
DstBlendAlpha
Dt$PL
Duplicate non-aggregate type declarations are not allowed. Opcode: 
Duplicate return instructions into unconditional branches
Dynamic combo %s referenced in expression doesn't exist.
E 9\$8
E H+E
E H;E`t3L
E L; t*I
E$Ic] A
E(9G(
E(H94
E(H9E 
E(H9E H
E(H9E r
E(H;E0r
E(H;F
E(I9E 
E(I;v
E(fff
E+A(tVM
E+BHI
E+D$(
E+E$E+
E+E|E+
E+F$E+
E+F|E+
E+GTE+
E+J(t1M
E+O(t
E,<!}&H
E/H9E
E09C0
E0C07
E0H90
E0H9A
E0H9E(r
E0H;E
E0HcH
E0I+E H
E0Jc<
E0Lcx
E8$6u
E8H+E0H
E8H9E0
E8H9E0t	H
E8H;E@r
E8HXt
E8I9E0r
E8L;y
E8`$D
E8`,t
E8`-t
E8`-u
E8f,t
E8fhu
E8h,t
E8h-t
E8n,t
E8n-u
E8o,t
E8o-t
E8qXt
E8x-t
E8x-u
E8~,tP
E8~\t
E9!uSI
E9'v	I
E9)unI
E9,	}3H
E94$w
E9>wGD9?wBH
E9X s
E9X8t
E9g4tYA
E;~(H
E>nEA
E?H9C
E@H9A
E@H;A
E@H;C
E@H;G
E@I9E8r
E@L9p
ED$4A
ED$`E
ED$`H
ED;ADu
EH3FH
EHH9E@
EHH;EPr
EHL;EPr
EL$PI
EL$pH
EMdBuiltIn input value
EMdBuiltIn output value
END_UNIFORMBINDINGS*/
EP*?@
EPH+E@H
EPI;EH
EPLcU
EPt?A
EQUAL
EQ_OP
ERROR
ERROR!
ERROR: 
ERROR_not_op_extension
ESC_SEQ
EXH9D$@
EXH9EP
EXH;E`r
EXH;X
EXH;x
EXI9EPr
EXPLICITINTERPAMD
EXPONENT
EXfD9H:
E_;Eg
Early CSE
Early exit
EarlyFragmentTests
Ed$ D
Eg9Ews
Eg;E/
EgH9]wt
EhA9u
EhH9E`
EhH9E`r
EhH9E`t	H
EhH;Epr
EhI;D$
EhL;q
Ehv	H
El$PH
Element type is not defined.
Eliminate Early Returns for LunarGLASS
Embedded
EmitStreamVertex
EmitVertex
EmitVertex(); \
Enable -time-passes memory tracking (this may be slow)
Enable LSR phi elimination
Enable unsafe double to float shrinking for math lib calls
EncodePointer
Encountered extended instruction GLSLstd450Bad
End of input in comment
End of input in macro
End of input reached while decoding Op
End of line in macro substitution:
End of line in string
EndInvocationInterlockEXT
EndPrimitive
EndStreamPrimitive
EnqueueKernel
EnqueueMarker
EnqueuedWorkgroupSize
EnterCriticalSection
Entering state %d
Entry point id '
Entry point name "
Entry point not found
Entry points may not have a call graph with cycles.
EntryPoint
EnumSystemLocalesEx
EnumSystemLocalesW
EoH9Egu
EoH;F
EoH;G
Equal
Error adding shader to cache
Error loading D3D compiler DLL %s!
Error masking unused parts for vfx file CVfxGL::CompileShaderAndGetVariables(2528): 
Error opening info-output-file '
Error opening output file '
Error opening vfx file CVfxGL::CompileShaderAndGetVariables(2516): 
Error parsing %s function signature
Error reading bitcode file: 
Error while running preprocessor over shader code:
Error: Invalid shader variable reference in expression: %s can't be used in expression because it is not an artist-editable variable
Error: Required pass not found! Possible causes:
Error: Result Id is 0
Error: Type Id is 0
Error: discarding
Error: popping
EvaluateAttributeAtCentroid
EvaluateAttributeAtSample
EvaluateAttributeSnapped
Event
Ew#Hc
EwH9E
EwfA#
ExH9Ep
Exact RDIV applications
Exact RDIV independence
Exact SIV applications
Exact SIV independence
Exact SIV successes
ExclusiveScan
Exec format error
ExecuteCallableNV
Executing Pass '
Execution mode can only be used with a Geometry or tessellation execution model.
Execution mode can only be used with a Geometry, tessellation or MeshNV execution model.
Execution mode can only be used with a Kernel or GLCompute execution model.
Execution mode can only be used with a Kernel, GLCompute, MeshNV, or TaskNV execution model.
Execution mode can only be used with a tessellation execution model.
Execution mode can only be used with the Fragment execution model.
Execution mode can only be used with the Geometry execution model.
Execution mode can only be used with the Geometry or MeshNV execution model.
Execution mode can only be used with the Kernel execution model.
Execution mode must be one of OriginUpperLeft, DepthReplacing, DepthGreater, DepthLess, DepthUnchanged, LocalSize, or LocalSizeHint for WebGPU environment.
ExecutionMode
ExecutionModeId
Executions
ExitProcess
Expected
Expected 
Expected 32-bit float scalar or vector type as Result Type: 
Expected Base Type to be equal to Result Type: 
Expected Base Type to be int scalar or vector: 
Expected Base dimension to be equal to Result Type dimension: 
Expected Base to be int scalar or vector: 
Expected Base to have the same bit width 
Expected Base to have the same dimension 
Expected Component to be 32-bit int scalar
Expected Component type to be equal to Result Type 
Expected Composite to be an object of composite type
Expected Constituent type to be equal to the 
Expected Constituent type to be equal to the column 
Expected Constituent type to be equal to the component type
Expected Constituents to be scalars or vectors of
Expected Coordinate to be float scalar or vector
Expected Coordinate to be int or float scalar or vector
Expected Coordinate to be int scalar or vector
Expected Coordinate to be integer scalar or vector
Expected Coordinate to have 
Expected Coordinate to have at least 
Expected Count Type to be int scalar: 
Expected Dref to be of 32-bit float type
Expected Image 'Dim' cannot be Cube
Expected Image 'Dim' must be one of 1D, 2D, or Cube when Arrayed is 1
Expected Image 'Dim' parameter to be 1D, 2D, 3D or Rect
Expected Image 'Dim' parameter to be not SubpassData.
Expected Image 'Sampled Type' to be the same as 
Expected Image 'Sampled Type' to be the same as Texel 
Expected Image 'Sampled Type' to be the same as the Type pointed to by Result Type
Expected Image 'Sampled' parameter to be 0 or 1
Expected Image 'Sampled' parameter to be 0 or 2
Expected Image 'Sampled' parameter to be 1
Expected Image 'Sampled' parameter to be 1 
Expected Image Operand Bias to be float scalar
Expected Image Operand ConstOffset to be a const object
Expected Image Operand ConstOffset to be int scalar or 
Expected Image Operand ConstOffset to have 
Expected Image Operand ConstOffsets array componenets to be int vectors of size 2
Expected Image Operand ConstOffsets to be a const object
Expected Image Operand ConstOffsets to be an array of size 4
Expected Image Operand Grad dx to have 
Expected Image Operand Grad dy to have 
Expected Image Operand Lod to be float scalar when used 
Expected Image Operand Lod to be int scalar when used with 
Expected Image Operand MinLod to be float scalar
Expected Image Operand Offset to be int scalar or 
Expected Image Operand Offset to have 
Expected Image Operand Sample to be int scalar
Expected Image operand to be of type OpTypeSampledImage
Expected Image to be OpTypePointer
Expected Image to be OpTypePointer with Type OpTypeImage
Expected Image to be of type OpTypeImage
Expected Image to be of type OpTypeImage.
Expected Index to be int scalar
Expected Insert Type to be equal to Result Type: 
Expected Level of Detail to be int scalar
Expected Matrix to be of type OpTypeMatrix
Expected Offset Type to be int scalar: 
Expected P type and Result Type to be the same: 
Expected Resident Code to be int scalar
Expected Result Type and Operand type to be the same
Expected Result Type struct member types to be identical: 
Expected Result Type struct member types to be integer scalar 
Expected Result Type struct member types to be unsigned 
Expected Result Type struct to have two members: 
Expected Result Type to be OpTypeImage
Expected Result Type to be OpTypePointer
Expected Result Type to be OpTypePointer whose Storage Class operand is Image
Expected Result Type to be OpTypePointer whose Type operand must be a scalar numerical type or OpTypeVoid
Expected Result Type to be OpTypeSampledImage.
Expected Result Type to be OpTypeStruct
Expected Result Type to be OpTypeVector
Expected Result Type to be a composite type
Expected Result Type to be a matrix type
Expected Result Type to be a pointer or int or float vector 
Expected Result Type to be a pointer: 
Expected Result Type to be a scalar type
Expected Result Type to be a struct containing an int scalar and a texel
Expected Result Type to be an unsigned integer type scalar.
Expected Result Type to be bool scalar type
Expected Result Type to be float scalar or vector type: 
Expected Result Type to be float vector type
Expected Result Type to be int scalar or vector type
Expected Result Type to be int scalar type
Expected Result Type to be of target storage class: 
Expected Result Type to have 2 components
Expected Result Type to have storage class Generic: 
Expected Result Type to have storage class Workgroup, 
Expected Sample Image image type to be equal to Result Type
Expected Sample Image to be of type OpTypeSampleImage
Expected Sample for Image with MS 0 to be a valid <id> for the value 0
Expected Sample to be integer scalar
Expected Sampled Image to be of type OpTypeSampledImage
Expected Sampled Type to be a 32-bit int or float scalar type for Vulkan environment
Expected Sampled Type to be either void or
Expected Sampler to be of type OpTypeSampler
Expected Shift to be int scalar or vector: 
Expected Shift to have the same dimension 
Expected Texel to be int or float vector or scalar
Expected Value to be a vector of four components of integer type scalar
Expected Value to be a vector of two components of unsigned integer or 64bit unsigned integer
Expected Vector component type to be equal to Result Type
Expected Vector type to be OpTypeVector
Expected Vector type to be equal to Result Type
Expected a struct as Result Type: 
Expected arithmetic operands to be of Result Type: 
Expected arithmetic operands to have the same bit width 
Expected arithmetic operands to have the same dimension 
Expected bool scalar or vector type as Result Type: 
Expected bool scalar or vector type as condition: 
Expected bool scalar type as Result Type: 
Expected both Image Operand Grad ids to be float scalars or 
Expected both objects to be of Result Type: 
Expected both operands to be of Result Type member type: 
Expected both operands to be of Result Type: 
Expected both operands to have the same component bit width: 
Expected column type of Result Type to be equal to the type 
Expected column type of the matrix to be equal to Result Type: 
Expected column types of Result Type and left matrix to be 
Expected columns of Matrix type and Result Type to be 
Expected component type to be equal to Result Type: 
Expected component types of Matrix and Result Type to be 
Expected component types of Result Type and matrix to be 
Expected component types of Result Type and right matrix to be 
Expected component types of Result Type and vector to be 
Expected component types of the operands to be equal: 
Expected cooperative matrix type as A Type: 
Expected cooperative matrix type as B Type: 
Expected cooperative matrix type as C Type: 
Expected cooperative matrix type as Result Type: 
Expected cooperative matrix types
Expected float matrix type as Result Type: 
Expected float matrix type as left operand: 
Expected float matrix type as right operand: 
Expected float scalar or vector type as Result Type: 
Expected float scalar type as Result Type: 
Expected float vector as operand: 
Expected float vector type as Result Type: 
Expected float vector type as left operand: 
Expected float vector type as right operand: 
Expected floating scalar or vector type as Result Type: 
Expected input and Result Type to point to the same type: 
Expected input to be a pointer or int or float vector 
Expected input to be a pointer or int scalar if Result Type is pointer: 
Expected input to be a pointer, int scalar or 32-bit int vector if Result Type is pointer: 
Expected input to be a pointer: 
Expected input to be float scalar or vector: 
Expected input to be int scalar or vector: 
Expected input to have a type: 
Expected input to have different bit width from Result Type: 
Expected input to have storage class Generic: 
Expected input to have storage class Workgroup, 
Expected input to have the same dimension as Result Type: 
Expected input to have the same total bit width as 
Expected input type to be equal to Result Type: 
Expected int scalar as input: 
Expected int scalar or vector as input: 
Expected int scalar or vector as operand: 
Expected int scalar or vector type as Result Type: 
Expected int scalar or vector type as operand: 
Expected left and right operands to have the same type: 
Expected matrix operand type to be equal to Result Type: 
Expected number of columns and the column size of Matrix 
Expected number of columns of Result Type and right matrix to 
Expected number of columns of left matrix and number of rows 
Expected number of columns of the matrix to be equal to 
Expected number of columns of the matrix to be equal to the 
Expected number of constituents to be at least 2
Expected number of rows of the matrix to be equal to the 
Expected operand to be of Result Type: 
Expected operand to be of type OpTypeImage
Expected operand to be scalar or vector float: 
Expected operand to be vector bool: 
Expected operands to be scalar or vector float: 
Expected operands to be scalar or vector int: 
Expected operands to have the same bit width 
Expected operands to have the same dimension 
Expected operands to have the same number of componenets: 
Expected rows of Matrix type and Result Type to be 
Expected scalar operand type to be equal to the component 
Expected scalar or 
Expected scopes of Matrix and Result Type to be 
Expected single constituent
Expected target storage class to be Workgroup, 
Expected total number of Constituents to be equal 
Expected total number of given components to be equal 
Expected unsigned int scalar or vector type as Result Type: 
Expected unsigned int scalar type as Result Type: 
Expected vector operand type to be equal to Result Type: 
Expected vector sizes of Result Type and the condition to be equal: 
Expected vector sizes of Result Type and the operand to be equal: 
Expected vector sizes of Result Type and the operands to be
Expected vector sizes of Result Type and the operands to be equal: 
Expecting %s
ExplicitInterpAMD
Export
Exposes backend queries
Expression
Expression Parser - 
ExtInst
ExtInstImport
Extended instruction GLSLstd450IMix is not supported
Extension
External2DY2YEXT
ExternalDescSet
ExternalOES
Extraneous token
F	2G	H
F $?<
F H+F
F H9F
F H;L$(t
F I+F
F I9F
F$Ic] 
F(9G(t
F(;F(
F(A9F
F(H9F r
F(H;x
F(I+F H
F(I9F 
F(I9F r
F(L9 u
F(L9(
F(L9(u
F(L9,
F(L9<
F(L9h
F+L91u
F,,,,
F,9G,u
F,L9} 
F0+G0H
F0H+F(L
F0H9F(t
F0H;A
F0I9F(
F0I9F(r
F0I9F(t&
F16IMAGE1D
F16IMAGE1DARRAY
F16IMAGE2D
F16IMAGE2DARRAY
F16IMAGE2DMS
F16IMAGE2DMSARRAY
F16IMAGE2DRECT
F16IMAGE3D
F16IMAGEBUFFER
F16IMAGECUBE
F16IMAGECUBEARRAY
F16MAT2
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3
F16MAT3X2
F16MAT3X3
F16MAT3X4
F16MAT4
F16MAT4X2
F16MAT4X3
F16MAT4X4
F16SAMPLER1D
F16SAMPLER1DARRAY
F16SAMPLER1DARRAYSHADOW
F16SAMPLER1DSHADOW
F16SAMPLER2D
F16SAMPLER2DARRAY
F16SAMPLER2DARRAYSHADOW
F16SAMPLER2DMS
F16SAMPLER2DMSARRAY
F16SAMPLER2DRECT
F16SAMPLER2DRECTSHADOW
F16SAMPLER2DSHADOW
F16SAMPLER3D
F16SAMPLERBUFFER
F16SAMPLERCUBE
F16SAMPLERCUBEARRAY
F16SAMPLERCUBEARRAYSHADOW
F16SAMPLERCUBESHADOW
F16SUBPASSINPUT
F16SUBPASSINPUTMS
F16TEXTURE1D
F16TEXTURE1DARRAY
F16TEXTURE2D
F16TEXTURE2DARRAY
F16TEXTURE2DMS
F16TEXTURE2DMSARRAY
F16TEXTURE2DRECT
F16TEXTURE3D
F16TEXTUREBUFFER
F16TEXTURECUBE
F16TEXTURECUBEARRAY
F16VEC2
F16VEC3
F16VEC4
F32MAT2
F32MAT2X2
F32MAT2X3
F32MAT2X4
F32MAT3
F32MAT3X2
F32MAT3X3
F32MAT3X4
F32MAT4
F32MAT4X2
F32MAT4X3
F32MAT4X4
F32VEC2
F32VEC3
F32VEC4
F64MAT2
F64MAT2X2
F64MAT2X3
F64MAT2X4
F64MAT3
F64MAT3X2
F64MAT3X3
F64MAT3X4
F64MAT4
F64MAT4X2
F64MAT4X3
F64MAT4X4
F64VEC2
F64VEC3
F64VEC4
F8$(u
F8,0u
F8H+F0H
F8H9F0r
F8H9F@u"
F8H;HHt	
F8H;Y
F8H;y
F8I9F0u
F8I9F0u`I
F8L;q
F>qUxv
F@H;A
F@I9F8r
FALSE
FATAL
FCOOPMATNV
FClamp
FConvert
FDA;ED
FEATURES
FHH9BHu
FHH9CHu
FHI9GH
FHI9GHu
FIU,I
FIU,I,I
FIU,I,I,I
FIU,S,F
FIU,S,F,
FIU,S,F,,
FIU,S,F,,,I
FIU,S,F,,I
FIU,S,F,I
FIU,S,F,I,,,
FIU,S,F,I,,,,U
FIU,S,F,I,U
FIU,s,F,
FIU,s,F,,I
FIU,s,F,,I,,,
FIU,s,F,,I,,,,U
FIU,s,F,,I,U
FIU,s,F,F
FIU,s,F,F,I
FLOAT
FLOAT16CONSTANT
FLOAT16_T
FLOAT32_T
FLOAT64_T
FLOATCONSTANT
FLOATLITERAL
FLOATSUFFIX
FMax3AMD
FMid3AMD
FMin3AMD
FNegate
FOrdEqual
FOrdGreaterThan
FOrdGreaterThanEqual
FOrdLessThan
FOrdLessThanEqual
FOrdNotEqual
FP Fast Math Mode
FP Rounding Mode
FPD8ohu$H
FPFastMathMode
FPH9FH
FPI9FHu
FPRoundingMode
FPRoundingMode decoration can be applied only to a width-only conversion instruction for floating-point object.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore in the StorageBuffer, PhysicalStorageBufferEXT, Uniform, PushConstant, Input, or Output Storage Classes.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore storing through a pointer to a 16-bit floating-point scalar or vector object.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore.
FRONT
FSign
FUI,,
FUI,F
FUI,F,
FUI,F,,
FUI,F,F,F
FUI,I
FUI,S,F
FUI,U
FUI,U,
FUI,U,,
FUI,U,,,
FUI,U,,,,
FUI,U,F,
FUI,U,F,,
FUI,U,F,,,
FUnordEqual
FUnordGreaterThan
FUnordGreaterThanEqual
FUnordLessThan
FUnordLessThanEqual
FUnordNotEqual
FX90u{
FXE8xXt
FXH9EX
FXH9FPr
FXH;8uFH;
FXH;X
F`H+FXH
F`H9F0t
F`M+FXI
FaceForward
Failed to optimize shader.
Failed to translate partitioning or outputtoplogy HLSL attributes.
Failed to translate semantic '%s' BuildMetaDataComments(2129): 
FakeBindlessTexture2D
False
Feature combo %s referenced in expression doesn't exist.
Features
February
Fetch
Fetch4
FhH+F`H
FhH9F`
FhI9F`r
File exists
File has not been opened!
File to append -stats and -timer output to
File too large
Filename too long
FillMode
Filter
Finalizer
FindClose
FindFirstFileExA
FindILsb
FindNextFileA
FindSMsb
FindUMsb
First block 
FlagArtificial
FlagExplicit
FlagFwdDecl
FlagIndirectVariable
FlagIsDefinition
FlagIsLocal
FlagIsOptimized
FlagIsPrivate
FlagIsProtected
FlagIsPublic
FlagLValueReference
FlagObjectPointer
FlagPrototyped
FlagRValueReference
FlagStaticMember
Flatten
Flatten conditional assignments into select instructions
Float
Float16
Float16Buffer
Float16ImageAMD
Float64
Floor
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
FlushFileBuffers
FlushProcessWriteBuffers
FogFragCoord
For OpExecutionModeId all Extra Operand ids must be constant instructions.
For Vulkan OpTypeRuntimeArray can only 
For Vulkan with RuntimeDescriptorArrayEXT, a variable 
For Vulkan, OpTypeStruct variables containing 
For Vulkan, an OpTypeStruct variable containing an 
For WebGPU Memory no bits may be set for Memory Semantics of OpAtomic* instructions.
For WebGPU OpTypeRuntimeArray can only 
For WebGPU only ImageMemory may be set for Memory Semantics of OpMemoryBarrier.
For WebGPU only WorkgroupMemory and AcquireRelease may be set for Memory Semantics of OpControlBarrier.
For WebGPU, AcquireRelease must be set for Memory Semantics of OpControlBarrier.
For WebGPU, ImageMemory must be set for Memory Semantics of OpMemoryBarrier.
For WebGPU, OpTypeStruct variables containing 
For WebGPU, WorkgroupMemory must be set for Memory Semantics of OpControlBarrier.
For WebGPU, all blocks must be reachable, unless they are 
For WebGPU, an OpTypeStruct variable containing an 
For WebGPU, functions need to be defined before being called.
For WebGPU, the only valid parameter to OpExtInstImport is "GLSL.std.450".
For WebGPU, the only valid parameter to OpExtension is 
For WebGPU, unreachable continue-target cannot be the target of a branch.
For WebGPU, unreachable continue-target must be referenced by a loop instruction.
For WebGPU, unreachable continue-target must be referenced by a reachable loop instruction.
For WebGPU, unreachable continue-target must only contain an OpLabel and an OpBranch instruction.
For WebGPU, unreachable continue-target must only have a back edge to a single reachable loop instruction.
For WebGPU, unreachable continue-target must terminate with OpBranch.
For WebGPU, unreachable merge-blocks cannot be the target of a branch.
For WebGPU, unreachable merge-blocks must be referenced by a reachable merge instruction.
For WebGPU, unreachable merge-blocks must only contain an OpLabel and OpUnreachable instruction.
For WebGPU, unreachable merge-blocks must terminate with OpUnreachable.
FormatMessageA
Forward pointers must point to a structure
Found unrecognized extension 
Fract
Fraction
FragColor
FragCoord
FragData
FragDepth
FragFullyCoveredNV
FragInvocationCountEXT
FragSizeEXT
FragStencilRef
FragStencilRefEXT
Fragment
Fragment execution model entry points can only specify one of OriginUpperLeft or OriginLowerLeft execution modes.
Fragment execution model entry points can specify at most one fragment shader interlock execution mode.
Fragment execution model entry points can specify at most one of DepthGreater, DepthLess or DepthUnchanged execution modes.
Fragment execution model entry points require either an OriginUpperLeft or OriginLowerLeft execution mode.
FragmentBarycentricNV
FragmentDensityEXT
FragmentFetchAMD
FragmentFullyCoveredEXT
FragmentMaskAMD
FragmentMaskFetchAMD
FragmentShaderPixelInterlockEXT
FragmentShaderSampleInterlockEXT
FragmentShaderShadingRateInterlockEXT
FragmentSizeNV
FreeEnvironmentStringsW
FreeLibrary
FreeLibraryWhenCallbackReturns
Frexp
FrexpStruct
Friday
From 
From ARB_gl_spirv extension:
From SPIR-V spec, section 3.32.8 on OpVariable:
From Vulkan spec, section 14.5.1:
From Vulkan spec, section 14.5.2:
From WebGPU execution environment spec:
FrontColor
FrontFacing
FrontSecondaryColor
FullyCoveredEXT
FuncParamAttr
Function
Function %s() expects %d arguments. Found %d.
Function Call: 
Function Definition: 
Function Parameters: 
Function Pass Manager
Function declaration (id 
Function declarations must appear before function definitions.
Function definition (id 
Function end cannot be called in blocks
Function end instructions must be in a function body
Function not implemented
Function parameter cannot be the first instruction.
Function parameter instructions must be in a function body
Function parameter must be preceded by a function.
Function parameters must only appear immediately after the function definition
FunctionCall
FunctionEnd
FunctionParameter
FunctionPass Manager
Fwidth
FwidthCoarse
FwidthFine
F|9G|H
G	 t<H
G	2C	$
G	2F	H
G 9C t	H
G 9F vZ
G H+G
G H9A0u
G H9E 
G H9M
G H;G u
G I+G
G xtMA
G$H9\$pt
G(9C(|
G(;C(
G(@80t
G(@80tGH
G(A;F(
G(D8g]t
G(H+G H
G(H9G 
G(H9G0uPI
G(H9p
G(H;p
G(I9G 
G,9C,
G,H;uPu
G090u"H
G09C0u&
G0D+G(t"L
G0H+G(H
G0H9G(r
G0H9G(t"L
G0Hc	H
G49C4u
G89C8u
G8H+G0H
G8H;Y
G8H;q
G8I+G0H
G8I9G@H
G8I9G@u"A
G8I9G@u$A
G8L90t
G8L;q
G8L;}Ht
G@H9C
G@H9C@
G@H;A
GCD applications
GCD independence
GCD successes
GE_OP
GHH9G@u
GHH;FHu
GHH;GHt	D
GHI9G@u
GHIJKLgMNggggggggOPQRSTggggggg7UgVgggggggggWXYgZ[\]^g_ggggggggggggggggggggggg`ab
GHt13
GL$(3
GL$8I
GL$HI
GLCompute
GLES_30
GLES_31
GLSL back end gep missing value->string mapping
GLSL back end phi alias of non-mapped source
GLSL does not support multi-dimensional arrays (until GLSL v4.30 with GL_ARB_arrays_of_arrays). Currently only GLSL v4.00 + extensions is required.
GLSL optimization: attempting to optimize uninitialized shader
GLSL optimization: failed to generate optimized shader.
GLSL optimization: failed to get intermediate representation.
GLSL to SPIR-V: attempting to get SPIR-V for uninitialized shader
GLSL to SPIR-V: failed to get intermediate representation.
GLSL.std.450
GLSL450
GLSLPacked
GLSLShared
GL_3DL_array_objects
GL_AMD_gcn_shader
GL_AMD_gpu_shader_half_float
GL_AMD_gpu_shader_half_float_fetch
GL_AMD_gpu_shader_int16
GL_AMD_shader_ballot
GL_AMD_shader_explicit_vertex_parameter
GL_AMD_shader_fragment_mask
GL_AMD_shader_image_load_store_lod
GL_AMD_shader_trinary_minmax
GL_AMD_texture_gather_bias_lod
GL_ANDROID_extension_pack_es31a
GL_ARB_compute_shader
GL_ARB_derivative_control
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_shader_interlock
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_int64
GL_ARB_post_depth_coverage
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_clock
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_stencil_export
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_420pack
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_tessellation_shader
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_rectangle
GL_ARB_viewport_array
GL_EXT_YUV_target
GL_EXT_buffer_reference
GL_EXT_buffer_reference2
GL_EXT_buffer_reference_uvec2
GL_EXT_control_flow_attributes
GL_EXT_demote_to_helper_invocation
GL_EXT_device_group
GL_EXT_frag_depth
GL_EXT_fragment_invocation_density
GL_EXT_geometry_point_size
GL_EXT_geometry_shader
GL_EXT_gpu_shader5
GL_EXT_multiview
GL_EXT_nonuniform_qualifier
GL_EXT_post_depth_coverage
GL_EXT_primitive_bounding_box
GL_EXT_samplerless_texture_functions
GL_EXT_scalar_block_layout
GL_EXT_shader_16bit_storage
GL_EXT_shader_8bit_storage
GL_EXT_shader_atomic_int64
GL_EXT_shader_explicit_arithmetic_types
GL_EXT_shader_explicit_arithmetic_types_float16
GL_EXT_shader_explicit_arithmetic_types_float32
GL_EXT_shader_explicit_arithmetic_types_float64
GL_EXT_shader_explicit_arithmetic_types_int16
GL_EXT_shader_explicit_arithmetic_types_int32
GL_EXT_shader_explicit_arithmetic_types_int64
GL_EXT_shader_explicit_arithmetic_types_int8
GL_EXT_shader_image_load_formatted
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_realtime_clock
GL_EXT_shader_subgroup_extended_types_float16
GL_EXT_shader_subgroup_extended_types_int16
GL_EXT_shader_subgroup_extended_types_int64
GL_EXT_shader_subgroup_extended_types_int8
GL_EXT_shader_texture_lod
GL_EXT_shadow_samplers
GL_EXT_tessellation_point_size
GL_EXT_tessellation_shader
GL_EXT_texture_buffer
GL_EXT_texture_cube_map_array
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
GL_KHR_blend_equation_advanced
GL_KHR_memory_scope_semantics
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_vote
GL_NVX_multiview_per_view_attributes
GL_NV_compute_shader_derivatives
GL_NV_conservative_raster_underestimation
GL_NV_cooperative_matrix
GL_NV_fragment_shader_barycentric
GL_NV_geometry_shader_passthrough
GL_NV_integer_cooperative_matrix
GL_NV_mesh_shader
GL_NV_ray_tracing
GL_NV_sample_mask_override_coverage
GL_NV_shader_atomic_int64
GL_NV_shader_noperspective_interpolation
GL_NV_shader_sm_builtins
GL_NV_shader_subgroup_partitioned
GL_NV_shader_texture_footprint
GL_NV_shading_rate_image
GL_NV_stereo_view_rendering
GL_NV_viewport_array2
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_geometry_point_size
GL_OES_geometry_shader
GL_OES_gpu_shader5
GL_OES_primitive_bounding_box
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_standard_derivatives
GL_OES_tessellation_point_size
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_buffer
GL_OES_texture_cube_map_array
GL_OES_texture_storage_multisample_2d_array
GL_OVR_multiview
GL_OVR_multiview2
GPD9}Tu
GREATER
GREATER_EQUAL
GT$XD
GT$XH
GXH9GPr
GXI9FXu
GXI9GPr
G_0tkA
G`0tkA
G`I9GX@
G`I;G`t
Gather
Gather instructions for LunarGLASS
GatherAlpha
GatherBlue
GatherCmp
GatherCmpAlpha
GatherCmpBlue
GatherCmpGreen
GatherCmpRed
GatherGreen
GatherRed
GdA9V
General options
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
Generating variable pointers requires capability 
Generic
GenericCastToPtr
GenericCastToPtrExplicit
GenericPointer
GenericPtrMemSemantics
Genu3
GenuineIntel
Geometry
Geometry Shader
Geometry execution model entry points must specify exactly one of InputPoints, InputLines, InputLinesAdjacency, Triangles or InputTrianglesAdjacency execution modes.
Geometry execution model entry points must specify exactly one of OutputPoints, OutputLineStrip or OutputTriangleStrip execution modes.
GeometryPointSize
GeometryShaderPassthroughNV
GeometryStreams
GetACP
GetCPInfo
GetCPUInformation
GetCommandLineA
GetCommandLineW
GetConsoleCP
GetConsoleMode
GetConsoleScreenBufferInfo
GetCurrentPackageId
GetCurrentProcess
GetCurrentProcessId
GetCurrentProcessorNumber
GetCurrentThreadId
GetDefaultMiniDumpTypeFlags
GetDefaultQueue
GetDimensions
GetEnvironmentStringsW
GetFileAttributesW
GetFileInformationByHandle
GetFileInformationByHandleEx
GetFileType
GetKernelLocalSizeForSubgroupCount
GetKernelMaxNumSubgroups
GetKernelNDrangeMaxSubGroupSize
GetKernelNDrangeSubGroupCount
GetKernelPreferredWorkGroupSizeMultiple
GetKernelWorkGroupSize
GetLastError
GetLocaleInfoEx
GetLocaleInfoW
GetMaxPipePackets
GetModuleFileNameA
GetModuleHandleExW
GetModuleHandleW
GetNumPipePackets
GetOEMCP
GetProcAddress
GetProcessHeap
GetProcessTimes
GetRenderTargetSampleCount
GetRenderTargetSamplePosition
GetSamplePosition
GetStartupInfoW
GetStdHandle
GetStringTypeW
GetSystemTimeAsFileTime
GetSystemTimePreciseAsFileTime
GetTickCount64
GetUserDefaultLCID
GetUserDefaultLocaleName
GfZ+?p
GhH+G`H
GhH9G`
GhH;q
GhL;a
Gl$@;
Gl$p;
Global Value Numbering
Global Variable Optimizer
GlobalInvocationID
GlobalInvocationId
GlobalLinearId
GlobalOffset
GlobalSize
Glslang
Glslang Reference Front End
Google
Google Clspv
Google MLIR SPIR-V Serializer
Google Shaderc over Glslang
Google rspirv
Google spiregg
GrJoq>@
GroupAll
GroupAny
GroupAsyncCopy
GroupBroadcast
GroupCommitReadPipe
GroupCommitWritePipe
GroupDecorate
GroupFAdd
GroupFAddNonUniformAMD
GroupFMax
GroupFMaxNonUniformAMD
GroupFMin
GroupFMinNonUniformAMD
GroupIAdd
GroupIAddNonUniformAMD
GroupMemberDecorate
GroupMemoryBarrier
GroupMemoryBarrierWithGroupSync
GroupNonUniform
GroupNonUniformAll
GroupNonUniformAllEqual
GroupNonUniformAny
GroupNonUniformArithmetic
GroupNonUniformBallot
GroupNonUniformBallotBitCount
GroupNonUniformBallotBitExtract
GroupNonUniformBallotFindLSB
GroupNonUniformBallotFindMSB
GroupNonUniformBitwiseAnd
GroupNonUniformBitwiseOr
GroupNonUniformBitwiseXor
GroupNonUniformBroadcast
GroupNonUniformBroadcastFirst
GroupNonUniformClustered
GroupNonUniformElect
GroupNonUniformFAdd
GroupNonUniformFMax
GroupNonUniformFMin
GroupNonUniformFMul
GroupNonUniformIAdd
GroupNonUniformIMul
GroupNonUniformInverseBallot
GroupNonUniformLogicalAnd
GroupNonUniformLogicalOr
GroupNonUniformLogicalXor
GroupNonUniformPartitionNV
GroupNonUniformPartitionedNV
GroupNonUniformQuad
GroupNonUniformQuadBroadcast
GroupNonUniformQuadSwap
GroupNonUniformSMax
GroupNonUniformSMin
GroupNonUniformShuffle
GroupNonUniformShuffleDown
GroupNonUniformShuffleRelative
GroupNonUniformShuffleUp
GroupNonUniformShuffleXor
GroupNonUniformUMax
GroupNonUniformUMin
GroupNonUniformVote
GroupReserveReadPipePackets
GroupReserveWritePipePackets
GroupSMax
GroupSMaxNonUniformAMD
GroupSMin
GroupSMinNonUniformAMD
GroupUMax
GroupUMaxNonUniformAMD
GroupUMin
GroupUMinNonUniformAMD
GroupWaitEvents
Groups
Gt$8f
GxH;Gx
G|$@H
H	u@H
H 9J s
H 9K s
H A9H s
H A9K s
H D+@<H
H D8!
H D9J A
H H+H
H H;)
H L9!
H L;9uHH
H SATAWH
H SAWH
H UATAUAVAWH
H VATAUAVH
H VWAUAVAWH
H VWAVH
H!D$ E
H!FXH
H!G H
H!GXH
H!T$(
H!T$0D
H!T$8
H!T$H
H!T$h
H!|$(
H"8K"
H#L$`H
H#N0H
H#Q0H
H#T$8
H#T$8D
H#T$HD
H#T$XD
H#T$h
H#T$hD
H#t$H<
H(H91
H(H94
H(L91
H(L;	u
H)_0H
H+A(H
H+A(L
H+A03
H+A0H
H+A8H
H+AhH
H+AxH
H+B H
H+C H
H+C(H
H+C0H
H+CHH
H+CPH
H+ChH
H+CxH
H+F H
H+G0H
H+GHH
H+GHL
H+H(H
H+H(I
H+H0H
H+J8H
H+K0H
H+L$ x;H
H+L$(xAH
H+L$8H
H+L$8I
H+L$PL
H+L$XH
H+L$pH
H+L$xH
H+NPH
H+O8A+
H+T$pH+\$pH
H+V8H
H+\$HH
H+iPE3
H+l$@L
H+q L
H+q03
H+s0H
H+t$@H
H+|$HH
H+|$HL
H+}wH;
H0F08
H0H+H(H
H0H9K0
H0I+H(H
H3A(L3I0H
H3A0L
H3D$PI
H3T$PI
H8H+H0H
H8H9H@u
H8H9H@u!
H8H9H@u$
H8H9H@u&
H8H9H@uJ
H8w	H9y
H8w	L9i
H8w	L9q
H9)t	H
H90t	H
H90t!H
H90t%H
H90t)H
H90t,H
H91t	H
H91t!H
H91t'H
H91t)H
H91t+H
H91t.H
H91taH
H91tlH
H91t|H
H92u&
H92u'
H92u,
H92u1
H97t	H
H98t!H
H98t#H
H98t%H
H98t'H
H98t(H
H98t)H
H98t-H
H98t0H
H98tXH
H98taH
H98tcH
H98tlH
H98u/H
H99t	H
H99t$H
H99t)H
H99t*H
H99tMH
H99tOH
H99t]H
H9A }
H9A(t
H9A(u
H9A0t
H9A0u
H9AHu
H9A`t
H9Ahs
H9B r
H9B s
H9B u
H9BXH
H9C s(H
H9C t
H9C t!H
H9C(r
H9C(r8H
H9C8r
H9C@r
H9D$ tD
H9D$ u
H9D$(
H9D$0
H9D$8r
H9D$8t
H9D$@u
H9D$@u!
H9D$H
H9D$P
H9D$Pw
H9D$X
H9D$`u)
H9D$h
H9EHu
H9Egu'H
H9Egu,H
H9EguaL
H9Exr
H9Fxr
H9G t
H9G u
H9GXr
H9GXtFH
H9H s
H9H s*
H9H s+H
H9H s8
H9H }8
H9H(r
H9H(|	H
H9HPt
H9JHu
H9KPt
H9L$8u
H9L$Ht?H
H9L$Xu
H9L$h
H9L$xt
H9N8u
H9N@u
H9NPt
H9NPtfH
H9O0t
H9OHu
H9OHu&H
H9OPt
H9OPtSH
H9P A
H9P s
H9P s 
H9Q s
H9Q0t	H
H9QPt
H9QXt
H9Qhv
H9S r
H9T$(u 
H9T$(u&
H9T$8u#
H9T$8u'
H9T$8u(
H9T$Hu 
H9T$hu$
H9V`u#
H9X s
H9X s!
H9Y s
H9Y s/L
H9Y0u/
H9Y0u;
H9\$ 
H9\$(ugA
H9\$0H
H9\$8
H9\$@t
H9\$@t=H
H9\$@tJA
H9\$@tYH
H9\$@u:H
H9\$HuNH
H9\$Pt+L
H9\$PtYH
H9\$X
H9\$`u
H9] t
H9](t
H9]0u
H9]0u#A
H9^ s)L
H9_ u
H9_(t
H9_@t}H
H9_Hs
H9h(u
H9h(uBH
H9hHu
H9i(r
H9k u
H9k(H
H9l$0t
H9l$@t
H9l$@tt
H9o8u
H9o@u
H9oHu
H9p s
H9p(t	H
H9q s
H9q s)H
H9q s0H
H9q t
H9q u
H9r tVH
H9s tmH
H9s(t
H9s0A
H9sHt
H9t$(
H9t$0u
H9t$8
H9t$@H
H9t$@t
H9t$@tWH
H9t$@u
H9t$@v#H
H9uPt|
H9uot
H9uwu
H9w s%H
H9w s,H
H9w t
H9x s
H9xHH
H9xHuPH
H9xHuXH
H9y s+H
H9y t
H9{ s$H
H9{ t
H9{ t"
H9{ t5
H9|$(
H9|$(u)H
H9|$0
H9|$0t
H9|$8t
H9|$8t.
H9|$Ht
H9} t
H;0u7
H;9t%
H;9toH
H;9u!H;
H;>t 
H;>tA
H;>uBI
H;A L
H;A`t
H;A`t!
H;A`u
H;C sCH
H;C t>
H;C(u
H;C0u
H;C0u	H
H;C8u
H;CHu
H;CXu
H;Chu
H;Cxu
H;D$ 
H;D$0
H;D$0t9
H;D$8
H;D$H
H;D$Pt
H;E r
H;E s
H;EPr
H;EXun
H;E`u
H;F r
H;F t
H;F(u
H;F0u
H;F8u
H;FHt
H;FPu
H;F`t
H;Fpu
H;G sL
H;G u
H;G(u
H;G0u
H;G8u
H;GHu
H;H s
H;H8t
H;HHt
H;J s
H;K sz
H;K(u
H;L$(
H;L$0r
H;L$8u#
H;L$@r
H;L$@tI
H;L$@u
H;L$HtG
H;L$Pr
H;L$Xu
H;L$`r
H;L$h
H;L$pr
H;M r
H;M0r
H;MPr
H;N u
H;N(u
H;N@u
H;N`t
H;Npu
H;O@u
H;OXu|H
H;Opu
H;P A
H;P L
H;P s
H;Q s
H;QHr
H;S H
H;S r
H;S s
H;S s<H
H;S s>H
H;S sAH
H;S sBH
H;S sCH
H;S sFH
H;S sGH
H;S sIH
H;S u
H;T$(
H;T$X
H;T$hr%A
H;T$pr
H;U r
H;VHH
H;W s
H;WHu4H
H;X L
H;X t
H;X t	D93
H;X u"
H;XXs
H;Y M
H;Y s
H;Y(H
H;Y(I
H;Y0I
H;YXt_H
H;Y`I
H;Z s
H;Z(E
H;\$ 
H;\$ uBH
H;\$0H
H;\$8
H;\$8H
H;\$8I
H;\$8u
H;\$@
H;\$HL
H;\$Hu
H;\$Pu
H;\$XH
H;\$Xu
H;\$`H
H;\$pI
H;] r
H;](H
H;](I
H;]HI
H;]Hu
H;]`u
H;^ u
H;^@u
H;^Ht
H;^Ht	H
H;^Hti
H;^Hu
H;^`M
H;^`u
H;_ u
H;_(H
H;_(t7H
H;_8u
H;_Ht'L
H;_Xu
H;h r
H;j s
H;l$ 
H;l$(u
H;l$0u
H;l$8M
H;l$@
H;q r
H;q(L
H;q(u
H;r s
H;s sCH
H;s t
H;t$@
H;t$@u
H;t$Pt
H;t$h
H;t$x
H;uhM
H;x L
H;xXu9
H;y s
H;y(I
H;z s
H;z(I
H;{ s
H;|$ s
H;|$(t
H;|$@
H;|$P
H;|$PuT
H;|$Xu
H;|$`
H;|$p
H;|$x
H;}(tmH
H;}wu
H;~8H
H;~Hu
H@H+H8I
H@I+H8H
H@v	H
HA]A\
HA]A\][
HA]A\_[
HA^A\_[
HA^A\_]
HA^A]
HA^A]A\^
HA^A]A\_^[
HA^^][
HA^_^[
HA_A]
HA_A]A\_][
HA_A]A\_^[
HA_A]A\_^]
HA_A]][
HA_A^A\_
HA_A^A\_^[
HA_A^A]A\_^[]
HA_A^A]A\_^][
HA_A^A][
HA_A^A]_^[
HA_A^_[
HA__][
HDA;O@
HEADER
HEXINTEGERLITERAL
HEX_DIGIT
HH:mm:ss
HHH9HPu&
HIGH_PRECISION
HITATTRNV
HLSL lexer encountered %d %s
HLSL parser encountered %d %s
HPH+HHH
HPI9HP
HXfE9i:
H[><y5
H_^][
H`H+HXH
H`H9H0
HalfFloat
HangWatchdogInternal_BeginScope
HangWatchdogInternal_EndScope
Having 
Hc/;o
Hc3;s
Hc;;{
HcA H
HcA(=A
HcApD;
HcC H
HcC@H
HcClH
HcD$0=
HcD$8
HcD$@
HcD$HH
HcD$XH
HcD$`H
HcD$p
HcE7L
HcG H
HcG(H
HcH<H
HcK H
HcK8;
HcL$4I
HcNxA
HcNxD
HcNxE
HcS8I;
HcS@H
HcT$$
HcT$0
Hc\$@I
Hc]OH
Hc]`*
Hc]`M
Hc]wH
Hc^h;^xu
Hc_0L
Hc_@;_Pu
Hco`D
Hcs8I
Hct$,
Hcx H
Hc|$@I
Hc}@;}Pu
HelperInvocation
HighPrecisionBlendEnable
HitAttributeNV
HitKindNV
HitTNV
HlslCounterBufferGOOGLE
HlslSemanticGOOGLE
Hoist conditional stores if an unconditional store preceeds
Ht)I;
Hull Shader
I 9J s
I I9H 
I LcA E
I could not work out what I was expecting, like so many of us these days!
I!FXI
I#J0H
I#J0I
I#L$0M
I#R0H
I(H;H t;H
I(H;H tiH
I(H;J t
I+4$A
I+<$A
I+G0A
I+G0H
I+GHH
I+GXH
I+O0D
I+O0H
I+Q A
I+T$(E
I+^(H
I+vXH
I+~ H
I0;J0s0
I16VEC2
I16VEC3
I16VEC4
I32VEC2
I32VEC3
I32VEC4
I64VEC2
I64VEC3
I64VEC4
I8H+H0H
I8VEC2
I8VEC3
I8VEC4
I96tR3
I98u0A
I9@ s
I9@(srA
I9A t
I9A(r
I9B(r
I9B(u
I9B(|
I9FPw
I9H s
I9M@u#A
I9NPt
I9O@u!A
I9Q s
I9T$H
I9X(t`A
I9]8t
I9q s<I
I9q sEI
I9w t
I9} t
I9}(t9H
I;.t#
I;6t#
I;>u6
I;?u6
I;@ s
I;E@u
I;Exu
I;F u
I;FHuEH
I;Fxu
I;G(u
I;G0u
I;G@u
I;G`u
I;Gxu
I;N8u
I;N@u
I;NXt
I;Ohu
I;P s
I;\$8L
I;\$hu
I;](H
I;](I
I;]Ht
I;^(H
I;^8M
I;^PI
I;^Xu
I;^`H
I;^`tY
I;^`tdf
I;^`toH
I;^`t{M
I;^`u
I;^`u>I
I;^pt
I;_HA
I;_pL
I;q s<I
I;q s?I
I;t$(
I;u>A
I;v(H
I;vHu
I;w t
I;}Ht
I;~`I
I<ru	
IAddCarry
IAddSatINTEL
IAverageINTEL
IAverageRoundedINTEL
ICOOPMATNV
ID already mapped: 
ID already used in module: 
ID bound: 
ID not found
ID out of range: 
ID overflow. Try running compact-ids.
ID unused in module: 
ID;HD
IDENTIFIER
IEqual
IIMAGE1D
IIMAGE1DARRAY
IIMAGE2D
IIMAGE2DARRAY
IIMAGE2DMS
IIMAGE2DMSARRAY
IIMAGE2DRECT
IIMAGE3D
IIMAGEBUFFER
IIMAGECUBE
IIMAGECUBEARRAY
IMAGE1D
IMAGE1DARRAY
IMAGE2D
IMAGE2DARRAY
IMAGE2DMS
IMAGE2DMSARRAY
IMAGE2DRECT
IMAGE3D
IMAGEBUFFER
IMAGECUBE
IMAGECUBEARRAY
IMul32x16INTEL
INCR_SAT
INC_OP
IND)ind)
INFINITY
INITY
INOUT
INT16CONSTANT
INT16_T
INT32CONSTANT
INT32_T
INT64CONSTANT
INT64_T
INT8_T
INTCONSTANT
INTEGERLITERAL
INTERNAL ERROR
INTERNAL ERROR: 
INVARIANT
INVERT
INV_DEST_ALPHA
INV_DEST_COLOR
INV_SRC1_ALPHA
INV_SRC1_COLOR
INV_SRC_ALPHA
INV_SRC_COLOR
INotEqual
IO Intrinsic
IO failure on output stream.
IO metadata for type
IOS_VULKAN
IOS_VULKAN_4_0
IPD9q
ISAMPLER1D
ISAMPLER1DARRAY
ISAMPLER2D
ISAMPLER2DARRAY
ISAMPLER2DMS
ISAMPLER2DMSARRAY
ISAMPLER2DRECT
ISAMPLER3D
ISAMPLERBUFFER
ISAMPLERCUBE
ISAMPLERCUBEARRAY
ISUBPASSINPUT
ISUBPASSINPUTMS
ISubBorrow
ISubSatINTEL
ITEXTURE1D
ITEXTURE1DARRAY
ITEXTURE2D
ITEXTURE2DARRAY
ITEXTURE2DMS
ITEXTURE2DMSARRAY
ITEXTURE2DRECT
ITEXTURE3D
ITEXTUREBUFFER
ITEXTURECUBE
ITEXTURECUBEARRAY
IV Users for loop 
IV.S.
IV.S.next.
IVEC2
IVEC3
IVEC4
IVfxShaderValidator::GetActiveUniforms failed.
IVfxShaderValidator::GetActiveUniformsBlocks failed.
IXE8aXt
IXH;OHr
Ic?A;
IcD$ 
IcFtI
IcH A
IcL$x
IcMxD
IcNxD
IcP McH
Ic]PA;]`u
Ic]hA;]xu
Id is 0
Identify the structures in a structured-cfg
If OpTypeBool is stored in conjunction with OpVariable, it 
IgnoreIntersectionNV
Il?333333c?
Illegal byte sequence
Illegal number of components (
Illegal to have non-comment, non-whitespace tokens before #version
Image
Image 'Dim' cannot be Cube
Image 'Dim' cannot be SubpassData
Image 'Dim' must be 1D, 2D, 3D or Cube
Image 'Dim' must be 1D, Buffer, 2D, Cube, 3D or Rect
Image 'Dim' must be 2D
Image 'MS' must be 0
Image 'MS' must be 1
Image Dim SubpassData cannot be used with ImageSparseRead
Image Dim SubpassData cannot be used with OpImageTexelPointer
Image Image 'MS' parameter to be 0
Image Image 'arrayed' parameter to be 0
Image Operand Bias can only be used with ImplicitLod opcodes
Image Operand Bias requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand Bias requires 'MS' parameter to be 0
Image Operand ConstOffset cannot be used with Cube Image 'Dim'
Image Operand ConstOffsets can only be used with OpImageGather and OpImageDrefGather
Image Operand ConstOffsets cannot be used with Cube Image 'Dim'
Image Operand Grad can only be used with ExplicitLod opcodes
Image Operand Grad requires 'MS' parameter to be 0
Image Operand Lod can only be used with ExplicitLod opcodes 
Image Operand Lod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand Lod requires 'MS' parameter to be 0
Image Operand MakeTexelAvailableKHR can only be used with Op
Image Operand MakeTexelAvailableKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MakeTexelVisibleKHR can only be used with Op
Image Operand MakeTexelVisibleKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MinLod can only be used with ImplicitLod 
Image Operand MinLod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand MinLod requires 'MS' parameter to be 0
Image Operand Offset cannot be used with Cube Image 'Dim'
Image Operand Sample can only be used with OpImageFetch, 
Image Operand Sample requires non-zero 'MS' parameter
Image Operand bits Lod and Grad cannot be set at the same time
Image Operands Offset, ConstOffset, ConstOffsets cannot be used 
Image must have either 'MS'=1 or 'Sampled'=0 or 'Sampled'=2
Image1D
ImageBasic
ImageBuffer
ImageCubeArray
ImageDrefGather
ImageFetch
ImageFootprintNV
ImageGather
ImageGatherBiasLodAMD
ImageGatherExtended
ImageMSArray
ImageMemory
ImageMipmap
ImageQuery
ImageQueryFormat
ImageQueryLevels
ImageQueryLod
ImageQueryOrder
ImageQuerySamples
ImageQuerySize
ImageQuerySizeLod
ImageRead
ImageReadWrite
ImageReadWriteLodAMD
ImageRect
ImageSampleDrefExplicitLod
ImageSampleDrefImplicitLod
ImageSampleExplicitLod
ImageSampleFootprintNV
ImageSampleImplicitLod
ImageSampleProjDrefExplicitLod
ImageSampleProjDrefImplicitLod
ImageSampleProjExplicitLod
ImageSampleProjImplicitLod
ImageSparseDrefGather
ImageSparseFetch
ImageSparseGather
ImageSparseRead
ImageSparseSampleDrefExplicitLod
ImageSparseSampleDrefImplicitLod
ImageSparseSampleExplicitLod
ImageSparseSampleImplicitLod
ImageSparseSampleProjDrefExplicitLod
ImageSparseSampleProjDrefImplicitLod
ImageSparseSampleProjExplicitLod
ImageSparseSampleProjImplicitLod
ImageSparseTexelsResident
ImageTexelPointer
ImageWrite
Imagination
ImplicitLod instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model: 
ImplicitLod instructions require Fragment or GLCompute execution model: 
Import
Improper link
In Logical addressing with variable pointers, variables 
In Logical addressing, variables may not allocate a pointer 
In OpPhi instruction 
In the OpenCL environment, Arrayed may only be set to 1 
In the OpenCL environment, the optional Access Qualifier
In the Vulkan environment, GLCompute execution model entry points require either the LocalSize execution mode or an object decorated with WorkgroupSize must be specified.
In the Vulkan environment, cannot store to Uniform Blocks
In the Vulkan environment, the OriginLowerLeft execution mode must not be used.
In the Vulkan environment, the PixelCenterInteger execution mode must not be used.
InBoundsAccessChain
InBoundsPtrAccessChain
Inappropriate I/O control operation
InclusiveScan
IncomingCallableDataNV
IncomingRayFlagsNV
IncomingRayPayloadNV
IncrementCounter
IndependentBlendEnable
Index
Index 
Index is out of bounds, can not find index 
Index is out of bounds: 
Indexes passed to 
Induction Variable Simplification
Induction Variable Users
InitOnceExecuteOnce
InitializeConditionVariable
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeSListHead
InitializeSRWLock
Initializer
Initializer type must match the type pointed to by the Result Type
Initializers must match:
Inline
Inline Cost Analysis
Inliner for always_inline functions
Inorder Dominator Tree: 
Inorder PostDominator Tree: 
Input
Input/output error
InputAttachment
InputAttachmentArrayDynamicIndexing
InputAttachmentArrayDynamicIndexingEXT
InputAttachmentArrayNonUniformIndexing
InputAttachmentArrayNonUniformIndexingEXT
InputAttachmentIndex
InputLines
InputLinesAdjacency
InputPatch
InputPoints
InputTrianglesAdjacency
InstanceCustomIndexNV
InstanceId
InstanceIndex
Instruction cannot be used without a variable pointers capability
Instruction reserved for future use, use of this instruction 
Int16
Int64
Int64Atomics
IntegerFunctions2INTEL
Intel
Intensity
Intentionally vague touch behavior for %p
Interface variable id <
Interfaces passed to OpEntryPoint must be of type OpTypeVariable. Found Op
InterlockedAdd
InterlockedAnd
InterlockedCompareExchange
InterlockedCompareStore
InterlockedExchange
InterlockedFlushSList
InterlockedMax
InterlockedMin
InterlockedOr
InterlockedXor
Internal Error
Internal error: Unhandled operand type: 
Internal error: empty execution models for function id 
Internal error: missing function id 
Internal error: unhandled header parse failure
InterpolateAtCentroid
InterpolateAtOffset
InterpolateAtSample
InterpolateAtVertexAMD
Interpolation and auxiliary storage qualifiers must match:
InterpolationFunction
Interprocedural Sparse Conditional Constant Propagation
Interrupted function call
IntersectionNV
Intrinsic in Bottom IR
InvTextureDim
InvViewportSize
Invalid 
Invalid Arrayed 
Invalid Depth 
Invalid MS 
Invalid OpSwitch: selector id 
Invalid Opcode name 'Op
Invalid SPIR-V binary version 
Invalid SPIR-V header.
Invalid SPIR-V magic number '
Invalid SPIR-V magic number.
Invalid SPIR-V.  The id bound is larger than the max id bound 
Invalid Sampled 
Invalid argument
Invalid binding: 
Invalid character '%c' in swizzle operation. Only xyzw or rgba are allowed.
Invalid descriptor set name used in layout specifier
Invalid extended instruction import '
Invalid extended instruction number: 
Invalid initializer for spec onstant.
Invalid instruction Op
Invalid instruction word count: 
Invalid member count in texture template structure
Invalid number of bits (
Invalid opcode: 
Invalid pointer storage class
Invalid scope value:
Invalid seek
Invalid semantics value
Invalid shader In/Out variable semantic: 
Invalid shader In/Out variable: 
Invalid shader program CVfxGL::CompileShaderAndGetVariables(2470): 
Invalid shader program for CVfxGL::GetAllShaderVariables()
Invalid storage class for pointer operand 
Invalid storage class for target environment
Invalid storage class semantics value
Invalid texture template struct member type
Invalid texture template type
Invalid use of 8- or 16-bit result
Invalid use of function result id 
Invalid use of function type result id 
Invalid value data type for annotation %s
Invalid variable index to flattened array
Invalid word count: Op
Invariant
InverseSqrt
Invocation
InvocationID
InvocationId
Invocations
InvocationsPerPixelNV
InvokeMiniDumpHandler
Is a directory
IsDebuggerPresent
IsFinite
IsHelperInvocation
IsHelperInvocationEXT
IsInf
IsNan
IsNormal
IsProcessorFeaturePresent
IsValidCodePage
IsValidEvent
IsValidLocale
IsValidLocaleName
IsValidReserveId
Isolines
IterationMultiple
IterationMultiple loop control operand must be greater than zero
Its Storage Class operand must be the same as the Storage Class 
J	H;H
J 9J s
J 9O r
J H+J
J `>,
J uHM;
J'H;H
J+H;H
J/H;H
J0D;H0uP
J0H;H
J0M9N
J;D10t	H
J@H+J8H
J@H+J8I
JD9;}:H
JJJJJJJ
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
January
Jun 27 2016
Jw!Hc
JwdtNA
K 9J s
K H9H0t
K H9s0t?H
K&>.yC
K(L9$
K(fD;
K0D8:u
K8H;^Ht
K8L9c t$
K8fD;
K8w	H9q
K8w	L9y
K:H9{h
K:fA;
K@E81u
K@H+K8H
K@H+K8I
KERNEL32.dll
KXE8AXt
Kernel
Kh9|$Xt
Khronos
Khronos Glslang Reference Front End
Khronos LLVM/SPIR-V Translator
Khronos SPIR-V Tools Assembler
Khronos SPIR-V Tools Linker
KpH9Kht
K~Je#>!
L	s8H
L!D$8
L!L$h
L!|$(L!
L#D$(D
L#D$8E
L#D$8E3
L#D$X
L#D$XE3
L#D$h
L#I0I
L#MgL
L#N0I
L#Q0I
L#Y0H
L$ A;
L$ AVAWH
L$ D+
L$ D;]
L$ E2
L$ E3
L$ H+
L$ H9\$0u
L$ H;
L$ H;A
L$ H;L$(
L$ H;L$(t
L$ H;L$(t[
L$ H;L$(u
L$ H;O
L$ I;
L$ L+
L$ L;
L$ Lc
L$ SH
L$ SUVAVAWH
L$ SUVWATAUAVH
L$ SUVWH
L$ SVATAVH
L$ SVAWH
L$ SVWH
L$ SWAUAVH
L$ SWAVAWH
L$ UATAUAVAWH
L$ UH
L$ USVWATAUAVAWH
L$ USVWATAWH
L$ USVWAUAVH
L$ USVWAVAWH
L$ USVWH
L$ USWATAWH
L$ USWH
L$ UVAUAVAWH
L$ UVAUH
L$ UVWATAUAVAWH
L$ UVWAUAWH
L$ UVWAVAWH
L$ UVWH
L$ UWAVH
L$ VH
L$ VWATAVAWH
L$ VWAVH
L$ WATAUAVAWH
L$ WAVAWH
L$ WH
L$ fH
L$ fff
L$!H3
L$&@8t$&t0@8q
L$(;H
L$(@2
L$(E3
L$(H+
L$(H+L$ H
L$(H;
L$(H;L$0r
L$(H=
L$(I+
L$(L+
L$(L;
L$(t!H
L$(t,H
L$0)y
L$0A;L$
L$0E3
L$0H#
L$0H+
L$0H3
L$0H9C
L$0H9O
L$0H;
L$0H;L$8
L$0H;L$8H
L$0H;L$8t
L$0H;L$8u
L$0H=
L$0Hc
L$0HcQ
L$0I+
L$0I;
L$0L+
L$0L;
L$0L;L$ t 
L$0M;
L$0fH
L$0fI
L$0tI
L$1H3
L$2H3
L$4E3
L$4H;
L$8@:
L$8A+
L$8A;
L$8E3
L$8H+
L$8H+1H
L$8H+L$0H
L$8H3
L$8H3L$HI
L$8H;
L$8H;K
L$8H;L$@r
L$8H;|$H
L$8H=
L$8I+
L$8I;
L$8Ic
L$8L+
L$8L;
L$8Lc
L$8M+
L$8M;eHt
L$8f#
L$8u%H
L$@;L$8
L$@;|
L$@@2
L$@E+
L$@E2
L$@E3
L$@H+
L$@H3
L$@H9K
L$@H9L$8t
L$@H;
L$@H;D$`r
L$@H;L$Hu
L$@H;N
L$@H=
L$@Hk
L$@I;
L$@L+
L$@L;
L$@M+
L$@uU
L$AH3
L$D;L$T
L$DE3
L$H;J
L$HE2
L$HE3
L$HH+
L$HH3
L$HH9L$@
L$HH9M
L$HH;
L$HH;L$X
L$HH=
L$HI;
L$HL+
L$HM;
L$HfA
L$Ht,H
L$Htmf
L$LA;
L$P+L$8
L$P+L$H
L$P8A8
L$P8A9
L$P@2
L$PE3
L$PH+
L$PH+L$@H
L$PH3
L$PH9H
L$PH9K
L$PH9L$H
L$PH;
L$PH;K
L$PH;L$Xu}L
L$PH=
L$PI;
L$PL+
L$PL;
L$PLc
L$PM+
L$X@2
L$XD+
L$XE3
L$XH#
L$XH+
L$XH+L$HH
L$XH3
L$XH;
L$XH;E
L$XH=
L$XI+
L$XI9
L$XI9L$`u
L$XI9N
L$XI;
L$XL+
L$XL;
L$`A+
L$`A;
L$`E3
L$`H+
L$`H+L$PH
L$`H+L$PI
L$`H3
L$`H9
L$`H9L$hu!
L$`H;
L$`H;M
L$`H=
L$`L+
L$`L;
L$`M;
L$`fH
L$`fI
L$h;\$ u
L$hE3
L$hH+
L$hH+L$XH
L$hH3
L$hH;
L$hH;L$pr
L$hH=
L$hHi
L$hI;
L$hL+
L$hL;
L$hM;
L$ht	H
L$p;H
L$pE3
L$pH#
L$pH+
L$pH+L$`H
L$pH+L$hH
L$pH3
L$pH9L$xu 
L$pH9L$xu'
L$pH;
L$pH=
L$pM+
L$pfff
L$t;M
L$x;M
L$xE3
L$xH+
L$xH+L$hH
L$xH+L$pH
L$xH3
L$xH;
L$xH=
L$xL+
L$xL;
L$xM9N
L$|E3
L(:A:
L(;A:
L(;E:
L(<A:
L+I(H
L+I(I
L+J8H
L+J8I
L+K(I
L+MpE
L+N`A
L+R8H
L+a0E3
L+c0I
L+e I
L+gHE
L+h I
L+s0I
L+t$PI
L+~HD
L-n>4
L3A(L
L9	t!H
L9!t!H
L9"t!H
L9&uBH;|$Xr
L9(t!H
L9*t!H
L9*u&
L92t$H
L92u'
L92u,
L98t8H
L99t	H
L9;uXH
L9@ s
L9A s
L9A0uUH
L9Ahs
L9B s
L9CHu$M
L9D$(t/I
L9D$(u
L9D$(u&
L9D$(u'
L9D$0
L9D$0t0
L9D$0u
L9D$8L
L9E(u@M
L9H A
L9I s
L9I t
L9I t#L
L9I(t
L9J s
L9J0t8H
L9L$(L
L9L$pu
L9P A
L9P s
L9T$pH
L9`8tA
L9a s
L9c t
L9d$ t3L
L9d$0
L9d$0t
L9d$@t
L9d$Ht
L9d$`u)@
L9d$ht+H
L9d$hu+@
L9g0t
L9h0t	H
L9i s
L9l$ t
L9l$@I
L9l$`t
L9l$pt
L9m8t
L9p0t	H
L9pHu
L9q s
L9s(u3
L9t$ 
L9t$`tHH
L9u0t	H
L9u@t	H
L9u@tJH
L9uHt	H
L9uOt	L
L9v8u*H
L9vHt
L9x0t	H
L9{ u
L9{Hu
L9{xu
L9|$0t
L9|$8t
L9|$@t
L9|$H
L9|$ht
L9|$pt
L9|$xt
L9}@t	H
L;	r!HcC
L;	r(HcC
L;	r)HcC
L;	t(
L; u9H
L; u;
L; u<H
L;!u8
L;!u9H
L;)t2H
L;)t5H
L;1t9f
L;@ s
L;B s
L;C sAH
L;C sCH
L;D$8
L;D$ht
L;F u
L;F`u
L;Fpu
L;Gpu
L;H A
L;H s
L;I s
L;IHt
L;IXt
L;J s
L;K sIH
L;K sNH
L;K u
L;L$p
L;M t
L;Mwu
L;O u
L;Oxu
L;P A
L;P s%
L;Q s
L;R s
L;WHu
L;b s
L;d$ 
L;d$Hu
L;d$p
L;h s
L;k s
L;l$hu"
L;l$p
L;r s
L;s v
L;s(H
L;s(L
L;t$0u
L;t$H
L;t$XH
L;u u
L;|$0
L;|$Hu#
L;|$`u
L;|$pu'
L;} u
L?UUUUUUU?
LAYOUT
LCIDToLocaleName
LCMapStringEx
LCMapStringW
LEFT_ANGLE
LEFT_ASSIGN
LEFT_BRACE
LEFT_BRACKET
LEFT_OP
LEFT_PAREN
LESS_EQUAL
LEVEL 
LE_BGRA8888
LE_BGRX8888
LE_OP
LINEAR_ABGR8888
LINEAR_ARGB8888
LINEAR_BGR888
LINEAR_BGRA8888
LINEAR_BGRX5551
LINEAR_BGRX8888
LINEAR_D24S8
LINEAR_I8
LINEAR_RGB888
LINEAR_RGBA16161616
LINEAR_RGBA8888
LLVM (http://llvm.org/):
LLVM ERROR: 
LLVM/SPIR-V Translator
LOG_GENERAL
LOW_PRECISION
Label
Label instructions must be in a function body
LaunchIdNV
LaunchSizeNV
Layer
LayerPerViewNV
Layout qualification must match:
Lazy Value Information Analysis
Lc&D;f
Lc3D;s
Lc6D;v
LcA H
LcA L
LcA<E3
LcC D
LcC D;C
LcC LcK
LcG$H
LcH LcP
LcI LcQ
LcK$A;
LcQ H
Lcd$0I
Lcd$@A
Lcd$`I
Lcs0D;s@u
Lc|$0H
Lc|$4H
Ldexp
LeaveCriticalSection
Length
Length is not defined.
LessOrGreater
LifetimeStart
LifetimeStop
Line: 
LineStream
Linear
Link failed; no code produced.  Log string from glslang:
Linkage
Linkage Attributes
LinkageAttributes
Linked 
Linker Objects
Linking 
Literal string is longer than 
LiteralSampler
Lj[;>
Load cooperative matrix
Load2
Load3
Load4
LoadLibraryExW
Loading cached shader: %s
LocalFree
LocalInvocationID
LocalInvocationId
LocalInvocationIndex
LocalSize
LocalSizeHint
LocalSizeHintId
LocalSizeId
LocaleNameToLCID
Location
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
LoggingSystem_RegisterLoggingChannel
Logical
Logical addressing not supported: 
LogicalAnd
LogicalEqual
LogicalNot
LogicalNotEqual
LogicalOr
Loop 
Loop Body
Loop Condition
Loop Invariant Code Motion
Loop Pass Manager
Loop Strength Reduction
Loop Terminal Expression
Loop at depth 
Loop header 
Loop with condition 
Loop-Closed SSA Form Pass
LoopMerge
Luminance
LunarG
LunarGLASS bottom translator pass
LunarGLASS unsupported functionality: %s
M H1E
M#O0I
M'y>0y
M(H;H
M(M;o
M+4$I
M+<$I
M+} I
M8;] u
M8H+M0H
M8H;M@r
M8I9M@u A
M8w	H9q
M98t!I
M9A s
M9H s
M9H0u
M9J t A
M9P@u-A
M9o0u
M9p s
M9|$Hu
M;7tA
M;B s
M;FXu
M;G0u
M;G`u
M;H s
M;W`u
M;X s
M;exI
M;f`H
M;q s
M;wHL
M@H+M8H
M@H9M8
M@H;MHr
M@H;MHtW
M@I+M8H
MAT2X2
MAT2X3
MAT2X4
MAT3X2
MAT3X3
MAT3X4
MAT4X2
MAT4X3
MAT4X4
MATRIX_TYPE
MEDIUM_PRECISION
MHH;MPr
MIN_LINEAR_MAG_MIP_POINT
MIN_LINEAR_MAG_POINT_MIP_LINEAR
MIN_MAG_LINEAR_MIP_POINT
MIN_MAG_MIP_LINEAR
MIN_MAG_MIP_POINT
MIN_MAG_POINT_MIP_LINEAR
MIN_POINT_MAG_LINEAR_MIP_POINT
MIN_POINT_MAG_MIP_LINEAR
MIRROR
MIRROR_ONCE
MLIR SPIR-V Serializer
MM/dd/yy
MOBILE_GLES_3_0
MOBILE_GLES_3_1
MODES
MOD_ASSIGN
MPH9MXu#
MPI9MHr
MS must be 0 in the OpenCL environement.
MUL_ASSIGN
MXtAD
Macro redefined; different argument names:
Macro redefined; different number of arguments:
Macro redefined; different substitutions:
Macro redefined; function-like versus object-like:
Made Modification '
MainCs
MainDs
MainGs
MainHs
MainPs
MainVs
Make the -lowerinvoke pass insert expensive, but correct, EH code
MakeAvailable
MakeAvailableKHR
MakePointerAvailable
MakePointerAvailableKHR
MakePointerAvailableKHR cannot be used with OpLoad.
MakePointerVisible
MakePointerVisibleKHR
MakePointerVisibleKHR cannot be used with OpStore.
MakePointerVisibleKHR is specified.
MakeTexelAvailable
MakeTexelAvailableKHR
MakeTexelVisible
MakeTexelVisibleKHR
MakeVisible
MakeVisibleKHR
March
MathLib_Init
Matrix
Matrix access is out of bounds, matrix has 
Matrix types can only be parameterized as having only 2, 3, or 4 columns.
Matrix types can only be parameterized with floating-point types.
MatrixInverse
MatrixStride
MatrixTimesMatrix
MatrixTimesScalar
MatrixTimesVector
Max recurse depth (default = 1000)
MaxAniso
MaxByteOffset
MaxByteOffsetId
MaxIterations
MaxLOD
Maximum CGSCCPassMgr iterations on one SCC
Maximum Control Flow nesting depth exceeded.
Maximum number of iterations SCEV will symbolically execute a constant derived loop
MbcntAMD
MemAlloc_AllocFunc
MemAlloc_CallocFunc
MemAlloc_FreeFunc
MemAlloc_ReallocFunc
MemAlloc_StrDupWrapperFunc
Member #
MemberDecorate
MemberDecorateString
MemberDecorateStringGOOGLE
MemberName
Memory Dependence Analysis
Memory Semantics Acquire and AcquireRelease cannot be used with 
Memory Semantics Volatile can only be used with atomic instructions
Memory Semantics ids must be OpConstant when Shader capability is present
Memory Semantics must be a constant instruction when CooperativeMatrixNV capability is present
Memory accesses with PhysicalStorageBufferEXT must use Aligned.
Memory model must be OpenCL in the OpenCL environment.
Memory model must be VulkanKHR for WebGPU environment.
Memory qualifiers must match:
MemoryBarrier
MemoryBarrierAtomicCounter
MemoryBarrierBuffer
MemoryBarrierImage
MemoryBarrierShared
MemoryModel
MemoryNamedBarrier
Merge Block 
Merge Block and Continue Target must be different ids
Merge Block may not be the block containing the OpLoopMerge
Merge Duplicate Global Constants
Mesa-IR/SPIR-V Translator
MeshNV
MeshShadingNV
MeshViewCountNV
MeshViewIndicesNV
Metadata
MgH9E
MhH9C t
MhI9W t
MinIterations
MinLOD
MinLod
Minus
MipBias
Mismatched Token Exception
Mismatched set
MissNV
Missing OpFunctionEnd at end of module.
Missing SourceArg() annotation for variable %s with source type TextureDim
Missing argument 
Missing entry point: Each stage requires one entry point
Missing function type definition.
Missing module.
Missing required OpMemoryModel instruction.
Missing token
Mobile SM 3.0 (GLES 3.0)
Mobile SM 3.0 (GLES 3.1)
Modes
ModfStruct
Module Pass Manager
Module contains unreachable blocks during merge return.  Run dead branch elimination before merge return.
Module has incomplete header: only 
ModulePass Manager
ModuleProcessed
MofA9y
Monday
MpH9H
MulAdd cooperative matrices
MultiByteToWideChar
MultiTexCoord0
MultiTexCoord1
MultiTexCoord2
MultiTexCoord3
MultiTexCoord4
MultiTexCoord5
MultiTexCoord6
MultiTexCoord7
MultiView
MultiViewport
Multiple case constructs have branches to the case construct that targets 
Multiple function bodies in multiple compilation units for the same signature in the same stage:
Multiply
MultisampleEnable
Mwt)A
MxH9Mp
N D8T$xu\M
N D8T$xueM
N H+N
N I+N
N L+N
N uRI;
N$3H$
N(H;9u
N0H9A
N0Hci
N3`d?
N8H+N0I
N8H9N@
N8H9N@u$
N8H9N@u&
N8I9N@u&A
N8I9N@u'A
N8w	H9y
N8w	L9i
N9<+u
N>O=I9
N@H+N8I
N@H9H
N@I+N8H
N@I;MHt
NAN(IND)
NAN(SNAN)
NClamp
ND;HDt$I
ND;KD
NEAREST
NEVER
NE_OP
NH3MH
NHH9NPuW
NHM;N@t
NONPRIVATE
NONUNIFORM
NOPERSPECTIVE
NORMAL
NOTE: 
NOT_EQUAL
NPL;NHt
NVIDIA
NV_DST16
NV_DST24
NV_INTZ
NV_NULL
NV_RAWZ
N`L9N0t
NamedBarrier
NamedBarrierInitialize
Natural Loop Information
Nearest
Negate conditional
Negate value
Negative
Neither a front-end constant nor a spec constant.
Next token is
NhI;u
No Alias Analysis (always returns 'may' alias)
No OpEntryPoint instruction was found. This is only allowed if the Linkage capability is being used.
No child processes
No error
No errors.  No code generation or linking was requested.
No function definition (body) found: 
No locks available
No loop body
No loop condition
No space left on device
No such device
No such device or address
No such file or directory
No such process
No target information
NoAlias
NoCapture
NoContraction
NoLine
NoPerspective
NoReadWrite
NoSignedWrap
NoUnsignedWrap
NoWait
NoWrite
Non-L-value cannot be passed for 'out' or 'inout' parameters.
Non-OpFunctionParameter (opcode: %d) found inside function but outside basic block
Non-constant-index-expression
Non-supported terminator
Non-unique OpEntryPoint interface 
NonPrivatePointer
NonPrivatePointerKHR
NonPrivatePointerKHR must be specified if 
NonPrivatePointerKHR must be specified if MakePointerAvailableKHR is specified.
NonPrivatePointerKHR requires a pointer in Uniform, 
NonPrivateTexel
NonPrivateTexelKHR
NonReadable
NonUniform
NonUniformEXT
NonWritable
Nonlinear subscript pairs
Nontemporal
Normal
Normalize
Not a directory
Not enough space
NotEqual
NotInf
NotNaN
November
Now at end of input.
NumEnqueuedSubgroups
NumSubgroups
NumWorkGroups
NumWorkgroups
Number of (literal, label) pairs in OpSwitch (
Number of GEPs converted to casts
Number of Global Variables (Storage Class other than 'Function') exceeded the valid limit (
Number of IV comparisons eliminated
Number of IV identities eliminated
Number of IV operands folded into a use
Number of IV remainder operations eliminated
Number of IV sign/zero extends eliminated
Number of OpTypeStruct members (
Number of PHI nodes inserted
Number of [s|z]ext instructions combined with loads
Number of aggregate globals broken into scalars
Number of aggregates converted to scalar
Number of alloca's promoted
Number of alloca's promoted with a single store
Number of alloca's promoted within one block
Number of allocas broken up
Number of allocas copied from constant global
Number of allocas merged together
Number of allocas promoted
Number of arguments constant propagated by IPSCCP
Number of arguments with unsolved size and offset
Number of basic blocks unreachable
Number of block queries that were completely cached
Number of blocks eliminated
Number of blocks inserted
Number of blocks merged
Number of blocks simplified
Number of cached, but dirty, non-local ptr responses
Number of call instructions CSE'd
Number of call insts hoisted or sunk
Number of call sites analyzed
Number of call sites deleted, not inlined
Number of caller-callers analyzed
Number of common instructions sunk down to the end block
Number of comparisons propagated
Number of congruent IVs eliminated
Number of constant folds
Number of constructor parameters does not match the number of structure fields
Number of dead alloca's removed
Number of dead inst eliminated
Number of dead prototypes removed
Number of dead stores eliminated
Number of debug value instructions moved
Number of dirty cached non-local responses
Number of equalities propagated
Number of exit values replaced
Number of expansions
Number of expr tree annihilated
Number of factorizations
Number of fully cached non-local ptr responses
Number of fully cached non-local responses
Number of functions converted to fastcc
Number of functions deleted
Number of functions deleted because all callers found
Number of functions inlined
Number of global C++ destructors removed
Number of global aliases eliminated
Number of global aliases resolved
Number of global constants merged
Number of global uses devirtualized
Number of global vars shrunk to booleans
Number of globals deleted
Number of globals found to be constant by IPSCCP
Number of globals localized
Number of globals marked constant
Number of globals marked unnamed_addr
Number of globals with initializers stored into them
Number of heap objects SRA'd
Number of image operand ids doesn't correspond to the bit mask
Number of indvars widened
Number of instructions CSE'd
Number of instructions PRE'd
Number of instructions deleted
Number of instructions hoisted out of loop
Number of instructions removed
Number of instructions removed by IPSCCP
Number of instructions simplified
Number of instructions simplified or DCE'd
Number of instructions sunk
Number of instructions sunk out of loop
Number of insts combined
Number of insts reassociated
Number of invokes replaced
Number of library calls simplified
Number of live out of a loop variables
Number of load instructions CSE'd
Number of load instructions with unsolved size and offset
Number of load insts hoisted or sunk
Number of loads PRE'd
Number of loads deleted
Number of local variables ('Function' Storage Class) exceeded the valid limit (
Number of loop exit tests replaced
Number of loops completely unrolled
Number of loops rotated
Number of loops unrolled (completely or otherwise)
Number of loops unrolled with run-time trip counts
Number of loops with predictable loop counts
Number of loops with trip counts computed by force
Number of loops without predictable loop counts
Number of memory access targets propagated
Number of memory instructions whose address computations were sunk
Number of memory locations promoted to registers
Number of multiplies factored
Number of nest attributes removed
Number of nested loops split out
Number of other instrs removed
Number of phi-nodes demoted
Number of phis propagated
Number of pre-header or exit blocks inserted
Number of reassociations
Number of redundant instructions removed
Number of registers demoted
Number of registers live across unwind edges
Number of return instructions duplicated
Number of scalar allocas adjusted to allow promotion
Number of selects propagated
Number of selects turned into branches
Number of speculative executed instructions
Number of static ctors evaluated
Number of stores deleted
Number of switch cases removed
Number of switch instructions turned into bitmaps
Number of switch instructions turned into lookup tables
Number of trip counts computed with array length
Number of trivial PHIs eliminated
Number of trivial dead stores removed
Number of uncached non-local ptr responses
Number of uncached non-local responses
Number of unreachable basic blocks removed
Number of uses of Cast expressions replaced with uses of sunken Casts
Number of uses of Cmp expressions replaced with uses of sunken Cmps
Number of uses of [s|z]ext instructions optimized
O ;H s
O H+O
O I+O
O L+O
O(3H(
O(H;1t
O(Hcs
O(fff
O(t(H
O0D+O(t#L
O0H+O(H
O0H9O(r
O0HcQ
O0rDI
O8+G$
O8H+O0H
O8H9A
O8H9O@u
O8H;~
O8wkH
O@H+O8H
O@H+O8I
O@H;MHt
O@H;OHt
O@I;HHt
OCTAL_ESC
OD;HD
OF>;^
OHH9H
OPENGL32.dll
OPTIONS:
OR_ASSIGN
OR_OP
OVERVIEW: 
O`8O,tNE
O`H9Ohu)
O`M;OXt
ObjectRayDirectionNV
ObjectRayOriginNV
ObjectRayTmaxNV
ObjectRayTminNV
ObjectToWorldNV
October
Offset
Offsets
OhI;}
Only one push_constant block is allowed per stage
Only one shaderRecordNV buffer block is allowed per stage
Only one taskNV interface block is allowed per shader
OpAccessChain
OpAll
OpAny
OpArrayLength
OpAtomicAnd
OpAtomicCompareExchange
OpAtomicCompareExchangeWeak
OpAtomicExchange
OpAtomicFlagClear
OpAtomicFlagTestAndSet
OpAtomicIAdd
OpAtomicIDecrement
OpAtomicIIncrement
OpAtomicISub
OpAtomicLoad
OpAtomicOr
OpAtomicSMax
OpAtomicSMin
OpAtomicStore
OpAtomicUMax
OpAtomicUMin
OpAtomicXor
OpBeginInvocationInterlockEXT
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require Fragment execution model
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require a fragment shader interlock execution mode.
OpBitCount
OpBitFieldInsert
OpBitFieldSExtract
OpBitFieldUExtract
OpBitReverse
OpBitcast
OpBitwiseAnd
OpBitwiseOr
OpBitwiseXor
OpBranch
OpBranch or OpBranchConditional instruction. 
OpBranchConditional
OpBranchConditional or OpSwitch instruction. 
OpBranchConditional requires either 3 or 5 parameters
OpBuildNDRange
OpCapability
OpCaptureEventProfilingInfo
OpCommitReadPipe
OpCommitWritePipe
OpCompositeConstruct
OpCompositeExtract
OpCompositeInsert
OpConstant
OpConstantComposite
OpConstantFalse
OpConstantNull
OpConstantNull Result Type <id> '
OpConstantSampler
OpConstantSampler Result Type <id> '
OpConstantTrue
OpControlBarrier
OpControlBarrier requires one of the following Execution Models: TessellationControl, GLCompute or Kernel
OpConvertFToS
OpConvertFToU
OpConvertPtrToU
OpConvertSToF
OpConvertUToF
OpConvertUToPtr
OpCooperativeMatrixLengthNV
OpCooperativeMatrixLoadNV
OpCooperativeMatrixMulAddNV
OpCooperativeMatrixStoreNV
OpCopyLogical
OpCopyMemory
OpCopyMemorySized
OpCopyObject
OpCreateUserEvent
OpDPdx
OpDPdxCoarse
OpDPdxFine
OpDPdy
OpDPdyCoarse
OpDPdyFine
OpDecorate
OpDecorate SpecId decoration target <id> '
OpDecorate decoration '
OpDecorate, OpDecorateId, and OpGroupMemberDecorate
OpDecorateId
OpDecorateStringGOOGLE
OpDecorationGroup
OpDecorationGroup is not allowed in the WebGPU execution 
OpDemoteToHelperInvocationEXT
OpDemoteToHelperInvocationEXT requires Fragment execution model
OpDot
OpEmitStreamVertex
OpEmitVertex
OpEndInvocationInterlockEXT
OpEndPrimitive
OpEndStreamPrimitive
OpEnqueueKernel
OpEnqueueMarker
OpEntryPoint
OpEntryPoint Entry Point <id> '
OpEntryPoint interfaces must be OpVariables with Storage Class of Input(1) or Output(3). Found Storage Class 
OpEntryPoint interfaces should only list global variables
OpExecuteCallableNV
OpExecutionMode
OpExecutionMode Entry Point <id> '
OpExecutionMode is only valid when the Mode operand is an execution mode that takes no Extra Operands, or takes Extra Operands that are not id operands.
OpExecutionModeId is only valid when the Mode operand is an execution mode that takes Extra Operands that are id operands.
OpExtInst
OpExtInst set Id 
OpExtInstImport
OpExtension
OpFAdd
OpFConvert
OpFDiv
OpFMod
OpFMul
OpFNegate
OpFOrdEqual
OpFOrdGreaterThan
OpFOrdGreaterThanEqual
OpFOrdLessThan
OpFOrdLessThanEqual
OpFOrdNotEqual
OpFRem
OpFSub
OpFUnordEqual
OpFUnordGreaterThan
OpFUnordGreaterThanEqual
OpFUnordLessThan
OpFUnordLessThanEqual
OpFUnordNotEqual
OpFragmentFetchAMD
OpFragmentMaskFetchAMD
OpFunction
OpFunction Function Type <id> '
OpFunction Result Type <id> '
OpFunctionCall
OpFunctionCall Argument <id> '
OpFunctionCall Function <id> '
OpFunctionCall Function <id>'s parameter count does not match the argument count.
OpFunctionCall Result Type <id> '
OpFunctionEnd
OpFunctionEnd inside basic block
OpFunctionEnd without corresponding OpFunction
OpFunctionParameter
OpFunctionParameter 
OpFunctionParameter Result Type <id> '
OpFwidth
OpFwidthCoarse
OpFwidthFine
OpGenericCastToPtr
OpGenericCastToPtrExplicit
OpGenericPtrMemSemantics
OpGetDefaultQueue
OpGetKernelNDrangeMaxSubGroupSize
OpGetKernelNDrangeSubGroupCount
OpGetKernelPreferredWorkGroupSizeMultiple
OpGetKernelWorkGroupSize
OpGetMaxPipePackets
OpGetNumPipePackets
OpGroupAll
OpGroupAny
OpGroupAsyncCopy
OpGroupBroadcast
OpGroupCommitReadPipe
OpGroupCommitWritePipe
OpGroupDecorate
OpGroupDecorate Decoration group <id> '
OpGroupDecorate is not allowed in the WebGPU execution 
OpGroupDecorate may not target OpDecorationGroup <id> '
OpGroupFAdd
OpGroupFAddNonUniformAMD
OpGroupFMax
OpGroupFMaxNonUniformAMD
OpGroupFMin
OpGroupFMinNonUniformAMD
OpGroupIAdd
OpGroupIAddNonUniformAMD
OpGroupMemberDecorate
OpGroupMemberDecorate Decoration group <id> '
OpGroupMemberDecorate Structure type <id> '
OpGroupMemberDecorate is not allowed in the WebGPU execution 
OpGroupNonUniformAll
OpGroupNonUniformAllEqual
OpGroupNonUniformAny
OpGroupNonUniformBallot
OpGroupNonUniformBallotBitCount
OpGroupNonUniformBallotBitExtract
OpGroupNonUniformBallotFindLSB
OpGroupNonUniformBallotFindMSB
OpGroupNonUniformBitwiseAnd
OpGroupNonUniformBitwiseOr
OpGroupNonUniformBitwiseXor
OpGroupNonUniformBroadcast
OpGroupNonUniformBroadcastFirst
OpGroupNonUniformElect
OpGroupNonUniformFAdd
OpGroupNonUniformFMax
OpGroupNonUniformFMin
OpGroupNonUniformFMul
OpGroupNonUniformIAdd
OpGroupNonUniformIMul
OpGroupNonUniformInverseBallot
OpGroupNonUniformLogicalAnd
OpGroupNonUniformLogicalOr
OpGroupNonUniformLogicalXor
OpGroupNonUniformPartitionNV
OpGroupNonUniformQuadBroadcast
OpGroupNonUniformQuadSwap
OpGroupNonUniformSMax
OpGroupNonUniformSMin
OpGroupNonUniformShuffle
OpGroupNonUniformShuffleDown
OpGroupNonUniformShuffleUp
OpGroupNonUniformShuffleXor
OpGroupNonUniformUMax
OpGroupNonUniformUMin
OpGroupReserveReadPipePackets
OpGroupReserveWritePipePackets
OpGroupSMax
OpGroupSMaxNonUniformAMD
OpGroupSMin
OpGroupSMinNonUniformAMD
OpGroupUMax
OpGroupUMaxNonUniformAMD
OpGroupUMin
OpGroupUMinNonUniformAMD
OpGroupWaitEvents
OpIAdd
OpIAddCarry
OpIEqual
OpIMul
OpINotEqual
OpISub
OpISubBorrow
OpIgnoreIntersectionNV
OpImage
OpImageDrefGather
OpImageFetch
OpImageGather
OpImageQueryFormat
OpImageQueryLevels
OpImageQueryLod
OpImageQueryLod requires DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
OpImageQueryLod requires Fragment or GLCompute execution model
OpImageQueryOrder
OpImageQuerySamples
OpImageQuerySize
OpImageQuerySizeLod
OpImageRead
OpImageRead, OpImageWrite, OpImageSparseFetch and 
OpImageSampleDrefExplicitLod
OpImageSampleDrefImplicitLod
OpImageSampleExplicitLod
OpImageSampleFootprintNV
OpImageSampleImplicitLod
OpImageSampleProjDrefExplicitLod
OpImageSampleProjDrefImplicitLod
OpImageSampleProjExplicitLod
OpImageSampleProjImplicitLod
OpImageSparseDrefGather
OpImageSparseFetch
OpImageSparseGather
OpImageSparseRead
OpImageSparseSampleDrefExplicitLod
OpImageSparseSampleDrefImplicitLod
OpImageSparseSampleExplicitLod
OpImageSparseSampleImplicitLod
OpImageSparseSampleProjDrefExplicitLod
OpImageSparseSampleProjDrefImplicitLod
OpImageSparseSampleProjExplicitLod
OpImageSparseSampleProjImplicitLod
OpImageSparseTexelsResident
OpImageTexelPointer
OpImageWrite
OpInBoundsAccessChain
OpInBoundsPtrAccessChain
OpIsFinite
OpIsHelperInvocationEXT
OpIsHelperInvocationEXT requires Fragment execution model
OpIsInf
OpIsNan
OpIsNormal
OpIsValidEvent
OpIsValidReserveId
OpKill
OpKill requires Fragment execution model
OpLabel
OpLabel inside basic block
OpLabel outside function
OpLessOrGreater
OpLifetimeStart
OpLifetimeStop
OpLine
OpLine Target <id> '
OpLoad
OpLoad Pointer <id> '
OpLoad Result Type <id> '
OpLoad type for pointer <id> '
OpLogicalAnd
OpLogicalEqual
OpLogicalNot
OpLogicalNotEqual
OpLogicalOr
OpLoopMerge
OpLoopMerge must be the second-to-last instruction in 
OpLoopMerge must immediately precede either an 
OpMatrixTimesMatrix
OpMatrixTimesScalar
OpMatrixTimesVector
OpMemberDecorate
OpMemberDecorate Structure type <id> '
OpMemberDecorate decoration  '
OpMemberDecorateStringGOOGLE
OpMemberName
OpMemberName Member <id> '
OpMemberName Type <id> '
OpMemoryBarrier
OpMemoryModel
OpMemoryModel should only be provided once.
OpModuleProcessed
OpName
OpNoLine
OpNop
OpNot
OpOrdered
OpOuterProduct
OpPhi
OpPhi does not have an equal number of incoming values and basic blocks.
OpPhi must appear within a non-entry block before all 
OpPhi's incoming basic block <id> 
OpPhi's number of incoming blocks (
OpPhi's result type <id> 
OpPtrAccessChain
OpPtrCastToGeneric
OpQuantizeToF16
OpReadClockKHR
OpReadPipe
OpReleaseEvent
OpReportIntersectionNV
OpReserveReadPipePackets
OpReserveWritePipePackets
OpReservedReadPipe
OpReservedWritePipe
OpRetainEvent
OpReturn
OpReturn can only be called from a function with void 
OpReturnValue
OpReturnValue Value <id> '
OpReturnValue value's type <id> '
OpSConvert
OpSDiv
OpSGreaterThan
OpSGreaterThanEqual
OpSLessThan
OpSLessThanEqual
OpSMod
OpSMulExtended
OpSNegate
OpSRem
OpSampledImage
OpSatConvertSToU
OpSatConvertUToS
OpSelect
OpSelectionMerge
OpSelectionMerge must be the second-to-last 
OpSelectionMerge must immediately precede either an 
OpSetUserEventStatus
OpShiftLeftLogical
OpShiftRightArithmetic
OpShiftRightLogical
OpSignBitSet
OpSource
OpSourceContinued
OpSourceExtension
OpSpecConstant
OpSpecConstant opcode table out of sync
OpSpecConstantComposite
OpSpecConstantFalse
OpSpecConstantOp
OpSpecConstantOp opcode
OpSpecConstantTrue
OpStore
OpStore Object <id> '
OpStore Pointer <id> '
OpStore type for pointer <id> '
OpString
OpSubgroupAllEqualKHR
OpSubgroupAllKHR
OpSubgroupAnyKHR
OpSubgroupBallotKHR
OpSubgroupFirstInvocationKHR
OpSubgroupReadInvocationKHR
OpSwitch
OpTerminateRayNV
OpTraceNV
OpTranspose
OpTypeAccelerationStructureNV
OpTypeArray
OpTypeArray Element Type <id> '
OpTypeArray Length <id> '
OpTypeBool
OpTypeCooperativeMatrixNV
OpTypeCooperativeMatrixNV Cols <id> '
OpTypeCooperativeMatrixNV Component Type <id> '
OpTypeCooperativeMatrixNV Rows <id> '
OpTypeCooperativeMatrixNV Scope <id> '
OpTypeDeviceEvent
OpTypeEvent
OpTypeFloat
OpTypeForwardPointer
OpTypeFunction
OpTypeFunction Parameter Type <id> '
OpTypeFunction Return Type <id> '
OpTypeFunction may not take more than 
OpTypeImage
OpTypeInt
OpTypeInt has invalid signedness:
OpTypeMatrix
OpTypeOpaque
OpTypePipe
OpTypePointer
OpTypePointer Type <id> '
OpTypeQueue
OpTypeReserveId
OpTypeRuntimeArray
OpTypeRuntimeArray Element Type <id> '
OpTypeRuntimeArray must be decorated with Block if it 
OpTypeRuntimeArray must be decorated with BufferBlock 
OpTypeRuntimeArray must have storage class of 
OpTypeRuntimeArray.
OpTypeSampledImage
OpTypeSampledImage, OpTypeAccelerationStructureNV, 
OpTypeSampledImage.
OpTypeSampler
OpTypeStruct
OpTypeStruct Member Type <id> '
OpTypeVector
OpTypeVector Component Type <id> '
OpTypeVoid
OpUConvert
OpUDiv
OpUGreaterThan
OpUGreaterThanEqual
OpULessThan
OpULessThanEqual
OpUMod
OpUMulExtended
OpUndef
OpUndef is disallowed
OpUnordered
OpUnreachable
OpVariable
OpVariable 
OpVariable Initializer <id> '
OpVariable Result Type <id> '
OpVariable storage class cannot be Generic
OpVariable, <id> '
OpVectorExtractDynamic
OpVectorInsertDynamic
OpVectorShuffle
OpVectorShuffle component literals count does not match Result Type <id> '
OpVectorTimesMatrix
OpVectorTimesScalar
OpWritePackedPrimitiveIndices4x8NV
OpWritePipe
Opaque_
Opcode 
Opcode in Bottom IR: 
OpenCL
OpenCL.std
OpenCL_C
OpenCL_CPP
OpenGL
OpenGL: Compiling GLSL Shader
Operand 
Operand type must be a pointer
Operation not permitted
Optional Image Operands are not allowed in the OpenCL 
Ordered
Ordered constructor wrapped type has no default constructor.
OriginLowerLeft
OriginUpperLeft
Other warnings have been suppressed.
OuterProduct
Output
OutputLineStrip
OutputLinesNV
OutputMemory
OutputMemoryKHR
OutputPatch
OutputPoints
OutputPrimitivesNV
OutputTriangleStrip
OutputTrianglesNV
OutputVertices
OverrideCoverageNV
P H+P
P H;G
P(H+P H
P(H9:t!H
P0A+P(t
P0A;D.
P0H+P(H
P0t!I
P8H;A
P>q_Y~
P@D8h(
P@H92u
PACKED
PACK_OFFSET
PATCH
PAYLOADINNV
PAYLOADNV
PA]A\^
PA^A\[
PA^A\_^]
PA^A]A\
PA^A]A\^[
PA^A]_^]
PA^^]
PA^_]
PA^_^
PA^_^[]
PA^_^][
PA_A\_][
PA_A\_^[
PA_A]A\_]
PA_A]A\_^[]
PA_A]^
PA_A]_
PA_A^A\[]
PA_A^A\_]
PA_A^A\_^][
PA_A^A]
PA_A^A]A\]
PA_A^A]A\_^[
PA_A^A]A\_^]
PA_A^A]_^
PA_A^A]_^][
PA_A^]
PA_A^^
PA_A^_
PA_A^_][
PA_A^_^[
PA_A^_^]
PC SM 3.0
PC SM 3.0 (GLSL)
PC SM 4.0 (D3D10)
PC SM 4.0 (GLSL)
PC SM 4.0 (VULKAN)
PC SM 4.1 (D3D10.1)
PC SM 4.1 (GLSL)
PC SM 4.1 (VULKAN)
PC SM 5.0 (D3D11)
PC SM 5.0 (GLSL)
PC SM 5.0 (VULKAN)
PC_SM_3_0
PC_SM_3_0_GL
PC_SM_4_0
PC_SM_4_0_GL
PC_SM_4_0_VULKAN
PC_SM_4_1
PC_SM_4_1_GL
PC_SM_4_1_VULKAN
PC_SM_5_0
PC_SM_5_0_GL
PC_SM_5_0_VULKAN
PERCENT
PERPRIMITIVENV
PERTASKNV
PERVERTEXNV
PERVIEWNV
PHL9}0t	H
POINT
POSITION
POSITIONT
PRAGMA
PRECISE
PRECISION
PROGRAM
PSIZE
PS_RENDER_STATE
PX9D$P
P`9D$ }
P`9D$0}
PackDouble2x32
PackHalf2x16
PackSnorm2x16
PackSnorm4x8
PackUnorm2x16
PackUnorm4x8
PartialCount
PartialCount and DontUnroll loop controls must not both be specified
Partially defined aggregate type
PartitionedExclusiveScanNV
PartitionedInclusiveScanNV
PartitionedReduceNV
Pass '
Pass Arguments: 
Pass::print not implemented for pass: '
PassthroughNV
Patch
PatchVertices
PeelCount
PeelCount and DontUnroll loop controls must not both be specified
PerPrimitiveNV
PerTaskNV
PerVertexNV
PerViewAttributesNV
PerViewNV
Permission denied
Ph;X0
Physical32
Physical64
PhysicalStorageBuffer
PhysicalStorageBuffer64
PhysicalStorageBuffer64EXT
PhysicalStorageBufferAddresses
PhysicalStorageBufferAddressesEXT
PhysicalStorageBufferEXT
PhysicalStorageBufferEXT must not be used with OpVariable.
PhysicalStorageBufferEXT pointer.
PipeStorage
Pipeline write using non-integer index
Pipes
Pixel Shader
Pixel Shader Render State
PixelCenterInteger
PixelFragment
PixelInterlockOrderedEXT
PixelInterlockUnorderedEXT
PixelShader
Plat_DebugPrint
Plat_ExitProcess
Plat_FloatTime
Plat_GetEnv
Plat_GetModuleFilename
Plat_GetModuleProcAddress
Plat_GetTime
Plat_IsInDebugSession
Plat_LoadInterface
Plat_LoadModule
Plat_SetDenormalsAreZero
Plat_ShouldCollectMiniDumpsForFatalErrors
Plat_UnloadModule
PlusUconst
PointCoord
PointMode
PointSize
PointStream
Pointer can only be converted to another pointer or int scalar: 
Pointer can only be converted to another pointer, int scalar or 32-bit int vector: 
Pointer operand 
Pointer storage class must be PhysicalStorageBufferEXT: 
Pointer type in OpTypeForwardPointer is not a pointer type.
PontStream
Position
PositionPerViewNV
Possible extensions include:
Post-Decrement
Post-Dominator Tree Construction
Post-Increment
PostDepthCoverage
Pp9D$ }
Pp9D$0}
Pre-Decrement
Pre-Increment
Precision qualifiers must match:
Preprocessed HLSL code
Presence of invariant qualifier must match:
Presence of precise qualifier must match:
Preserved
PrimitiveCountNV
PrimitiveID
PrimitiveId
PrimitiveIndicesNV
Print IR after each pass
Print IR after specified passes
Print IR before each pass
Print IR before specified passes
Print PassManager debugging information
Print all option values after command line parsing
Print non-default options after command line parsing
Prior to SPIR-V 1.4, specialization constant operation UConvert requires Kernel capability or extension SPV_AMD_gpu_shader_int16
Private
Process2DQuadTessFactorsAvg
Process2DQuadTessFactorsMax
Process2DQuadTessFactorsMin
ProcessIsolineTessFactors
ProcessQuadTessFactorsAvg
ProcessQuadTessFactorsMax
ProcessQuadTessFactorsMin
ProcessTriTessFactorsAvg
ProcessTriTessFactorsMax
ProcessTriTessFactorsMin
Promote Memory to Register
PtrAccessChain
PtrCastToGeneric
PtrDiff
PtrEqual
PtrNotEqual
PushConstant
PushConstant OpVariable <id> '
PushConstant id '
P|> ,o
Q D;Q
Q H+Q
Q5rHg,>
Q8D8AH
Q8L9Q
Q>.3Z<
QPI9PPtSH
QUESTION
QUEUEFAMILYCOHERENT
QuadReadAcrossDiagonal
QuadReadAcrossX
QuadReadAcrossY
QuadReadLaneAt
Quads
Qualcomm
QuantizeToF16
QueryPerformanceCounter
Queue
QueueFamily
QueueFamilyKHR
QueueFamilyKHR for OpAtomic* operations
R11_EAC
R11fG11fB10f
R16F_EXPAND
R16Snorm
R16ui
R32_UINT
R32ui
R8G8B8A8_ETC2_EAC
R8G8B8_ETC2
R8Snorm
READONLY
REPLACE
RESOURCE
RESTRICT
RETURN
REV_SUBTRACT
RG11_EAC
RG1616
RG1616F
RG1616F_EXPAND
RG3232F
RGB323232F
RGB565
RGB888
RGB888_BLUESCREEN
RGBA1010102
RGBA1010102F_EDRAM
RGBA16161616
RGBA16161616F
RGBA16161616F_EDRAM_RGBA1010102F
RGBA16161616F_EXPAND
RGBA16161616F_EXPAND_EDRAM_RGBA1010102F
RGBA16161616_EDRAM
RGBA16161616_EDRAM_RGBA16161616
RGBA32323232F
RGBA8888
RGBA8888_LINEAR
RGBX555
RGBX8888
RIGHT_ANGLE
RIGHT_ASSIGN
RIGHT_BRACE
RIGHT_BRACKET
RIGHT_OP
RIGHT_PAREN
RWBuffer
RWByteAddressBuffer
RWStructuredBuffer
RWTexture
RWTexture1D
RWTexture1DArray
RWTexture2D
RWTexture2DArray
RWTexture3D
RX9D$ht1H
Radians
RaiseException
RandomFloat
RayGenerationNV
RayPayloadNV
RayTmaxNV
RayTminNV
RayTracingNV
Reached non-composite type while indexes still remain to be traversed.
Read-only file system
ReadClockKHR
ReadConsoleW
ReadFile
ReadOnly
ReadPipe
ReadWrite
Reading a token: 
Reassociate expressions
Recognition Exception
RecurrentAddExpr
Recursion detected:
Reduce
Reducing stack by rule %d (line %lu):
Reflect
Refract
RegisterStringToken
Relaxed
RelaxedPrecision
Release
ReleaseEvent
ReleaseMutex
ReleaseSRWLockExclusive
ReleaseSRWLockShared
Releasing pass '
Remap I/O failed on HLSL -> SPIR-V of linked program:
Remapping Consts & Types: 
Remapping remainder: 
Remove redundant instructions
RemoveDirectoryW
Removing Dead Functions: 
Repeat
RepeatMirrored
ReportIntersectionNV
Requested 
Required
Required Passes:
ResType
ReserveId
ReserveReadPipePackets
ReserveWritePipePackets
Reserved word.
ReservedReadPipe
ReservedWritePipe
ResetEvent
Resource deadlock avoided
Resource device
Resource temporarily unavailable
Resources '%s' and '%s' share the same descriptor and binding number (Set = %d, Binding = %d).
RestartStrip
Restrict
RestrictPointer
RestrictPointerEXT
RestrictPointerEXT for PhysicalStorageBufferEXT pointer.
RestrictType
Result <id> '
Result <id> from OpSampledImage instruction must not appear as operand for Op
Result <id> from OpSampledImage instruction must not appear as operands of Op
Result Type
Result Type does not logically match the Operand type
Result Type has 
Result Type must be OpTypeBool
Result Type must be an integer scalar
Result Type must not equal the Operand type
Result Type struct
Result Type vector size: 
Result Type's second member
Result Type: 
Result id of OpDecorationGroup can only 
Result too large
Result type (Op
Result type is not defined.
RetainEvent
Return
ReturnValue
Rg16Snorm
Rg16f
Rg16i
Rg16ui
Rg32f
Rg32i
Rg32ui
Rg8Snorm
Rg8ui
Rgb10A2
Rgb10a2ui
Rgba16
Rgba16Snorm
Rgba16f
Rgba16i
Rgba16ui
Rgba32f
Rgba32i
Rgba32ui
Rgba8
Rgba8Snorm
Rgba8i
Rgba8ui
Rotate Loops
Round
RoundEven
RoundingModeRTE
RoundingModeRTZ
RowMajor
RtlCaptureContext
RtlLookupFunctionEntry
RtlPcToFileHeader
RtlUnwindEx
RtlVirtualUnwind
Running pass '
RuntimeDescriptorArray
RuntimeDescriptorArrayEXT
S H+S
S(H94
S(H;Y
S,, <Zw
S,,>,>
S,F,,
S,S,V1,
S,V2,V4
S0HcU
S8H;A
S8H;HHt
S8H;Y
S;\$0tH
S>$hkDh$h>[2
SAMPLE
SAMPLER
SAMPLER1D
SAMPLER1DARRAY
SAMPLER1DARRAYSHADOW
SAMPLER1DSHADOW
SAMPLER2D
SAMPLER2DARRAY
SAMPLER2DARRAYSHADOW
SAMPLER2DMS
SAMPLER2DMSARRAY
SAMPLER2DRECT
SAMPLER2DRECTSHADOW
SAMPLER2DSHADOW
SAMPLER3D
SAMPLERBUFFER
SAMPLERCUBE
SAMPLERCUBEARRAY
SAMPLERCUBEARRAYSHADOW
SAMPLERCUBESHADOW
SAMPLEREXTERNAL2DY2YEXT
SAMPLEREXTERNALOES
SAMPLERSHADOW
SATAUAVH
SATAUAWH
SATAUH
SATAVH
SAUAVAWH
SAUAVH
SAUAWH
SAVAWH
SBT Record Index
SCALAR_TYPE
SCCP: Don't know how to handle: 
SCEVValidator: SCEV for loop '
SClamp
SConvert
SDL2.dll
SDL_CreateWindow
SDL_DestroyWindow
SDL_GL_CreateContext
SDL_GL_DeleteContext
SDL_GL_GetProcAddress
SDL_GL_MakeCurrent
SDL_GL_SetAttribute
SDL_InitSubSystem
SDL_QuitSubSystem
SDL_WasInit
SEMICOLON
SGreaterThan
SGreaterThanEqual
SHADER_MODEL
SHADER_SOURCE
SHARED
SLASH
SLessThan
SLessThanEqual
SMCountNV
SMIDNV
SMOOTH
SMax3AMD
SMid3AMD
SMin3AMD
SMulExtended
SNAN)
SNegate
SOLID
SPIR-V 1.0
SPIR-V 1.0 (under OpenCL 1.2 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 1.2 Full Profile semantics)
SPIR-V 1.0 (under OpenCL 2.0 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 2.0 Full Profile semantics)
SPIR-V 1.0 (under OpenCL 2.1 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 2.1 Full Profile semantics)
SPIR-V 1.0 (under OpenGL 4.0 semantics)
SPIR-V 1.0 (under OpenGL 4.1 semantics)
SPIR-V 1.0 (under OpenGL 4.2 semantics)
SPIR-V 1.0 (under OpenGL 4.3 semantics)
SPIR-V 1.0 (under OpenGL 4.5 semantics)
SPIR-V 1.0 (under Vulkan 1.0 semantics)
SPIR-V 1.1
SPIR-V 1.2
SPIR-V 1.2 (under OpenCL 2.2 Embedded Profile semantics)
SPIR-V 1.2 (under OpenCL 2.2 Full Profile semantics)
SPIR-V 1.3
SPIR-V 1.3 (under Vulkan 1.1 semantics)
SPIR-V 1.3 (under WIP WebGPU semantics)
SPIR-V 1.4
SPIR-V 1.4 (under Vulkan 1.1 semantics)
SPIR-V 1.5
SPIR-V Tools Assembler
SPIR-V Tools Linker
SPIR-V requires location for user input/output
SPIRV-Tools %s (%s:%d): %s
SPIRV-Tools UNKNOWN (%s:%d): %s
SPIRV-Tools Validation Errors
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_gpu_shader_half_float_fetch
SPV_AMD_gpu_shader_int16
SPV_AMD_shader_ballot
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_AMD_shader_trinary_minmax
SPV_AMD_texture_gather_bias_lod
SPV_EXT_demote_to_helper_invocation
SPV_EXT_descriptor_indexing
SPV_EXT_fragment_fully_covered
SPV_EXT_fragment_invocation_density
SPV_EXT_fragment_shader_interlock
SPV_EXT_physical_storage_buffer
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_GOOGLE_decorate_string
SPV_GOOGLE_hlsl_functionality1
SPV_GOOGLE_user_type
SPV_INTEL_device_side_avc_motion_estimation
SPV_INTEL_media_block_io
SPV_INTEL_shader_integer_functions2
SPV_INTEL_subgroups
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_device_group
SPV_KHR_float_controls
SPV_KHR_multiview
SPV_KHR_no_integer_wrap_decoration
SPV_KHR_physical_storage_buffer
SPV_KHR_post_depth_coverage
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_clock
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_vote
SPV_KHR_variable_pointers
SPV_KHR_vulkan_memory_model
SPV_NVX_multiview_per_view_attributes
SPV_NV_compute_shader_derivatives
SPV_NV_cooperative_matrix
SPV_NV_fragment_shader_barycentric
SPV_NV_geometry_shader_passthrough
SPV_NV_mesh_shader
SPV_NV_ray_tracing
SPV_NV_sample_mask_override_coverage
SPV_NV_shader_image_footprint
SPV_NV_shader_sm_builtins
SPV_NV_shader_subgroup_partitioned
SPV_NV_shading_rate
SPV_NV_stereo_view_rendering
SPV_NV_viewport_array2
SPV_VALIDATOR_ignore_type_decl_unique
SPVremapper error: %s
SRC1_ALPHA
SRC1_COLOR
SRC_ALPHA
SRC_ALPHA_SAT
SRC_COLOR
SSE and SSE2 are required.
SSign
STATIC
STRINGLITERAL
STRUCT
SUATAUAVAWH
SUATAUH
SUATAVH
SUATH
SUAUAVAWH
SUAVAWH
SUBGROUPCOHERENT
SUBPASSINPUT
SUBPASSINPUTMS
SUBROUTINE
SUBTRACT
SUB_ASSIGN
SUPERP
SUVATAUAVAWH
SUVAUAVH
SUVAVH
SUVWATAUAVAWH
SUVWATAUAVH
SUVWATAUAWH
SUVWATAVAWH
SUVWATH
SUVWAUH
SUVWAVAWH
SUVWAVH
SUVWAWH
SUVWH
SUWATAUAVAWH
SUWAVAWH
SUWAVH
SVATH
SVAUH
SVAVH
SVAWH
SVM,,
SVM,,,>
SVM,,>
SVM,,S
SVM,>
SVM,>,>
SVM,S
SVM,V2
SVWATAUAVAWH
SVWATAUAVH
SVWATAUAWH
SVWATAVAWH
SVWATAVH
SVWATAWH
SVWAUAVAWH
SVWAUAVH
SVWAVAWH
SVWAVH
SVWAWH
SV_CLIPDISTANCE
SV_COVERAGE
SV_CULLDISTANCE
SV_ClipDistance
SV_ClipDistance0
SV_ClipDistance1
SV_Coverage
SV_DEPTH
SV_DEPTHGREATEREQUAL
SV_DEPTHLESSEQUAL
SV_DISPATCHTHREADID
SV_DOMAINLOCATION
SV_Depth
SV_DomainLocation
SV_GROUPID
SV_GROUPINDEX
SV_GROUPTHREADID
SV_GSINSTANCEID
SV_INSIDETESSFACTOR
SV_INSTANCEID
SV_ISFRONTFACE
SV_InsideTessFactor
SV_InstanceID
SV_IsFrontFace
SV_OUTPUTCONTROLPOINTID
SV_OutputControlPointID
SV_POSITION
SV_PRIMITIVEID
SV_Position
SV_PrimitiveID
SV_RENDERTARGETARRAYINDEX
SV_RenderTargetArrayIndex
SV_SAMPLEINDEX
SV_STENCILREF
SV_SampleIndex
SV_TARGET
SV_TESSFACTOR
SV_TessFactor
SV_VERTEXID
SV_VIEWPORTARRAYINDEX
SV_VertexID
SV_ViewportArrayIndex
SWATAUAVH
SWATAUH
SWATAVH
SWAVAWH
SWAWH
SWITCH
Sample
SampleBias
SampleCmp
SampleCmpLevelZero
SampleGrad
SampleId
SampleInterlockOrderedEXT
SampleInterlockUnorderedEXT
SampleLevel
SampleMask
SampleMaskIn
SampleMaskOverrideCoverageNV
SampleMaskPostDepthCoverage
SamplePosition
SampleRateShading
Sampled Type must be OpTypeVoid in the OpenCL environment.
Sampled must be 0 in the OpenCL environment.
Sampled1D
SampledBuffer
SampledCubeArray
SampledImage
SampledImageArrayDynamicIndexing
SampledImageArrayNonUniformIndexing
SampledImageArrayNonUniformIndexingEXT
SampledRect
Sampler
Sampler1D
Sampler2D
Sampler2DArray
Sampler3D
SamplerComparisonState
SamplerCube
SamplerCubeArray
SamplerState
SamplerState_
SatConvertSToU
SatConvertUToS
SaturatedConversion
Saturday
Scalar Evolution Analysis
Scalar Replacement of Aggregates (DT)
Scalar Replacement of Aggregates (SSAUp)
Scalarize instruction on a non-per-component intrinsic
Scalarize the IR
Scalarizing stores/geps
Scalarizing struct/array ops
Scope ids must be OpConstant when Shader capability is 
Scope ids must be constant or specialization constant when 
SecondaryColor
SecondaryPositionNV
SecondaryViewportMaskNV
SecondaryViewportRelativeNV
See <<BuiltIn,*BuiltIn*>>
See <<Decoration,'Decoration'>>.
See <<Execution_Mode,Execution Mode>>
Select
Selection header 
SelectionMerge
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Separable subscript pairs
September
Sequence
Sequence of components starting with 
SequentiallyConsistent
SequentiallyConsistent memory semantics cannot be used with the VulkanKHR memory model.
SetConsoleTextAttribute
SetEvent
SetFileInformationByHandle
SetFilePointerEx
SetLastError
SetStdHandle
SetThreadpoolTimer
SetThreadpoolWait
SetUnhandledExceptionFilter
SetUserEventStatus
ShH;X
ShH;Y
Shader
Shader contains too many samplers.  Has: %d Maximum: %d
Shader contains too many textures.  Has: %d Maximum: %d
Shader contains too many uniform buffers.  Has: %d Maximum: %d
Shader file version mismatch.  Expected (%d), Got (%d).
Shader variable %s is illegal to use in expression. Only artist-editable variables are usable.
Shader version: 
ShaderClockKHR
ShaderIDColor
ShaderLayer
ShaderNonUniform
ShaderNonUniformEXT
ShaderRecordBufferNV
ShaderSMBuiltinsNV
ShaderStereoViewNV
ShaderViewportIndex
ShaderViewportIndexLayerEXT
ShaderViewportIndexLayerNV
ShaderViewportMaskNV
Shaderc over Glslang
ShadingComplexity
ShadingRateInterlockOrderedEXT
ShadingRateInterlockUnorderedEXT
ShadingRateNV
Shadow
ShiftLeftLogical
ShiftRightArithmetic
ShiftRightLogical
Shifting
ShuffleXor
SignBitSet
SignExtend
Signed
Signed addCarry
Signed subBorrow
SignedChar
SignedInt16
SignedInt32
SignedInt8
SignedZeroInfNanPreserve
Simple
Simplify the CFG
Sink common instructions down to the end block
Size operand <id> '
SizeOf
SleepConditionVariableCS
SleepConditionVariableSRW
Slider
SlopeScaleDepthBias
SmoothStep
SnormInt16
SnormInt8
SoA in middle end: 
Source
Source entry point must be "main"
Source memory access must not include MakePointerAvailableKHR
Source operand <id> '
SourceContinued
SourceExtension
SpHcU
SpN#E
SpacingEqual
SpacingFractionalEven
SpacingFractionalOdd
Sparse Conditional Constant Propagation
SparseResidency
SpecConstant
SpecConstantComposite
SpecConstantFalse
SpecConstantOp
SpecConstantTrue
SpecId
Specialization constant must be an integer or floating-point number.
Specialization constant operation 
SpvOpCooperativeMatrixLoadNV
SpvOpCooperativeMatrixLoadNV Result Type <id> '
SpvOpCooperativeMatrixStoreNV
SpvOpCooperativeMatrixStoreNV Object type <id> '
SrcBlend
SrcBlendAlpha
SrgbGammaToLinear
SrgbLinearToGamma
SrgbWriteEnable0
SrgbWriteEnable1
SrgbWriteEnable2
SrgbWriteEnable3
Stack now
Stack size increased to %lu
StackValue
Starting parse
Static combo %s referenced in expression doesn't exist.
StencilDepthFailOp
StencilEnable
StencilExportEXT
StencilFailOp
StencilFunc
StencilPassOp
StencilReadMask
StencilRef
StencilRefReplacingEXT
StencilWriteMask
Storage Buffer
Storage buffer id '
Storage class cannot be Generic in OpenCL 1.2 environment
Storage class in OpTypeForwardPointer does not match the 
Storage class semantics must not be zero
Storage qualifiers must match:
StorageBuffer
StorageBuffer OpVariable <id> '
StorageBuffer id '
StorageBuffer or Uniform.
StorageBuffer pointer operand 
StorageBuffer, Uniform, or UniformConstant.
StorageBuffer16BitAccess
StorageBuffer8BitAccess
StorageBufferArrayDynamicIndexing
StorageBufferArrayNonUniformIndexing
StorageBufferArrayNonUniformIndexingEXT
StorageClass
StorageImageArrayDynamicIndexing
StorageImageArrayNonUniformIndexing
StorageImageArrayNonUniformIndexingEXT
StorageImageExtendedFormats
StorageImageMultisample
StorageImageReadWithoutFormat
StorageImageWriteWithoutFormat
StorageInputOutput16
StoragePushConstant16
StoragePushConstant8
StorageTexelBufferArrayDynamicIndexing
StorageTexelBufferArrayDynamicIndexingEXT
StorageTexelBufferArrayNonUniformIndexing
StorageTexelBufferArrayNonUniformIndexingEXT
StorageUniform16
StorageUniformBufferBlock16
Store
Store cooperative matrix
Store2
Store3
Store4
Stream
Stride operand <id> '
String
Strip Unused Function Prototypes
Strong SIV applications
Strong SIV independence
Strong SIV successes
Structure
Structure <id> 
Structure Nesting Depth may not be larger than 
Structure id 
Structure members may not be self references
StructuredBuffer
Structures cannot contain a void type.
SubGroupEqMask
SubGroupGeMask
SubGroupGtMask
SubGroupInvocation
SubGroupLeMask
SubGroupLtMask
SubGroupSize
Subgroup
SubgroupAllEqualKHR
SubgroupAllKHR
SubgroupAnyKHR
SubgroupAvcBmeInitializeINTEL
SubgroupAvcFmeInitializeINTEL
SubgroupAvcImeAdjustRefOffsetINTEL
SubgroupAvcImeConvertToMcePayloadINTEL
SubgroupAvcImeConvertToMceResultINTEL
SubgroupAvcImeEvaluateWithDualReferenceINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL
SubgroupAvcImeGetBorderReachedINTEL
SubgroupAvcImeGetDualReferenceStreaminINTEL
SubgroupAvcImeGetSingleReferenceStreaminINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetTruncatedSearchIndicationINTEL
SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL
SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL
SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL
SubgroupAvcImeInitializeINTEL
SubgroupAvcImeRefWindowSizeINTEL
SubgroupAvcImeSetDualReferenceINTEL
SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL
SubgroupAvcImeSetMaxMotionVectorCountINTEL
SubgroupAvcImeSetSingleReferenceINTEL
SubgroupAvcImeSetUnidirectionalMixDisableINTEL
SubgroupAvcImeSetWeightedSadINTEL
SubgroupAvcImeStripDualReferenceStreamoutINTEL
SubgroupAvcImeStripSingleReferenceStreamoutINTEL
SubgroupAvcMceConvertToImePayloadINTEL
SubgroupAvcMceConvertToImeResultINTEL
SubgroupAvcMceConvertToRefPayloadINTEL
SubgroupAvcMceConvertToRefResultINTEL
SubgroupAvcMceConvertToSicPayloadINTEL
SubgroupAvcMceConvertToSicResultINTEL
SubgroupAvcMceGetBestInterDistortionsINTEL
SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL
SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL
SubgroupAvcMceGetDefaultInterShapePenaltyINTEL
SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL
SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL
SubgroupAvcMceGetInterDirectionsINTEL
SubgroupAvcMceGetInterDistortionsINTEL
SubgroupAvcMceGetInterMajorShapeINTEL
SubgroupAvcMceGetInterMinorShapeINTEL
SubgroupAvcMceGetInterMotionVectorCountINTEL
SubgroupAvcMceGetInterReferenceIdsINTEL
SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceGetMotionVectorsINTEL
SubgroupAvcMceSetAcOnlyHaarINTEL
SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceSetInterDirectionPenaltyINTEL
SubgroupAvcMceSetInterShapePenaltyINTEL
SubgroupAvcMceSetMotionVectorCostFunctionINTEL
SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL
SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL
SubgroupAvcMotionEstimationChromaINTEL
SubgroupAvcMotionEstimationINTEL
SubgroupAvcMotionEstimationIntraINTEL
SubgroupAvcRefConvertToMcePayloadINTEL
SubgroupAvcRefConvertToMceResultINTEL
SubgroupAvcRefEvaluateWithDualReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcRefEvaluateWithSingleReferenceINTEL
SubgroupAvcRefSetBidirectionalMixDisableINTEL
SubgroupAvcRefSetBilinearFilterEnableINTEL
SubgroupAvcSicConfigureIpeLumaChromaINTEL
SubgroupAvcSicConfigureIpeLumaINTEL
SubgroupAvcSicConfigureSkcINTEL
SubgroupAvcSicConvertToMcePayloadINTEL
SubgroupAvcSicConvertToMceResultINTEL
SubgroupAvcSicEvaluateIpeINTEL
SubgroupAvcSicEvaluateWithDualReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcSicEvaluateWithSingleReferenceINTEL
SubgroupAvcSicGetBestIpeChromaDistortionINTEL
SubgroupAvcSicGetBestIpeLumaDistortionINTEL
SubgroupAvcSicGetInterRawSadsINTEL
SubgroupAvcSicGetIpeChromaModeINTEL
SubgroupAvcSicGetIpeLumaShapeINTEL
SubgroupAvcSicGetMotionVectorMaskINTEL
SubgroupAvcSicGetPackedIpeLumaModesINTEL
SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL
SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL
SubgroupAvcSicInitializeINTEL
SubgroupAvcSicSetBilinearFilterEnableINTEL
SubgroupAvcSicSetBlockBasedRawSkipSadINTEL
SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaShapePenaltyINTEL
SubgroupAvcSicSetSkcForwardTransformEnableINTEL
SubgroupBallotKHR
SubgroupBlockReadINTEL
SubgroupBlockWriteINTEL
SubgroupBufferBlockIOINTEL
SubgroupDispatch
SubgroupEqMask
SubgroupEqMaskKHR
SubgroupFirstInvocationKHR
SubgroupGeMask
SubgroupGeMaskKHR
SubgroupGtMask
SubgroupGtMaskKHR
SubgroupID
SubgroupId
SubgroupImageBlockIOINTEL
SubgroupImageBlockReadINTEL
SubgroupImageBlockWriteINTEL
SubgroupImageMediaBlockIOINTEL
SubgroupImageMediaBlockReadINTEL
SubgroupImageMediaBlockWriteINTEL
SubgroupInvocationID
SubgroupLeMask
SubgroupLeMaskKHR
SubgroupLocalInvocationId
SubgroupLtMask
SubgroupLtMaskKHR
SubgroupMaxSize
SubgroupMemory
SubgroupReadInvocationKHR
SubgroupShuffleDownINTEL
SubgroupShuffleINTEL
SubgroupShuffleUpINTEL
SubgroupShuffleXorINTEL
SubgroupSize
SubgroupVoteKHR
SubgroupsPerWorkgroup
SubgroupsPerWorkgroupId
SubmitThreadpoolWork
SubpassData
SubpassInput
SubpassInputMS
SubpassLoad
Such variables must be identified with a Block decoration
Such variables must be identified with a Block or BufferBlock decoration
Such variables must be typed as OpTypeStruct, 
Sunday
Switch
Swizzle operation only supports up to four channels.
SwizzleInvocationsAMD
SwizzleInvocationsMaskedAMD
Symbolic RDIV applications
Symbolic RDIV independence
T$ A;
T$ E3
T$ H+
T$ H9
T$ H;
T$ H;L$pr'A
T$ H;T$(
T$ Hc
T$ I+
T$ I;
T$ L+
T$(9T$,
T$(D9e
T$(E3
T$(H+
T$(H;
T$(Hc
T$(Lc
T$,u$
T$0;\$P
T$0A;
T$0E2
T$0E3
T$0H#
T$0H+
T$0H9
T$0H9T$8u'
T$0H9~
T$0H;
T$0H;Q
T$0H;T$8t
T$0H;t$8
T$0Hc
T$0I;
T$0Ic
T$0L+
T$0L;
T$0M;
T$0f	K
T$4;T$<
T$4A;U
T$4H;
T$4HcD$XH
T$8+G$A
T$8+G$H
T$8A+
T$8A;
T$8E3
T$8E;
T$8H+
T$8H+T$0H
T$8H9D$Pu!
T$8H9T$0
T$8H;
T$8H;|$Xu
T$8I;
T$8L;
T$8f+
T$<9T$@
T$<D;
T$@+G$A
T$@A;
T$@E3
T$@H+
T$@H+T$8
T$@H9
T$@H9D$`
T$@H;
T$@Hc
T$@I;
T$@L;
T$@fD
T$HA;
T$HD;
T$HE3
T$HH;
T$PA;
T$PD;l$@
T$PE3
T$PH+
T$PH3
T$PH;
T$PH;T$`
T$TA;
T$XE3
T$XH+
T$XH;
T$XH;T$`u
T$XI+
T$XL;
T$`E3
T$`H+
T$`H;
T$`H;J
T$`I;
T$`Ic
T$`L;
T$`fA
T$dLc
T$hE3
T$hH+
T$hH9M
T$hH;
T$hH;T$p
T$hL+
T$hM;
T$hfD
T$i;]pu
T$pA;
T$pE2
T$pE3
T$pH+
T$pH;
T$xE3
T$xH+
T$xH+A
T$xH;
T$xL+
T$xL9
TANGENT
TEXCOORD
TEXTURE1D
TEXTURE1DARRAY
TEXTURE2D
TEXTURE2DARRAY
TEXTURE2DMS
TEXTURE2DMSARRAY
TEXTURE2DRECT
TEXTURE3D
TEXTUREBUFFER
TEXTURECUBE
TEXTURECUBEARRAY
TILDE
TRILINEAR
TUUUU
TUUUUUU
TYPE_NAME
Target <id> '
Target Information
Target Library Information
Target memory access must not include MakePointerVisibleKHR
Target of Component decoration is invalid: must point to a Storage Class of Input(1) or Output(3). Found Storage Class 
Target of Component decoration must be a memory object declaration (a variable or a function parameter)
Target of NonWritable decoration is invalid: must point to a storage image, uniform block, 
Target of NonWritable decoration must be a memory object declaration (a variable or a function parameter)
Target operand <id> '
Target version for SPIRV-Tools validator
TaskCountNV
TaskNV
TerminateProcess
TerminateRayNV
TessCoord
TessLevelInner
TessLevelOuter
Tessellation
Tessellation execution model entry points can specify at most one of SpacingEqual, SpacingFractionalOdd or SpacingFractionalEven execution modes.
Tessellation execution model entry points can specify at most one of Triangles, Quads or Isolines execution modes.
Tessellation execution model entry points can specify at most one of VertexOrderCw or VertexOrderCcw execution modes.
TessellationControl
TessellationEvaluation
TessellationPointSize
TessellationState_PatchSize
Test condition and select
TexCoord
Texture
Texture intrinsic: 
Texture query intrinsic
Texture template struct return slots exceeded
Texture template structure members must same basic type
Texture1D
Texture1DArray
Texture2D
Texture2DArray
Texture2DMS
Texture2DMSArray
Texture3D
Texture3DArray
TextureBuffer
TextureCube
TextureCubeArray
TextureDim
TextureDimLog2
TextureSheetData
TextureSize
Texturing in Bottom IR: 
The 'False Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The 'True Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The <id> passed to 
The Base <id> '
The Component Type of Vector 1 must be the same as ResultType.
The Component Type of Vector 2 must be the same as ResultType.
The LinkageAttributes Decoration (Linkage name: 
The Object type (Op
The Result Type must be the same as Composite type in Op
The Result Type of 
The Result Type of OpVectorShuffle must be
The Signedness in OpTypeInt must always be 0 when Kernel capability is used.
The Struture's last member in 
The Struture's type in 
The array member in 
The cut-off point for automatic loop unrolling
The following extension must be enabled to use this feature:
The following forward referenced IDs have not been defined:
The high-order bits of a literal number in instruction <id> 
The name of the opaque type.
The number of indexes in 
The number of indexes in Op
The result pointer storage class and base pointer storage class in 
The type in 
The type of Vector 1 must be OpTypeVector.
The type of Vector 2 must be OpTypeVector.
The types of Operand 1 and Operand 2 must match
There must be at most one object per Storage Class that can contain a structure type containing members decorated with BuiltIn, consumed per entry-point. Entry Point id 
There must be no more than one push constant block 
These variables must have DescriptorSet and Binding decorations specified
Threshold for inlining functions with inline hint
Thursday
Time each pass, printing elapsed time for each on exit
TimeAMD
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
Too few args in Macro
Too manu uniform blocks in shader.  Max (%d), Active (%d).
Too many OpFunctionParameters for 
Too many args in macro
Too many components in texture template structure type
Too many links
Too many open files
Too many open files in system
Total
TraceNV
TransformFeedback
Transpose
Treat error-reporting calls as cold
TriangleStream
Triangles
Trunc
Try to delinearize array references.
TryAcquireSRWLockExclusive
Tuesday
Two passes with the same argument (-
Type Id 
Type-Based Alias Analysis
TypeAccelerationStructureNV
TypeArray
TypeAvcImeDualReferenceStreaminINTEL
TypeAvcImePayloadINTEL
TypeAvcImeResultDualReferenceStreamoutINTEL
TypeAvcImeResultINTEL
TypeAvcImeResultSingleReferenceStreamoutINTEL
TypeAvcImeSingleReferenceStreaminINTEL
TypeAvcMcePayloadINTEL
TypeAvcMceResultINTEL
TypeAvcRefPayloadINTEL
TypeAvcRefResultINTEL
TypeAvcSicPayloadINTEL
TypeAvcSicResultINTEL
TypeBool
TypeCooperativeMatrixNV
TypeDeviceEvent
TypeEvent
TypeFloat
TypeForwardPointer
TypeFunction
TypeImage
TypeInt
TypeMatrix
TypeNamedBarrier
TypeOpaque
TypePipe
TypePipeStorage
TypePointer
TypeQueue
TypeReserveId
TypeRuntimeArray
TypeSampledImage
TypeSampler
TypeStruct
TypeVector
TypeVmeImageINTEL
TypeVoid
Types must match:
U16VEC2
U16VEC3
U16VEC4
U32VEC2
U32VEC3
U32VEC4
U64VEC2
U64VEC3
U64VEC4
U8H+U0H
U8H;A
U8L98
U8VEC2
U8VEC3
U8VEC4
U@H#P
UA>N0Wl
UATAUAVAWH
UATAUAVH
UATAWH
UAUAVAWH
UAUAVH
UAUAWH
UAVAWH
UAddSatINTEL
UAverageINTEL
UAverageRoundedINTEL
UCOOPMATNV
UClamp
UConvert
UCountLeadingZerosINTEL
UCountTrailingZerosINTEL
UGreaterThan
UGreaterThanEqual
UHA;VD
UI,,,
UIMAGE1D
UIMAGE1DARRAY
UIMAGE2D
UIMAGE2DARRAY
UIMAGE2DMS
UIMAGE2DMSARRAY
UIMAGE2DRECT
UIMAGE3D
UIMAGEBUFFER
UIMAGECUBE
UIMAGECUBEARRAY
UINT16CONSTANT
UINT16_T
UINT32CONSTANT
UINT32_T
UINT64CONSTANT
UINT64_T
UINT8_T
UINTCONSTANT
ULessThan
ULessThanEqual
UMax3AMD
UMid3AMD
UMin3AMD
UMul32x16INTEL
UMulExtended
UNICODE_ESC
UNIFORM
UNIMPLEMENTED: 
UNKNOWN
UNKNOWN ERROR: 
UNKNOWN_DIMENSION
UNKNOWN_SAMPLER
UNKNOWN_TYPE
UNSUPPORTED
USAGE: 
USAMPLER1D
USAMPLER1DARRAY
USAMPLER2D
USAMPLER2DARRAY
USAMPLER2DMS
USAMPLER2DMSARRAY
USAMPLER2DRECT
USAMPLER3D
USAMPLERBUFFER
USAMPLERCUBE
USAMPLERCUBEARRAY
USATAUH
USATAVH
USAUAVH
USAUAVI
USAUH
USAVI
USAWH
USER_CONFIG
USUBPASSINPUT
USUBPASSINPUTMS
USVATAUAVAWH
USVATAUAWH
USVATAVAWI
USVAUAWH
USVAUAWI
USVAUH
USVAVH
USVAWH
USVWATAUAVAWH
USVWATAUAVH
USVWATAUAWH
USVWATAUH
USVWATAVAWH
USVWATAWH
USVWAUAVAWH
USVWAUAVH
USVWAUH
USVWAVAWH
USVWAVH
USVWAVI
USVWH
USWATAUAVH
USWATAUAWH
USWATH
USWATI
USWAUH
USWAUI
USWAVAWH
USWAVH
USubSatINTEL
UTEXTURE1D
UTEXTURE1DARRAY
UTEXTURE2D
UTEXTURE2DARRAY
UTEXTURE2DMS
UTEXTURE2DMSARRAY
UTEXTURE2DRECT
UTEXTURE3D
UTEXTUREBUFFER
UTEXTURECUBE
UTEXTURECUBEARRAY
UUUUD+
UUUUU
UUUUUU
UUUUUUU
UUUUUUUUH
UUUUUUUUI
UVATAUAVH
UVATAUH
UVATAVAWH
UVAUAVAWH
UVAUAVH
UVAVH
UVAWH
UVEC2
UVEC3
UVEC4
UVLX8888
UVWATAUAVAW
UVWATAUAVAWH
UVWATAUAWH
UVWATAUH
UVWATAVH
UVWAUAVH
UVWAUAWH
UVWAUH
UVWAVAWH
UVWAVH
UVWQ8888
UWATAUAVH
UWATAUAWH
UWATAVAWH
UWATH
UWAUAVAWH
UWAUAVH
UWAUAWH
UWAUH
UWAVAWH
UWAVH
UWAWH
Unable to determine source language
Unable to parse built-ins
Unable to translate Geometry Shader input primitive type '%s'
Unable to translate Geometry Shader output primitive type '%s'
Undef
Unexpected character
Unexpected node
Unexpected token
Unhandled inst type (opcode: %d) found outside function definition.
Unhandled intrinsic: 
Unhandled tex op: 
UnhandledExceptionFilter
Uniform
Uniform OpVariable <id> '
Uniform and shader storage block variables must 
Uniform id '
UniformAndStorageBuffer16BitAccess
UniformAndStorageBuffer8BitAccess
UniformBufferArrayDynamicIndexing
UniformBufferArrayNonUniformIndexing
UniformBufferArrayNonUniformIndexingEXT
UniformConstant
UniformConstant OpVariable <id> '
UniformConstant id '
UniformId
UniformMemory
UniformTexelBufferArrayDynamicIndexing
UniformTexelBufferArrayDynamicIndexingEXT
UniformTexelBufferArrayNonUniformIndexing
UniformTexelBufferArrayNonUniformIndexingEXT
Unimplemented
Unimplemented: structure template type in subpass input
Union
Universal
Unknown
Unknown EVariableQualifier
Unknown ExtInst
Unknown Stage.
Unknown constant
Unknown error
Unknown exception
Unknown glslang keyword
Unknown type to take reciprocal of: 
Unknown variable name %s.
Unnamed pass: implement Pass::getPassName()
Unordered
UnormInt101010
UnormInt101010_2
UnormInt16
UnormInt24
UnormInt8
UnormShort555
UnormShort565
UnpackDouble2x32
UnpackHalf2x16
UnpackSnorm2x16
UnpackSnorm4x8
UnpackUnorm2x16
UnpackUnorm4x8
Unpredictable backedge-taken count. 
Unpredictable max backedge-taken count. 
Unreachable
Unroll
Unroll and DontUnroll loop controls must not both be specified
Unroll loops
Unroll loops with run-time trip counts
Unsigned
UnsignedChar
UnsignedInt16
UnsignedInt32
UnsignedInt8
Unspecified
Unsupported annotation data type
Unsupported render state type
Untyped
Use of device scope with VulkanKHR memory model requires the 
Use this unroll count for all loops, for testing purposes
UserSemantic
UserTypeGOOGLE
Using BuiltIn 
Using a 16-bit floating point 
Using a 16-bit integer type requires the Int16 capability, or an extension that explicitly enables 16-bit integers.
Using a 64-bit floating point 
Using a 64-bit integer type requires the Int64 capability.
Using an 8-bit integer type requires the Int8 capability, or an extension that explicitly enables 8-bit integers.
Using pointers with OpPhi requires capability 
Using pointers with OpSelect requires capability 
UxH;X
V A9z`u
V H+V
V,V,S
V2,,,
V2,V4
V3,,,
V3,S,>V3,>S,
V3,V4
V4,S,>V4,>V2,
V4,V2,>V4,>V2,
V4,V3
V4,V3,,
V6E>`"(5
V8H+V0H
V8H;A
V<nu	
V@;P@
V@H#V@
V@H3V@
VARYING
VATAUAVAWH
VATAUAVH
VATAUAWH
VATAUH
VAUAVH
VAUAWH
VAVAWH
VCRT_isdigit
VCRT_isprint
VCRT_toupper
VD$Pf
VECTOR_TYPE
VERTICAL_BAR
VFACE
VFXGL: D3D shader preprocessor DLL not initialized properly. Can't compile shader.
VFXGL: OpenGL missing required entrypoints. Can't GetActiveUniforms.
VFXGL: OpenGL missing required entrypoints. Can't compile shader.
VFX_DLL_001
VFX_PROGRAM_MAX
VFileSystem017
VHH;WHt.I
VKD3D Shader Compiler
VOLATILE
VS_INPUT
VT$PD
VULKAN
VUUUA
VUUUH
VWATAUAVH
VWATAUAWH
VWATAUH
VWATAVAW
VWATAVAWH
VWAUAVAWH
VWAUH
VWAVH
VWAWH
V_Get_stderr
V_IsAbsolutePath
V_atof
V_atofloat32
V_atoi
V_cosf
V_exp2f
V_expf
V_fprintf
V_log10f
V_log2f
V_logf
V_powf
V_sinf
V_snprintf
V_sscanf
V_stricmp_fast
V_strnlen
V_strspn
V_strtod
V_strtoi64
V_strtoui64
V_vsnprintf
V_vsnprintfSize
V_vsnprintfWarnTrunc
Validation failed after pass 
Value Propagation
Value Unknown
Valve
Valve0
Valve1
Variable
Variable %s with variable source TextureDim is referencing unknown texture %s
Variable declarations that include initializers must have 
VariablePointers
VariablePointers or VariablePointersStorageBuffer
VariablePointersStorageBuffer
Variables can not have a function[7] storage class outside of a function
Variables identified with the StorageBuffer storage class are used to access transparent buffer backed resources. Such variables must be typed as OpTypeStruct, or an array of this type
Variables identified with the Uniform storage class are 
Variables identified with the UniformConstant storage class 
Variables must have a function[7] storage class inside of a function
Variably referenced vector components
VecTypeHint
Vector access is out of bounds, vector size is 
Vector shuffle with all don't-care values
Vector16
VectorExtractDynamic
VectorInsertDynamic
VectorShuffle
VectorText
VectorTimesMatrix
VectorTimesScalar
Verify ScalarEvolution's backedge taken counts (slow)
Verify dominator info (time consuming)
Verify if there is a pass dependency cycle.
Verify loop info (time consuming)
Verify the ScalarEvolution result after running indvars
Version
Vertex
Vertex Shader
VertexFragment
VertexId
VertexIndex
VertexOrderCcw
VertexOrderCw
VertexShader
VfA9y
Vfx Error: attribute type does not exist or does not support attribute literals.
Vfx Error: attribute unsupported or requires a parameter binding.
VfxParseAndCompileExpression(366): : Failed to create input stream from "%s"
VfxParseAndCompileExpression(374): : Failed to create lexer from "%s"
VfxParseAndCompileExpression(382): : Failed to create token stream from "%s"
VfxParseAndCompileExpression(390): : Failed to create parser from "%s"
VhH;q
ViewIndex
Viewport
ViewportIndex
ViewportMaskNV
ViewportMaskPerViewNV
ViewportRelativeNV
VmeImageINTEL
Volatile
Volatile mask setting must match for Equal and Unequal memory semantics
VolatileTexel
VolatileTexelKHR
VolatileType
Vulkan
Vulkan spec allows BuiltIn 
Vulkan spec allows BuiltIn HelperInvocation to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn HelperInvocation to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn InstanceId to be used only with IntersectionNV, ClosestHitNV and AnyHitNV execution models. 
Vulkan spec allows BuiltIn InvocationId to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn InvocationId to be used only with TessellationControl or Geometry execution models. 
Vulkan spec allows BuiltIn PatchVertices to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn PatchVertices to be used only with TessellationControl or TessellationEvaluation execution models. 
Vulkan spec allows BuiltIn PointCoord to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn PointCoord to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn PointSize to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn PointSize to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn Position to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn Position to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn PrimitiveId to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn PrimitiveId to be used only with Fragment, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn SampleId to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn SampleId to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn SampleMask to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn SampleMask to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn SamplePosition to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn SamplePosition to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn TessCoord to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn TessCoord to be used only with TessellationEvaluation execution model. 
Vulkan spec disallows OpAtomicLoad with Memory Semantics Release, AcquireRelease and SequentiallyConsistent
Vulkan spec disallows OpAtomicStore with Memory Semantics Acquire, AcquireRelease and SequentiallyConsistent
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Input storage class if execution model is Vertex, TessellationEvaluation, or Geometry.
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn PointSize to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationControl.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationEvaluation.
Vulkan spec doesn't allow BuiltIn VertexId/InstanceId to be used.
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Input storage class if execution model is TessellationControl.
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Output storage class if execution model is TessellationEvaluation.
Vulkan spec requires BuiltIn WorkgroupSize to be a constant. 
VulkanKHR
VulkanMemoryModel
VulkanMemoryModelDeviceScope
VulkanMemoryModelDeviceScopeKHR
VulkanMemoryModelDeviceScopeKHR capability
VulkanMemoryModelKHR
VulkanMemoryModelKHR capability must only be specified if the VulkanKHR memory model is used.
W D9:
W H92
W(H+W H
W(fff
W3C WebGPU Group
W3C WebGPU Group WHLSL Shader Translator
W8H;A
W8I;~Ht
W8L;y
WARNING
WARNING: 
WARNING: AST will form illegal SPIR-V; need to transform to legalize
WATAUAVAWH
WATAUAVH
WATAWH
WAUAWH
WAVAWH
WD8l$@t
WD9t$@t
WHILE
WHLSL Shader Translator
WIREFRAME
WORKGROUPCOHERENT
WRITEONLY
WaNd?
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
WaitKernel
WaitWorkGroup
Wak>E
WakeAllConditionVariable
WakeConditionVariable
Warning
Warning, (version, profile) forced to be (
WarpIDNV
WarpsPerSMNV
WaveActiveAllEqual
WaveActiveAllEqualBool
WaveActiveAllTrue
WaveActiveAnyTrue
WaveActiveBallot
WaveActiveBitAnd
WaveActiveBitOr
WaveActiveBitXor
WaveActiveCountBits
WaveActiveMax
WaveActiveMin
WaveActiveProduct
WaveActiveSum
WaveGetLaneCount
WaveGetLaneIndex
WaveIsFirstLane
WavePrefixCountBits
WavePrefixProduct
WavePrefixSum
WaveReadLaneAt
WaveReadLaneFirst
Weak-Crossing SIV applications
Weak-Crossing SIV independence
Weak-Crossing SIV successes
Weak-Zero SIV applications
Weak-Zero SIV independence
Weak-Zero SIV successes
WebGPU
WebGPU does not allow BuiltIn 
WebGPU requires SPIR-V to be little endian.
WebGPU spec allows BuiltIn LocalInvocationIndex to be only used for variables with Input storage class. 
WebGPU spec allows BuiltIn Position to be only used for variables with Output storage class. 
WebGPU spec allows BuiltIn Position to be used only with the Vertex execution model. 
WebGPU spec allows BuiltIn VertexIndex to be used only with GLCompute execution model. 
Wednesday
WhH;A
When BuiltIn decoration is applied to a structure-type member, 
WideCharToMultiByte
Wine VKD3D Shader Compiler
WorkDim
WorkGroupID
WorkGroupSize
Workgroup
Workgroup and Subgroup
Workgroup for OpControlBarrier
Workgroup for OpMemoryBarrier
Workgroup storage class pointer requires VariablePointers capability to be specified
Workgroup, CrossWorkgroup, Generic, Image or StorageBuffer 
Workgroup, Invocation, and QueueFamilyKHR
WorkgroupId
WorkgroupMemory
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
WorkgroupSize
WorldRayDirectionNV
WorldRayOriginNV
WorldToObjectNV
WriteConsoleW
WriteFile
WriteInvocationAMD
WriteOnly
WritePackedPrimitiveIndices4x8NV
WritePipe
Wrong number of items in value for annotation %s. Ignoring annotation.
Wu4E3
X!t5~
X(H;X t
X-LEGEND
X-LEGEND Mesa-IR/SPIR-V Translator
X360_DST16
X360_DST24
X360_DST24F
XA^A]
XA^A]A\[
XA^_^[
XA_A]
XA_A^A\]
XA_A^A\_^[
XA_A^A]A\_^][
XA_A^_^[]
XDA9^@
XE9~(tRH
XHI9L$
XOR_ASSIGN
XOR_OP
X_^][
Xderef
XfbBuffer
XfbStride
Y0;Z0
Y0H;Y8t
Y>kX>
Y>kX>M
YD$@f
YL$`H
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYYYZZZZ,,,
Z H+Z
Z>w_F
ZHH9A
ZIV applications
ZIV independence
Z\>z8
ZeroExtend
Zod(^?
ZwMHc
[ H;M
[ WAVAWH
[(H;E
[*ncd>0
[*ncd>TQ
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0fff
[1;30m
[@H;\$8
[@H;\$@
[@H;\$P
[@fff
[HH9A
[Index: 
[[disable_array_flattening]] Texture2D %s[ %d ] : layout( set = %d, binding = %d );
[aOni*{
[gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
\$ 9Y
\$ ATAVAWH
\$ AVH
\$ A^_]
\$ E3
\$ H+
\$ H9F
\$ H;
\$ H;\$0
\$ Hc
\$ I;
\$ L+
\$ L9
\$ Lc
\$ Lk
\$ M;
\$ UATAVH
\$ UATAWH
\$ UAVAWH
\$ UH
\$ UVATAUAV
\$ UVATH
\$ UVAVH
\$ UVAWH
\$ UVWATAUAVAWH
\$ UVWATAUH
\$ UVWATAVH
\$ UVWATAWH
\$ UVWAUAVH
\$ UVWAUAWH
\$ UVWAVAWH
\$ UVWH
\$ UWATAVAWH
\$ UWAVH
\$ UWAWH
\$ VA
\$ VATAWH
\$ VAVAWH
\$ VH
\$ VWATAVAWH
\$ VWAVH
\$ VWAWH
\$ WATAVH
\$ WH
\$ ff
\$ uVH
\$$@2
\$(E3
\$(E;
\$(H+
\$(H9FPw
\$(H;
\$(Hc
\$(I;
\$(L;
\$(L;s
\$(M;
\$0@2
\$0D;
\$0E2
\$0E3
\$0E;
\$0H+
\$0H9
\$0H94
\$0H;
\$0H;\$8@
\$0H;]
\$0Hc
\$0HcH
\$0Hk
\$0I+
\$0Mc
\$0^]
\$0ff
\$0t	H
\$0u!H
\$0u]
\$4H+
\$4Hc
\$4I9H
\$8<.u#I9_
\$8A+
\$8A;
\$8D:
\$8E3
\$8H+
\$8H+\$0H
\$8H9
\$8H;
\$8Hc
\$8I+
\$8I;
\$8L9l$@
\$8fA9X
\$8fD
\$8ff
\$8fff
\$8t A
\$<A;
\$@$_
\$@;]
\$@@2
\$@@8=9
\$@@8o,t
\$@D;
\$@E3
\$@H+
\$@H9FPt
\$@H;
\$@H;D$`r
\$@H;\$H
\$@Hc
\$@I+
\$@I9G
\$@L+
\$@f+
\$@f;
\$@uRH
\$@v	H
\$@v*3
\$DH;
\$DI;
\$HE3
\$HH+
\$HH;
\$HI;
\$Ht7H
\$HuqH
\$P@8~	t1
\$PE2
\$PE3
\$PE9w
\$PH+
\$PH;
\$PH;F
\$PH;\$Xu
\$PHc
\$PI9
\$PI;
\$PL+
\$PL;
\$Pff
\$Pfff
\$P~)H
\$Qfff
\$XA;
\$XE;
\$XH+
\$XfD
\$XtQH
\$YD8e
\$`8Y
\$`;]Pt
\$`E3
\$`H+
\$`H;
\$`I;
\$`Ic
\$`L+
\$`u$H
\$gm?
\$h;\$4
\$h;\$p
\$hA;
\$hD;
\$hH9G
\$hH;
\$hH;]
\$hI+
\$hfA
\$pE3
\$pH+
\$pH9K
\$pH;
\$pI9
\$pI;
\$pff
\$xE3
\$xH+
\$xH;y
\$xM+
\$xr$I
\$|D;m
\>$hkDh$h>
\ffff
\src\shaders\
] H;]`t H
](H9O
])6M>&
]-?Z8
]>)2X
]HcL$4I
]hD97w	L9
]o;]w
]xD;t$8
^ Hc;;{
^8H;}
^8U)zj
^<V7w
^>&qN
^@H;Y
^@I;]
^DtTI
^HH9J@u,
^PI;^X
^RfN>
^\s*layout\s*\(\s*binding\s*=\s*[0-9]+\s*\)\s*uniform\s+sampler
^\s*uniform\s+sampler
^^^^^
^`I;^`t
^fD9+t
_(H;O t
_0H;_8
_8H9k
_8H;L$Hu
_AssociatedSampler
_BoundTexture%d
_BoundTextureSrgb%d
_Globals_
_IO_getc
_IO_putc
_PH;t$8
_SrgbRead
_UvScaleVar
_V_strcspn
_V_strncat
_V_strncmp
_V_strncpy
_V_strnicmp_fast
_X360InstanceCount
_X360TileOffset
_XH;_Xt
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdlPv
_ZdlPvRKSt9nothrow_t
_Znaj
_ZnajRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
__Attribute__
__BI_
__BI_Append
__BI_CalculateLevelOfDetail
__BI_CalculateLevelOfDetailUnclamped
__BI_Consume
__BI_DecrementCounter
__BI_Gather
__BI_GatherAlpha
__BI_GatherBlue
__BI_GatherCmp
__BI_GatherCmpAlpha
__BI_GatherCmpBlue
__BI_GatherCmpGreen
__BI_GatherCmpRed
__BI_GatherGreen
__BI_GatherRed
__BI_GetDimensions
__BI_GetSamplePosition
__BI_IncrementCounter
__BI_InterlockedAdd
__BI_InterlockedAnd
__BI_InterlockedCompareExchange
__BI_InterlockedCompareStore
__BI_InterlockedExchange
__BI_InterlockedMax
__BI_InterlockedMin
__BI_InterlockedOr
__BI_InterlockedXor
__BI_Load
__BI_Load2
__BI_Load3
__BI_Load4
__BI_RestartStrip
__BI_Sample
__BI_SampleBias
__BI_SampleCmp
__BI_SampleCmpLevelZero
__BI_SampleGrad
__BI_SampleLevel
__BI_Store
__BI_Store2
__BI_Store3
__BI_Store4
__BI_SubpassLoad
__BI_SubpassLoadMS
__Expression__
__FILE__
__FeatureToBool__
__FeatureToFloat__
__FeatureToInt__
__LINE__
__RenderStateLiteral__
__SetByArtistAndExpression__
__SetByArtist__
__VERSION__
__based(
__cdecl
__clrcall
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__eabi
__explicitInterpAMD
__fastcall
__gnat_eh_personality
__gxx_personality_v0
__isoc99_scanf
__isoc99_sscanf
__memcpy_chk
__memmove_chk
__memset_chk
__objc_personality_v0
__pascal
__ptr64
__restrict
__samplerExternal2DY2YEXT
__sincospi_stret
__sincospi_stretf
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stdcall
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
__thiscall
__unaligned
__vectorcall
_arr_
_cabs
_copysign
_crit_edge
_f>PH
_hypot
_llvm.
_logb
_nextafter
_oD>Kg
_ptr_
_runtimearr_
_sampler
_shadow
_split
_struct_
_typeProxy
`+!]?
`.rdata
`>n>w%
`A\][
`A\^[
`A\_^
`A]A\[
`A]A\^][
`A]^[
`A^A]A\_[
`A^A]A\_]
`A^A]]
`A^^]
`A^_[
`A^_]
`A^_^
`A^_^][
`A_A\[
`A_A]A\_^][
`A_A][
`A_A]]
`A_A^A\^]
`A_A^A\_]
`A_A^A\_^
`A_A^A\_^][
`A_A^A]A\^][
`A_A^A]A\_^]
`A_A^A]][
`A_A^A]_]
`A_A^_
`A_A^_^]
`A_^]
`A__^
`A__^][
`RTTI
`copy constructor closure'
`default constructor closure'
`dynamic atexit destructor for '
`dynamic initializer for '
`eh vector constructor iterator'
`eh vector copy constructor iterator'
`eh vector destructor iterator'
`eh vector vbase constructor iterator'
`eh vector vbase copy constructor iterator'
`h````
`h`hhh
`local static guard'
`local static thread guard'
`local vftable constructor closure'
`local vftable'
`managed vector constructor iterator'
`managed vector copy constructor iterator'
`managed vector destructor iterator'
`omni callsig'
`placement delete closure'
`placement delete[] closure'
`scalar deleting destructor'
`string'
`typeof'
`udt returning'
`vbase destructor'
`vbtable'
`vcall'
`vector constructor iterator'
`vector copy constructor iterator'
`vector deleting destructor'
`vector destructor iterator'
`vector vbase constructor iterator'
`vector vbase copy constructor iterator'
`vftable'
`virtual displacement map'
a.extrq
a.r.w
a.w.ph
a256msg
a256rnds2
a_copy
a_end
a_start
aarch64
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
abort
ac.s0
ac.sat.
ac.up.s1.sat
ac2es
accelerationStructureNV
accelerationStructureNV can only be used in uniform variables or function parameters:
access
access qualifier
accii
ackhl
ackrl.ph
acksave
acosf
acosh
acoshf
acoshl
acosl
acospi
acs.s
acsc.s
active
adcyclecounter
add second child into first child
add.ub.sw
add.with.overflow.
addCarry
addInvocations
addInvocationsAMD
addInvocationsExclusiveScan
addInvocationsExclusiveScanAMD
addInvocationsExclusiveScanNonUniform
addInvocationsExclusiveScanNonUniformAMD
addInvocationsInclusiveScan
addInvocationsInclusiveScanAMD
addInvocationsInclusiveScanNonUniform
addInvocationsInclusiveScanNonUniformAMD
addInvocationsNonUniform
addInvocationsNonUniformAMD
addconv
additive_expression
address family not supported
address in use
address not available
addressing model
addressu
addressv
addressw
addrspace(
addrspacecast
addshs
addu.w.qb
adduh
adduhm
adub.acc
aggShadow
aggregate
aggregate in vector constructor
aggregate metadata for type
agressive_dce_pass
agressive_dce_pass1
agressive_dce_pass2
agressive_dce_pass3
alias 
align
alignof(
alignstack
alignstack 
all default precisions are highp; use precision statements to quiet warning, e.g.:
all members of that structure type must also be decorated with 
all redeclarations must use the same depth layout on
all stride settings must match for xfb buffer
all() on a scalar
allInvocations
allInvocationsARB
allInvocationsEqual
allInvocationsEqualARB
alloca
allow_uav_condition
alnum
alpha
already connected
also be decorated with a *Binding*.
always-inline
alwaysinline
ambiguous best function under implicit type conversion
ambiguous function signature match: multiple signatures match under implicit type conversion
ambiguous patch constant function
amd64
amdfam10
amdil
and OpImageFetch
and second child into first child
and.cond
and.ra
and.shrunk
and_expression
android
aneid
anon@
anonymous member 
antlr3BaseRecognizerNew
antlr3BitsetCopy
antlr3BitsetList
antlr3BitsetLoad
antlr3BitsetNew
antlr3BitsetOf
antlr3BitsetSetAPI
antlr3CommonTokenDebugStreamSourceNew
antlr3CommonTokenNew
antlr3CommonTokenStreamNew
antlr3CommonTokenStreamSourceNew
antlr3EnumNew
antlr3ExceptionNew
antlr3Hash
antlr3HashTableNew
antlr3IntStreamNew
antlr3IntTrieNew
antlr3LexerNew
antlr3LexerNewStream
antlr3ListNew
antlr3MTExceptionNew
antlr3NewAsciiStringCopyStream
antlr3NewAsciiStringInPlaceStream
antlr3NewUCS2StringInPlaceStream
antlr3ParserNew
antlr3ParserNewStream
antlr3ParserNewStreamDbg
antlr3RecognitionExceptionNew
antlr3SetTokenAPI
antlr3SetVectorApi
antlr3StackNew
antlr3StringFactoryNew
antlr3TokenFactoryNew
antlr3TokenStreamNew
antlr3UCS2StringFactoryNew
antlr3VectorFactoryNew
antlr3VectorNew
antlr3dfapredict
antlr3dfaspecialStateTransition
antlr3dfaspecialTransition
any() on a scalar
any-hit
anyInvocation
anyInvocationARB
anyregcc
appear as the final member of an OpTypeStruct, thus cannot 
appending 
appendstructuredbuffer
apple
aq.s.w.ph
aq.sa.w.ph
ar.annotation
ar.sync
arc cosine
arc hyp. cosine
arc hyp. sine
arc hyp. tangent
arc sine
arc tangent
arch64.neon.fcvtas.
arch64.neon.fcvtau.
arch64.neon.fcvtms.
arch64.neon.fcvtmu.
arch64.neon.fcvtns.
arch64.neon.fcvtnu.
arch64.neon.fcvtps.
arch64.neon.fcvtpu.
arch64.neon.fcvtxn.
arch64.neon.fcvtzs.
arch64.neon.fcvtzu.
arch64.neon.frintn.
arch64.neon.fsqrt.
arch64.neon.rbit.
arch64.neon.saddlv.
arch64.neon.smaxv.
arch64.neon.sminv.
arch64.neon.suqadd.
arch64.neon.uaddlv.
arch64.neon.umaxv.
arch64.neon.uminv.
arch64.neon.usqadd.
arch64.neon.v
arch64.neon.vabd.
arch64.neon.vaddv.
arch64.neon.vcage.
arch64.neon.vcagt.
arch64.neon.vceq.
arch64.neon.vcge.
arch64.neon.vcgt.
arch64.neon.vchi.
arch64.neon.vchs.
arch64.neon.vclez.
arch64.neon.vcltz.
arch64.neon.vcvt
arch64.neon.vcvtf
arch64.neon.vld1x2.
arch64.neon.vld1x3.
arch64.neon.vld1x4.
arch64.neon.vmaxnm.
arch64.neon.vmaxnmv.
arch64.neon.vmaxv.
arch64.neon.vminnm.
arch64.neon.vminnmv.
arch64.neon.vminv.
arch64.neon.vmulx.
arch64.neon.vpmaxnm.
arch64.neon.vpminnm.
arch64.neon.vqdmlal.
arch64.neon.vqdmlsl.
arch64.neon.vqrshls.
arch64.neon.vqrshlu.
arch64.neon.vqshls.
arch64.neon.vqshls.n.
arch64.neon.vqshlu.
arch64.neon.vqshlu.n.
arch64.neon.vqshlus.n.
arch64.neon.vrecpx.
arch64.neon.vrshrn.
arch64.neon.vsli.
arch64.neon.vsqadd.
arch64.neon.vsqrshrn.
arch64.neon.vsqrshrun.
arch64.neon.vsqshlu.
arch64.neon.vsqshrn.
arch64.neon.vsqshrun.
arch64.neon.vsri.
arch64.neon.vsrshr.
arch64.neon.vst1x2.
arch64.neon.vst1x3.
arch64.neon.vst1x4.
arch64.neon.vtbl1.
arch64.neon.vtbl2.
arch64.neon.vtbl3.
arch64.neon.vtbl4.
arch64.neon.vtbx1.
arch64.neon.vtbx2.
arch64.neon.vtbx3.
arch64.neon.vtbx4.
arch64.neon.vtstd.
arch64.neon.vuqadd.
arch64.neon.vuqrshrn.
arch64.neon.vuqshrn.
arch64.neon.vurshr.
arch64.neon.xtn.
are used only as handles to refer to opaque resources. Such 
argument cannot drop memory qualifier when passed to formal parameter
argument list too long
argument must be a power of 2
argument must be at least 1
argument must be compile-time constant
argument must be qualified as __explicitInterpAMD in
argument out of domain
ariant.start
arity
arityp
arm_aapcs_vfpcc
arm_aapcscc
arm_apcscc
arpid
arpsize
array argument must be sized
array assignment
array comparison
array constructor argument not correct type to construct array element
array constructor must have at least one argument
array constructor needs one argument per array element
array in function return type
array index out of range '%d'
array initializer
array initializer must be sized
array length
array must be declared with a size before using this method
array must be explicitly sized
array must be redeclared with a size before being indexed with a variable
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must first be sized by a redeclaration or layout qualifier
array of void
array size
array size must be a constant integer expression
array size must be a positive integer
array size required
array variable name expected
array-of-array of block
array_specifier
arrayed IO in physical IO mode (use logical IO instead)
arrayed constructor
arrayed type
arrays of arrays
arrier
arrier0
arrier0.popc
as Result Type: 
asdouble
asfloat
asinf
asinh
asinhf
asinhl
asinl
asinpi
asint
ask2int.v16i1
askload.
askload.p
askmov.dqu
askstore.
askstore.p
assign
assignment expression
assignment expression in initializer list
assignment_expression
assignment_operator
assuming binding count of one for compile-time checking of binding numbers for unsized array
asuint
at offset 
at.rnd.
atan2
atan2f
atan2l
atan2pi
atanf
atanh
atanhf
atanhl
atanl
atanpi
ather.
athlon
athlon-fx
athlon-mp
athlon-tbird
athlon-xp
athlon64
atoll
atomic counter types
atomic counters can only be highp
atomic counters sharing the same offset:
atomicAdd
atomicAnd
atomicCompSwap
atomicCounter
atomicCounterAdd
atomicCounterAnd
atomicCounterCompSwap
atomicCounterDecrement
atomicCounterExchange
atomicCounterIncrement
atomicCounterMax
atomicCounterMin
atomicCounterOr
atomicCounterSubtract
atomicCounterXor
atomicExchange
atomicLoad
atomicMax
atomicMin
atomicOr
atomicStore
atomicXor
atomic_uint
atomic_uint binding is too large
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
atomic_uints can only be used in uniform variables or function parameters:
atomicrmw
attachment index is too large
attribute
attribute does not apply to a loop
attribute does not apply to a selection
attribute does not apply to a switch
attribute does not apply to a type
attribute does not apply to entry point
attribute identifier
attribute requires a SPIR-V 1.4 target-env
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord;
attribute with arguments not recognized, skipping
attribute_list
attributes #
attributes don't apply to control declaration
aturate.
aturate.ftz.f
auroraux
auto-map-bindings
available_externally 
b.128
b.nopack
b9{Tu
b?^Cy
back-edge block
back-end-pointer
backedge-taken count is 
bad address
bad allocation
bad argument
bad cast
bad character in float exponent
bad digit in hexadecimal literal
bad exception
bad expression
bad file descriptor
bad function call
bad locale name
bad magic number
bad message
bad profile name; use es, core, or compatibility
bad schema, must be 0
bad tokens following profile -- expected newline
bad_blend
badp 
ballot
ballotARB
barrier
base type of sampler
base type of sampler return type
basic block
basic type
basic type in subpass input
basic type in texture
basic type: double
basicaa
basiccg
bcopy
bdver1
bdver2
bdver3
be equal: 
be instantiated via OpVariable
be targeted by OpName, OpGroupDecorate, 
beginInvocationInterlockARB
beginInvocationInterlockARB() cannot be placed after a return from main()
beginInvocationInterlockARB() cannot be placed within flow control
beginInvocationInterlockARB() must be called before endInvocationInterlockARB()
beginInvocationInterlockARB() must be in a fragment shader
beginInvocationInterlockARB() must be in main()
beginInvocationInterlockARB() must only be called once
behavior for extension not specified
behavior not supported:
bg.declare
binding
binding is too large
binding=
bit shift left
bit shift right
bit-shift left assign
bit-shift right assign
bit-wise AND in version 
bit-wise OR in version 
bitCount
bitFieldReverse
bitcast
bitfield
bitfieldExtract
bitfieldInsert
bitfieldReverse
bitrig
bitselect
bitwise and
bitwise exclusive or
bitwise inclusive or
bitwise not
bitwise-and assign
bitwise-or assign
bitwise-xor assign
bjectsize.
blank
blend equation
blend_support
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_screen
blend_support_softlight
blendw
block
block <ID> 
block declaration
block initializer
block instance name redefinition
block name cannot be redefined
block name cannot redefine a non-block name
block redeclaration has extra members
block storage qualification
block without member remapping
block-
block_merge_pass
block_structure
blockaddress(
bm.bextri.u
bool   subgroupAllEqual(%s);
bool   subgroupAny(bool);
bool   subgroupBallotBitExtract(uvec4, uint);
bool   subgroupInverseBallot(uvec4);
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool);
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool);
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer;
bool helperInvocationEXT();
bool reportIntersectionNV(float, uint);
bool sparseTexelsResidentARB(int code);
bool1
bool1x1
bool1x2
bool1x3
bool1x4
bool2
bool2x1
bool2x2
bool2x3
bool2x4
bool3
bool3x1
bool3x2
bool3x3
bool3x4
bool4
bool4x1
bool4x2
bool4x3
bool4x4
boolean expression expected
bordercolor
bottom-transl
bp(=>?g
branch
branch type
branch_weights
break
break statement only allowed in switch and loops
break-crit-edges
break;
brmerge
broadcast
broadcast.s
broadcasti128
broken pipe
bs.ftz.f
bs.ll
bsdiff
btver1
btver2
buffer
buffer aliasing not yet supported
buffer block
buffer is too large:
buffer reference indexing
buffer_reference
buffer_reference_align
buffers can be declared only as blocks
bugtrap
build local maps: 
built in unary operator function.  Type: %s
built in variable
built-in
built-in block redeclaration
built-in function
builtin
bvec2
bvec3
bvec4
byteAddrTemp
byteaddressbuffer
byval
bzero
c [1>H'
c(>\,
c.altivec.
c.altivec.v
c.s0.sat.
c.up.s1.sat
c0&>`
c2s.s
c:\buildslave\hlvr_rel_win64\build\src\mathlib\mathlib.cpp
c:\buildslave\hlvr_rel_win64\build\src\public\ordered_constructor.h
c:\buildslave\hlvr_rel_win64\build\src\public\tier1\utlleanvector.h
c:\buildslave\hlvr_rel_win64\build\src\public\tier1\utlrbtree.h
c:\buildslave\hlvr_rel_win64\build\src\tier1\mempool.cpp
c:\buildslave\hlvr_rel_win64\build\src\tier1\utlbuffer.cpp
c:\buildslave\hlvr_rel_win64\build\src\tier1\utlstring.cpp
c:\buildslave\hlvr_rel_win64\build\src\vfx\compiletargetexpr.g
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfx_dx\hlslvariables.g
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfx_gl\Retailgl\win64\vfx_gl.pdb
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfx_gl\vfx_compile_helpers_gl.cpp
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfx_gl\vfx_context_mgr_gl.cpp
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfx_gl\vfx_gl.cpp
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfx_gl\vfx_shader_validator_glslang.cpp
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfx_shader_file.cpp
c:\buildslave\hlvr_rel_win64\build\src\vfx\vfxexpr.g
c>v	k
c?FA@s}
cAMDD
cXL9't!H
c[subcomponent][.component]
call argument
callable
callable data number
callableDataInNV
callableDataInNV block
callableDataNV
callableDataNV block
calling user function from global scope
calloc
can only apply depth layout to gl_FragDepth
can only apply highp to atomic_uint
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply to 'in'
can only apply to 'out'
can only apply to a standalone qualifier
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage
can only apply to uniform, buffer, in, or out storage qualifiers
can only be applied to 'const'-qualified scalar
can only be applied to a scalar
can only be applied to a standalone 'out'
can only be followed by a single macro name
can only be used on an output
can only be used on variable declaration
can only be used with a block
can only be used with a buffer
can only be used with a subpass
can only be used with a uniform
can only be used with an explicit location
can only be used with buffer
can only be used with non-externally visible shader Storage 
can only be used with std140, std430, or scalar layout packing
can only change layout qualification of
can only have one auxiliary qualifier (centroid, patch, and sample)
can only have one interpolation qualifier (flat, smooth, noperspective, __explicitInterpAMD)
can only redeclare a built-in block once, and before any use
can only specify on a buffer block
can only specify on a uniform block
can only use in an in/out block
can only use on input blocks in mesh shader
can only use on input in tessellation-evaluation shader
can only use on output in tessellation-control shader
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
can't convert
can't evaluate expression
can't find function
can't handle multiple entry points per stage
can't have an initializer
can't link compilation units from different source languages
can't modify a const
can't modify a readonly buffer
can't modify a sampler
can't modify a shaderrecordnv qualified buffer
can't modify a uniform
can't modify accelerationStructureNV
can't modify an atomic_uint
can't modify gl_FragCoord
can't modify gl_FragDepth if using early_fragment_tests
can't modify gl_FrontFace
can't modify gl_InstanceID
can't modify gl_PointCoord
can't modify gl_VertexID
can't modify shader input
can't modify void
can't read from explicitly-interpolated object: 
can't read from writeonly object: 
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
can't swizzle types containing float16
can't use auxiliary qualifier on a fragment output
can't use function syntax on variable
can't use interpolation qualifier on a fragment output
can't use variable in patch constant function
can't use with arrays containing float16
can't use with arrays containing int16
can't use with arrays containing int8
can't use with arrays containing uint16
can't use with arrays containing uint8
can't use with reference types
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with structs containing int16
can't use with structs containing int8
can't use with structs containing uint16
can't use with structs containing uint8
can't use with types containing arrays sized with a specialization constant
cannot access member variables (static member function?)
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
cannot add perprimitiveNV qualifier to redeclared block member
cannot add perviewNV qualifier to redeclared block member
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot appear outside switch statement
cannot apply layout qualifier to
cannot apply layout qualifiers to a shared variable
cannot apply layout qualifiers to hitAttributeNV variable
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
cannot apply to 'in'
cannot apply to 'out'
cannot apply to a block
cannot apply to a cooperative matrix type:
cannot apply to a matrix, structure, or block
cannot apply to an array:
cannot apply to input
cannot apply to taskNV in/out blocks
cannot apply to uniform or buffer block
cannot apply to:
cannot be a matrix
cannot be a structure
cannot be a structure or array
cannot be an argument type except for '(void)'
cannot be applied to this type
cannot be bool
cannot be both specified
cannot be negative
cannot be nested inside control flow
cannot be used (maybe an instance name is needed)
cannot be used with push_constant
cannot be used with shaderRecordNV
cannot change array size of redeclared block
cannot change array size of redeclared block member
cannot change arrayness of redeclared block
cannot change arrayness of redeclared block member
cannot change input storage qualification of
cannot change interpolation qualification of
cannot change output storage qualification of
cannot change previously set domain
cannot change previously set fragment shader interlock ordering
cannot change previously set input primitive
cannot change previously set layout value
cannot change previously set maxvertexcount attribute
cannot change previously set output primitive
cannot change previously set outputcontrolpoints attribute
cannot change previously set outputtopology
cannot change previously set partitioning
cannot change previously set size
cannot change previously set vertex order
cannot change previously set vertex spacing
cannot change qualification after use
cannot change qualification of
cannot change storage, memory, or auxiliary qualification of
cannot change the type of
cannot compose log message
cannot construct this type
cannot construct with these arguments
cannot contain a double, int64, or uint64
cannot convert a sampler
cannot convert a void
cannot convert an atomic_uint
cannot convert from '%s' to '%s'
cannot convert input argument, argument
cannot convert parameter %d from '%s' to '%s'
cannot convert return value to function return type
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot declare a default, include a type or full declaration
cannot declare a default, use a full declaration
cannot have statements before first case/default label
cannot implicitly initialize opaque members
cannot lie in previous members
cannot modify hitAttributeNV in this stage
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
cannot re-qualify a function name
cannot redeclare a built-in block with a user name
cannot redeclare a non block as a block
cannot redeclare a user-block member array
cannot redeclare after use
cannot redeclare block member with a different type
cannot redeclare block: 
cannot redeclare with different qualification:
cannot specify matrix layout on a variable declaration
cannot specify on a variable declaration
cannot specify packing on a variable declaration
cannot use 'inout' at global scope
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type)
cannot use centroid qualifier on an interface block
cannot use in a block array where new locations are needed for each block element
cannot use in preprocessor expression when expanded from macros
cannot use interpolation qualifiers on an interface block
cannot use interpolation qualifiers with patch
cannot use invariant qualifier on a function parameter
cannot use invariant qualifier on an interface block
cannot use invariant qualifier on structure members
cannot use layout qualifiers on a function parameter
cannot use layout qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type)
cannot use sample qualifier on an interface block
cannot use storage or interpolation qualifiers on structure members
canonicalize-cfg
canonicalize-insts
capability
case 
case entry block
case exit block
case expression
case: 
case_label
catch
catter.
cbrtf
cbrtl
cbuffer
cbuffer %s {
cc.s0
cc.sat.
ccccccccc
ceilf
ceill
centroid
centroid 
centroid/sample/patch
cfg-cleanup
cfg_cleanup_pass
cggg56Gdeggggggggg`ab
cggg56ff
cgscc-passmgr
channelMipAlgorithm_
channelOutputColorSpace_%s
character literals not supported
chardiff
chari
chmod
chown
ckusdw
cl::location(x) specified more than once!
clamp
class
clearerr
client opengl100
client vulkan100
clmulqdq
clock2x32ARB
clockARB
clockRealtime2x32EXT
clockRealtimeEXT
closedir
closest-hit
cluster size
cmpbeq.any
cmpeq
cmpxchg
cmpys.acc.s1
cnegh
cntrl
coalesce-inserts
codegenprepare
coherent
coherent volatile 
coldcc
column
column_major
combination.
combined (Vector1 + Vector2) size of 
combined token is invalid
combined tokens are too long
comineq.sd
comineq.ss
comment
common
common 
compatibility
compilation terminated
compiletargetexprLexerNew
compiletargetexprLexerNewSSD
compiletargetexprParserNew
compiletargetexprParserNewSSD
complex I/O type; use new glslang C++ interface
complex loop exits (shared exit block)
complex loop exits (two exit branches from same block)
component
component argument
component is too large
component type
component-wise multiply
components
components < 4 in matrix buffer type
components as the first member
components must be in the range [0, 31]
components must be in the range [0, 3]
composite
compound_statement
compound_statement_no_new_scope
compute
compute shader derivatives
compute shaders
condition
condition must be a scalar integer expression
conditional expression
conditional_expression
conditionopt
connection aborted
connection already in progress
connection refused
connection reset
const
const (read only)
const array
const bool
const int
const int  gl_MaxClipPlanes = %d;
const int  gl_MaxCombinedTextureImageUnits = %d;
const int  gl_MaxDrawBuffers = %d;
const int  gl_MaxFragmentUniformComponents = %d;
const int  gl_MaxLights = %d;
const int  gl_MaxTextureCoords = %d;
const int  gl_MaxTextureImageUnits = %d;
const int  gl_MaxTextureUnits = %d;
const int  gl_MaxVaryingFloats = %d;
const int  gl_MaxVertexAttribs = %d;
const int  gl_MaxVertexTextureImageUnits = %d;
const int  gl_MaxVertexUniformComponents = %d;
const int gl_MaxAtomicCounterBindings = %d;
const int gl_MaxAtomicCounterBufferSize = %d;
const int gl_MaxClipDistances = %d;
const int gl_MaxCombinedAtomicCounterBuffers = %d;
const int gl_MaxCombinedAtomicCounters = %d;
const int gl_MaxCombinedClipAndCullDistances = %d;
const int gl_MaxCombinedImageUniforms = %d;
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d;
const int gl_MaxCombinedShaderOutputResources = %d;
const int gl_MaxComputeAtomicCounterBuffers = %d;
const int gl_MaxComputeAtomicCounters = %d;
const int gl_MaxComputeImageUniforms = %d;
const int gl_MaxComputeTextureImageUnits = %d;
const int gl_MaxComputeUniformComponents = %d;
const int gl_MaxCullDistances = %d;
const int gl_MaxFragmentAtomicCounterBuffers = %d;
const int gl_MaxFragmentAtomicCounters = %d;
const int gl_MaxFragmentImageUniforms = %d;
const int gl_MaxFragmentInputComponents = %d;
const int gl_MaxGeometryAtomicCounterBuffers = %d;
const int gl_MaxGeometryAtomicCounters = %d;
const int gl_MaxGeometryImageUniforms = %d;
const int gl_MaxGeometryInputComponents = %d;
const int gl_MaxGeometryOutputComponents = %d;
const int gl_MaxGeometryOutputVertices = %d;
const int gl_MaxGeometryTextureImageUnits = %d;
const int gl_MaxGeometryTotalOutputComponents = %d;
const int gl_MaxGeometryUniformComponents = %d;
const int gl_MaxGeometryVaryingComponents = %d;
const int gl_MaxImageSamples = %d;
const int gl_MaxImageUnits = %d;
const int gl_MaxMeshOutputPrimitivesNV = %d;
const int gl_MaxMeshOutputVerticesNV = %d;
const int gl_MaxMeshViewCountNV = %d;
const int gl_MaxPatchVertices = %d;
const int gl_MaxSamples = %d;
const int gl_MaxTessControlAtomicCounterBuffers = %d;
const int gl_MaxTessControlAtomicCounters = %d;
const int gl_MaxTessControlImageUniforms = %d;
const int gl_MaxTessControlInputComponents = %d;
const int gl_MaxTessControlOutputComponents = %d;
const int gl_MaxTessControlTextureImageUnits = %d;
const int gl_MaxTessControlTotalOutputComponents = %d;
const int gl_MaxTessControlUniformComponents = %d;
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d;
const int gl_MaxTessEvaluationAtomicCounters = %d;
const int gl_MaxTessEvaluationImageUniforms = %d;
const int gl_MaxTessEvaluationInputComponents = %d;
const int gl_MaxTessEvaluationOutputComponents = %d;
const int gl_MaxTessEvaluationTextureImageUnits = %d;
const int gl_MaxTessEvaluationUniformComponents = %d;
const int gl_MaxTessGenLevel = %d;
const int gl_MaxTessPatchComponents = %d;
const int gl_MaxTransformFeedbackBuffers = %d;
const int gl_MaxTransformFeedbackInterleavedComponents = %d;
const int gl_MaxVaryingComponents = %d;
const int gl_MaxVertexAtomicCounterBuffers = %d;
const int gl_MaxVertexAtomicCounters = %d;
const int gl_MaxVertexImageUniforms = %d;
const int gl_MaxVertexOutputComponents = %d;
const int gl_MaxViewports = %d;
const int gl_ScopeDevice      = 1;
const int gl_ScopeInvocation  = 4;
const int gl_ScopeQueueFamily = 5;
const int gl_ScopeSubgroup    = 3;
const int gl_ScopeWorkgroup   = 2;
const int gl_SemanticsAcquire         = 0x2;
const int gl_SemanticsAcquireRelease  = 0x8;
const int gl_SemanticsMakeAvailable   = 0x2000;
const int gl_SemanticsMakeVisible     = 0x4000;
const int gl_SemanticsRelaxed         = 0x0;
const int gl_SemanticsRelease         = 0x4;
const int gl_SemanticsVolatile        = 0x8000;
const int gl_StorageSemanticsBuffer   = 0x40;
const int gl_StorageSemanticsImage    = 0x800;
const int gl_StorageSemanticsNone     = 0x0;
const int gl_StorageSemanticsOutput   = 0x1000;
const int gl_StorageSemanticsShared   = 0x100;
const int16_t
const int64_t
const int8_t
const ivec2[4] 
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d);
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d);
const ivec3 gl_MaxMeshWorkGroupSizeNV = ivec3(%d,%d,%d);
const ivec3 gl_MaxTaskWorkGroupSizeNV = ivec3(%d,%d,%d);
const mediump int  gl_MaxCombinedTextureImageUnits = %d;
const mediump int  gl_MaxDrawBuffers = %d;
const mediump int  gl_MaxFragmentInputVectors = %d;
const mediump int  gl_MaxFragmentUniformVectors = %d;
const mediump int  gl_MaxProgramTexelOffset = %d;
const mediump int  gl_MaxTextureImageUnits = %d;
const mediump int  gl_MaxVaryingVectors = %d;
const mediump int  gl_MaxVertexAttribs = %d;
const mediump int  gl_MaxVertexOutputVectors = %d;
const mediump int  gl_MaxVertexTextureImageUnits = %d;
const mediump int  gl_MaxVertexUniformVectors = %d;
const mediump int  gl_MinProgramTexelOffset = %d;
const uint
const uint gl_RayFlagsNoneNV = 0U;const uint gl_RayFlagsOpaqueNV = 1U;const uint gl_RayFlagsNoOpaqueNV = 2U;const uint gl_RayFlagsTerminateOnFirstHitNV = 4U;const uint gl_RayFlagsSkipClosestHitShaderNV = 8U;const uint gl_RayFlagsCullBackFacingTrianglesNV = 16U;const uint gl_RayFlagsCullFrontFacingTrianglesNV = 32U;const uint gl_RayFlagsCullOpaqueNV = 64U;const uint gl_RayFlagsCullNoOpaqueNV = 128U;
const uint16_t
const uint64_t
const uint8_t
const_cast
constant 
constant expression required
constant_expression
constant_id
constructed
constructing matrix from matrix
constructing non-array constituent from array argument
constructor
constructor argument does not have a type
consumestructuredbuffer
containing OpTypeRuntimeArray must have storage class of 
contains an array with stride 
context-insensitive value
continue
continue statement only allowed in loops
continue target
continue;
control flow: exitBlock handled before multi-pred loopMerge
control flow: not all blocks were translated
controlBarrier
conversion wrapper
convert-local-access-chains
convert-to-half-pass
convert_to_half
coopMatLoadNV
coopMatMulAddNV
coopMatStoreNV
coordTemp
copy object
copysign
copysignf
copysignl
core-avx-i
core-avx2
core.chkct.
core.eeu.
core.endin.
core.freer.
core.getr.
core.getst.
core.getts.
core.in.
core.inct.
core.initcp.
core.initdp.
core.initlr.
core.initpc.
core.initsp.
core.inshr.
core.int.
core.mjoin.
core.msync.
core.out.
core.outct.
core.outshr.
core.outt.
core.peek.
core.setc.
core.setclk.
core.setd.
core.setev.
core.setpsc.
core.setpt.
core.setrdy.
core.settw.
core.setv.
core.syncr.
core.testct.
core.testwct.
core2
corei7
corei7-avx
correlated-propagation
correlated-value-propagation
corresponding member type of Result Type struct
coshf
coshl
cosine
cospi
could not create assignment
could not start LunarGLASS in multi-threaded mode
couldn't get metadata for input instruction
countbits
cp.approx.ftz.d
cp.ps.256
cross
cross device link
cross-product
crotate
cs_5_0
csc.s
csswd
ctaid.
ctermid
cubeFaceCoord
cubeFaceCoordAMD
cubeFaceIndex
cubeFaceIndexAMD
cwrite
cygwin
d$ E3
d$ L+
d$ UAVAWH
d$$D;d$,H
d$(E2
d$(E3
d$0E3
d$0H;
d$0I+
d$0I;
d$0Jc
d$0L+
d$0L;
d$0M;
d$0ff
d$8D9o0uiH
d$8E3
d$8L9d$0t
d$8w	M9e@
d$@E3
d$@I;
d$@L;p
d$@M;
d$DE3
d$HD;
d$HE3
d$HI;
d$HM+
d$HM;
d$PD8 u
d$PH+
d$PL+
d$PL;d$@
d$PM+
d$PM;
d$XD;
d$XE3
d$XE8&u
d$XH#V0H
d$XH9
d$XL+
d$XL;
d$Xfff
d$`E3
d$`H;
d$`Hk
d$`M+
d$`M;
d$`u-E
d$hD;
d$hE2
d$hE3
d$hH;
d$hI;
d$hL;
d$pA;
d$pE3
d$pI;
d$pL;
d$pM;
d$pfD
d$xL+d$pI
d$xuAL
d.v16i1
d3dcompiler_43.dll
d?000000`?
dFdxCoarse
dFdxFine
dFdyCoarse
dFdyFine
dH9~ 
dPdxCoarse
dPdxFine
dPdyCoarse
dPdyFine
da-delinearize
darwin
dasl.rrri
datalayout
dd.sd
dd.ss
dd.sw
dd.sw.128
dd.wd
ddaddi
ddb.map
dddd, MMMM dd, yyyy
ddpsat
ddr.q.
ddsub
ddsub.p
ddsubhr
ddub.acc
dduhs
ddus.
ddx_coarse
ddx_fine
ddy_coarse
ddy_fine
dead_branch_elim_pass
dead_insert_elim_pass1
dead_insert_elim_pass2
debug
debug base type encoding
debug composite type
debug info flags
debug operation
debug pragma syntax is incorrect
debug type qualifier
debug-pass
declaration
declaration in annotation
declaration list
declaration_statement
declare 
decompose-insts
decomposition of gla_Fma
decomposition of gla_fACosh
decomposition of gla_fASinh
decomposition of gla_fATanh
decomposition of gla_fAsin
decomposition of gla_fAtan
decomposition of gla_fAtan2
decomposition of gla_fCosh
decomposition of gla_fFaceForward
decomposition of gla_fFixedTransform
decomposition of gla_fFraction
decomposition of gla_fIsNan
decomposition of gla_fLit
decomposition of gla_fModF
decomposition of gla_fPackDouble2x32
decomposition of gla_fPackSnorm4x8
decomposition of gla_fPackUnorm2x16
decomposition of gla_fPackUnorm4x8
decomposition of gla_fPowi
decomposition of gla_fRefract
decomposition of gla_fSign
decomposition of gla_fSinh
decomposition of gla_fTanh
decomposition of gla_fUnpackDouble2x32
decomposition of gla_fUnpackSnorm4x8
decomposition of gla_fUnpackUnorm2x16
decomposition of gla_fUnpackUnorm4x8
decoration
default
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
default%d
default:
default: 
defaultFile
define
define 
defined
degenerate cases of merge-block or continue-target.
degrees
demote
demote_statement
denominator
dependency_infinite
dependency_length
deprecated, may be removed in future release
depth layout qualifier
depth_any
depth_greater
depth_less
depth_unchanged
deque<T> too long
derivative_group_
derivative_group_linearNV
derivative_group_linearnv
derivative_group_quadsNV
derivative_group_quadsNV and derivative_group_linearNV
derivative_group_quadsnv
descriptor set
destination address required
determinant
device or resource busy
device_event
devicecoherent
diff.neg
digit
dimensionality
direct index
direct index without a constant node
directive must end with a newline
directory not empty
disable
disable debug output
disable-cgp-branch-opts
disable-cgp-select2branch
disable-debug-info-verifier
disable-licm-promotion
disable_array_flattening
disable_force_mediump
disable_optimize_glsl
discard
discard from non-main function with no discard op in back end
discard;
distance
divide
divide second child into first child
division by 0
dllexport 
dllimport 
dmat2
dmat2x2
dmat2x3
dmat2x4
dmat3
dmat3x2
dmat3x3
dmat3x4
dmat4
dmat4x2
dmat4x3
dmat4x4
dmxcsr
dnow.p
do sub-statement
do-while loops not available
does not apply to floating point images
does not apply to signed integer images
does not apply to this type:
does not apply to unsigned integer images
does not dominate
does not operate on this type:
does not operate on types containing (u)int16
does not operate on types containing (u)int8
does not operate on types containing float16
does not strictly dominate
domain
domfrontier
domtree
dont_flatten
dont_unroll
dot-product
dotProduct
dotres
double
double conversion
double floating-point suffix
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4 );
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double);
double literal
double matrix
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   outerProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4);
double vector
double1
double1x1
double1x2
double1x3
double1x4
double2
double2 conversion not implemented
double2x1
double2x2
double2x3
double2x4
double3
double3x1
double3x2
double3x3
double3x4
double4
double4x1
double4x2
double4x3
double4x4
doubleBitsToInt64
doubleBitsToUint64
doubles cannot start on an odd-numbered component
dragonfly
drexd
ds_5_0
du.dq.256
dummyReturn
dup-merge
duplicate label
duplicate macro parameter
duplicate member name:
duplicated value
dvec2
dvec3
dvec4
dword
dyn.offset
e D8d$au@H
e+000
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64
e0A^A]A\_^[]
e0A_A^A]A\]
e0A_A^]
e3.pabs.
e3.ph
eHH9N@u!
eHM;a
eLK(w
ead.pm
earbyint.
early-cse
early-return-elim
early_fragment_tests
earlydepthstencil
earlyretbool
earlyretval
earlyretval.load
eclast
ecrement
efetch
effffff
eg</t
egsat
eh.lpad-body
eil.ftz.f
einterleave
either the block needs a location, or all members need a location, or no members have a location
element
element1
element2
eliminate-dead-branches
eliminate-dead-code-aggressive
eliminate-dead-functions
eliminate-dead-inserts
eliminate-dead-members
eliminate-local-single-block
eliminate-local-single-store
eliminate_dead_functions_pass
eliminate_dead_members
else statement
emcpy.
emmove.
emoryBarrierImage
emset.
enable
enable-correct-eh-support
enable-double-float-shrink
enable-load-pre
enable-lsr-phielim
enable-pre
enable-tbaa
endInvocationInterlockARB
endInvocationInterlockARB() cannot be placed after a return from main()
endInvocationInterlockARB() cannot be placed within flow control
endInvocationInterlockARB() must be in a fragment shader
endInvocationInterlockARB() must be in main()
endInvocationInterlockARB() must only be called once
endif
endptr
entiA
entry
entry point cannot return a value
entry point must return a value for use with patch constant function
entry-point
environment.
eon.vcvt
eou?H
epend
equal
equal: 
equal_spacing
equality_expression
erleave
ermilvar.p
error
error-reporting-is-cold
error: 
errors
ertp.rp
estnzc
et.fpscr
etjmp
eturn.i
eturnaddress
event
exagon.
exagon.M2.mpy.
exagon.S2.asr.i.
exagon.S2.tableidx
exagon.S5.asrhub.rnd.sat.goodsyntax
exagon.S5.vasrhrnd.goodsyntax
exclusive or second child into first child
exclusive-or
exclusive_or_expression
executable format error
executeCallableNV
execution mode
execution model
exitcond
exp10
exp10f
exp10l
exp2f
exp2l
expected
expected ')'
expected 'INF'
expected 'c'
expected 16, 32, or 64 bits for first type parameter
expected 8 or 32 bits for first type parameter
expected Data to be a 32 or 64-bit float scalar
expected Data to be a 32 or 64-bit float vector
expected Data to be an int or float vector
expected Data to have 2, 3, 4, 8 or 16 components
expected Format data type to be 8-bit int
expected Format storage class to be UniformConstant
expected Hi and Lo operands to have the same number of components as Result Type
expected Hi and Lo operands to have the same type
expected Interpolant data type to be equal to Result Type
expected Interpolant storage class to be Input
expected Interpolant to be a pointer
expected Nancode to be an int scalar or vector type
expected Nancode to have the same bit width as Result Type
expected Nancode to have the same number of components as Result Type
expected Offset to be a vector of 2 32-bit floats
expected Ptr data type to be int or float scalar or vector
expected Result Type to be 32-bit int scalar type
expected Result Type to be 64-bit float scalar type
expected Result Type to be a 16 or 32-bit scalar or vector float type
expected Result Type to be a 32-bit float scalar 
expected Result Type to be a 32-bit float vector of size 2
expected Result Type to be a 32-bit float vector of size 4
expected Result Type to be a 32-bit int scalar or vector type
expected Result Type to be a 32-bit int type
expected Result Type to be a 32-bit int vector of size 2
expected Result Type to be a float scalar or vector type
expected Result Type to be a float scalar type
expected Result Type to be a float vector type
expected Result Type to be a scalar or a vector with 2, 3, 4, 8 or 16 components
expected Result Type to be a scalar or vector float type
expected Result Type to be a square matrix
expected Result Type to be a struct with two identical 
expected Result Type to be a struct with two members, 
expected Result Type to be an int or float scalar or vector type
expected Result Type to be an int or float vector type
expected Result Type to be an int scalar or vector type
expected Result Type to have 2, 3, 4, 8 or 16 components
expected Result Type to have 2, 4, 8 or 16 components
expected Result Type to have 3 components
expected Result Type to have 3 or 4 components
expected Result Type to have no more than 4 components
expected Sample to be 32-bit integer
expected a single integer argument
expected all operands to be int scalars or vectors
expected all operands to have the same bit width as 
expected all operands to have the same dimension as 
expected bit width of Result Type components to be 16, 32 or 64
expected bit width of components of Hi and Lo operands to be half of the bit width of components of Result Type
expected data type of the pointer to be a 32-bit int scalar or vector type
expected data type of the pointer to be equal to Result Type
expected data type of the pointer to have the same number of components as Result Type
expected four type parameters
expected literal N to be equal to the number of components of Result Type
expected newline after header name:
expected no arguments
expected number after 'c'
expected operand A type to be equal to Result Type
expected operand B type to be equal to Result Type
expected operand C to be an int scalar or vector
expected operand C to have the same bit width as Result Type
expected operand C to have the same number of components as Result Type
expected operand Eta to be a float scalar
expected operand Exp data type to be a 
expected operand Exp data type to have the same component 
expected operand Exp to be a 32-bit int scalar 
expected operand Exp to be a pointer
expected operand Exp to have the same component 
expected operand Format to be a pointer
expected operand I data type to be equal to Result Type
expected operand I to be a pointer
expected operand I to be of type equal to Result Type
expected operand N to be of type equal to Result Type
expected operand Num Elements to be of type size_t (
expected operand Offset to be of type size_t (
expected operand P component type to be equal to Result Type
expected operand P data type to be 16-bit float scalar
expected operand P data type to be equal to component type of Result Type
expected operand P data type to be equal to the type of operand Data components
expected operand P storage class to be Generic, CrossWorkgroup, Workgroup or Function
expected operand P storage class to be UniformConstant, Generic, CrossWorkgroup, Workgroup or Function
expected operand P to be a 32-bit int scalar
expected operand P to be a float scalar or vector
expected operand P to be a pointer
expected operand P to have no more than 4 components
expected operand P type to be equal to Result Type
expected operand P0 component type to be equal to 
expected operand P0 to be of float scalar or vector type
expected operand P0 to have no more than 4 components
expected operand P1 component type to be equal to 
expected operand P1 to be of float scalar or vector type
expected operand Ptr storage class to be CrossWorkgroup
expected operand Ptr to be a pointer
expected operand Shuffle Mask components to have the same bit width as Result Type components
expected operand Shuffle Mask to be an int vector
expected operand Shuffle Mask to have the same number of components as Result Type
expected operand V to be a 32-bit float vector of size 2
expected operand V to be a 32-bit float vector of size 4
expected operand V to be a 32-bit int vector of size 2
expected operand V to be a 64-bit float scalar
expected operand X and Result Type to have equal component types
expected operand X component type to be equal to 
expected operand X component type to be equal to Result Type
expected operand X to be a float scalar or vector
expected operand X to be a square matrix
expected operand X to be an int or float vector
expected operand X to be of float scalar or vector type
expected operand X to have 2, 4, 8 or 16 components
expected operand X to have the same number of components as Result Type
expected operand X type to be equal to Result Type
expected operand X type to be equal to members of 
expected operand X type to be equal to the first member 
expected operand Y type to be equal to Result Type
expected operands P0 and P1 to be of the same type
expected operands P0 and P1 to have the same number of 
expected operands X and Y to be of the same type
expected register number after register type
expected register type
expected spaceN
expected storage class of the pointer to be Generic, CrossWorkgroup, Workgroup or Function
expected symbol, not user-defined type
expected the exponent to be a 32-bit int scalar or vector
expected the exponent to have the same number of components as Result Type
expected the last operand to be a pointer
expected type name
expected type of operand X to be equal to Result Type
expected type of operand Y to be equal to Result Type
expected types of all operands to be equal to Result Type
expected {x, y, z, w} for component
expected: SamplerComparisonState
expected: mul arguments
expected: sampler type
expected: scalar or vector type in texture structure
explicit
explicit interpolation
explicit masking in middle end
expm1
expm1f
expm1l
expression
expression after :
expression after ?
expression followed by ']'
expression_statement
extended binOp of a constant
extension
extension 
extension 'all' cannot have 'require' or 'enable' behavior
extension instruction number
extension is only partially supported:
extension name expected
extension name not specified
extension not supported:
extern
extern_weak 
external
external 
external node
external_declaration
externaldescriptorset
externally_initialized 
extra content after header name:
extra tokens
extra tokens -- expected newline
extract
extract.t
extractelement
extractvalue
extraneous semicolon
f+L$TH
f128.
f16image1D
f16image1DArray
f16image2D
f16image2DArray
f16image2DMS
f16image2DMSArray
f16image2DRect
f16image3D
f16imageBuffer
f16imageCube
f16imageCubeArray
f16mat2
f16mat2x2
f16mat2x3
f16mat2x4
f16mat3
f16mat3x2
f16mat3x3
f16mat3x4
f16mat4
f16mat4x2
f16mat4x3
f16mat4x4
f16sampler1D
f16sampler1DArray
f16sampler1DArrayShadow
f16sampler1DShadow
f16sampler2D
f16sampler2DArray
f16sampler2DArrayShadow
f16sampler2DMS
f16sampler2DMSArray
f16sampler2DRect
f16sampler2DRectShadow
f16sampler2DShadow
f16sampler3D
f16samplerBuffer
f16samplerCube
f16samplerCubeArray
f16samplerCubeArrayShadow
f16samplerCubeShadow
f16subpassInput
f16subpassInputMS
f16texture1D
f16texture1DArray
f16texture2D
f16texture2DArray
f16texture2DMS
f16texture2DMSArray
f16texture2DRect
f16texture3D
f16textureBuffer
f16textureCube
f16textureCubeArray
f16tof32
f16vec2
f16vec3
f16vec4
f32mat2
f32mat2x2
f32mat2x3
f32mat2x4
f32mat3
f32mat3x2
f32mat3x3
f32mat3x4
f32mat4
f32mat4x2
f32mat4x3
f32mat4x4
f32tof16
f32vec2
f32vec3
f32vec4
f64mat2
f64mat2x2
f64mat2x3
f64mat2x4
f64mat3
f64mat3x2
f64mat3x3
f64mat3x4
f64mat4
f64mat4x2
f64mat4x3
f64mat4x4
f64vec2
f64vec3
f64vec4
f9)u H
f9)uTH
f9,Ju
f9,~u
f9<Bu
f9C:u	E9>
f9H:t
f9O:u?H
f9\$bu
f;B:uq
f;H:u
f;P:u=H
f;\$p
f;\$~
f;^ r
f;p:u
f;p:uY
f@D9{4r<A
fA	D$
fA!L$
fA9,Au
fA9<\u
fA9@:u$H
fA9B:
fA9\$
fA;Ox
fA;h 
fA;wx
fB9,Nu
fB94Ou
fB9<@u
fB9<Bu
fB9<Hu
fD9	t(I
fD9 t
fD9 tMH
fD9 u
fD9$Hu
fD9(u.
fD9,Au
fD90t
fD94Fu
fD96u
fD9;u
fD9<Au
fD9<Xu
fD9?t&
fD9M:
fD9f:
fD9p:
fD9t$b
fD9z:u
fD9~:
fD;@:
fD;`x
fD;d$p
fD;h:
fD;r:
fD;v sEf
fD;x:
fD;x:u
fE98t'
fE;g:
fF9<qu
fG9$Ou
fJBGo
fMax should get constant-folded
fMin should get constant-folded
fPL+fHD
fPM9e
fabsf
fabsl
face-forward
faceforward
factor
faddq
failed to insert the global constant buffer
false
false case
fast_distance
fast_length
fast_normalize
fastcc
fastopt
fclamp
fclose
fcoopmatNV
fcoopmatNV coopMatMulAddNV(fcoopmatNV A, fcoopmatNV B, fcoopmatNV C);
fdopen
feature not yet implemented
features
fence
ferror
fffff
ffffff
fffffff
fflush
ffsll
fgetc
fgetpos
fgets
file exists
file too large
file too short: 
fileExt
filename
filename too long
filename-based #line
filename-based __FILE__
fileno
fillBufferExt
filter
filter mode
findLSB
findMSB
fiprintf
first argument must be an interpolant, or interpolant-array element
first member a float scalar or vector, second member a 
firstbithigh
firstbitlow
fixed
flat 
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask[];
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;flat in  int  gl_SampleMaskIn[];     out int  gl_SampleMask[];
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex;
flat in highp uint gl_ViewID_OVR;
flat in int gl_Layer;flat in int gl_ViewportIndex;
flat in int gl_PrimitiveID;
flat in ivec2 gl_FragSizeEXT;flat in int   gl_FragInvocationCountEXT;
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV;
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV;in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV;
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;flat in highp   uint  gl_WarpsPerSMNV;flat in highp   uint  gl_SMCountNV;flat in highp   uint  gl_WarpIDNV;flat in highp   uint  gl_SMIDNV;
flat/smooth/noperspective
flatten
flatten-conditional-assignments
flatten-uniform-arrays
flattenShadow
flattenTemp
float
float 
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4  );
float __g_Padding_%d;
float _dummyMemberToPreventEmptyStructForGlsl;
float cubeFaceIndexAMD(vec3);vec2  cubeFaceCoordAMD(vec3);uint64_t timeAMD();in int gl_SIMDGroupSizeAMD;
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p);
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m);
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4);
float gl_ClipDistance[1];
float gl_CullDistance[];
float gl_CullDistance[];int  gl_ViewportMask[];vec4 gl_SecondaryPositionNV;int  gl_SecondaryViewportMaskNV[];vec4 gl_PositionPerViewNV[];int  gl_ViewportMaskPerViewNV[];
float gl_CullDistance[];vec4 gl_SecondaryPositionNV;vec4 gl_PositionPerViewNV[];
float imageAtomicExchange(volatile coherent 
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2);
float interpolateAtVertexAMD(float, uint);vec2  interpolateAtVertexAMD(vec2,  uint);vec3  interpolateAtVertexAMD(vec3,  uint);vec4  interpolateAtVertexAMD(vec4,  uint);int   interpolateAtVertexAMD(int,   uint);ivec2 interpolateAtVertexAMD(ivec2, uint);ivec3 interpolateAtVertexAMD(ivec3, uint);ivec4 interpolateAtVertexAMD(ivec4, uint);uint  interpolateAtVertexAMD(uint,  uint);uvec2 interpolateAtVertexAMD(uvec2, uint);uvec3 interpolateAtVertexAMD(uvec3, uint);uvec4 interpolateAtVertexAMD(uvec4, uint);float16_t interpolateAtVertexAMD(float16_t, uint);f16vec2   interpolateAtVertexAMD(f16vec2,   uint);f16vec3   interpolateAtVertexAMD(f16vec3,   uint);f16vec4   interpolateAtVertexAMD(f16vec4,   uint);
float literal needs a decimal point or exponent
float literal too long
float min3(float, float, float);vec2  min3(vec2,  vec2,  vec2);vec3  min3(vec3,  vec3,  vec3);vec4  min3(vec4,  vec4,  vec4);int   min3(int,   int,   int);ivec2 min3(ivec2, ivec2, ivec2);ivec3 min3(ivec3, ivec3, ivec3);ivec4 min3(ivec4, ivec4, ivec4);uint  min3(uint,  uint,  uint);uvec2 min3(uvec2, uvec2, uvec2);uvec3 min3(uvec3, uvec3, uvec3);uvec4 min3(uvec4, uvec4, uvec4);float max3(float, float, float);vec2  max3(vec2,  vec2,  vec2);vec3  max3(vec3,  vec3,  vec3);vec4  max3(vec4,  vec4,  vec4);int   max3(int,   int,   int);ivec2 max3(ivec2, ivec2, ivec2);ivec3 max3(ivec3, ivec3, ivec3);ivec4 max3(ivec4, ivec4, ivec4);uint  max3(uint,  uint,  uint);uvec2 max3(uvec2, uvec2, uvec2);uvec3 max3(uvec3, uvec3, uvec3);uvec4 max3(uvec4, uvec4, uvec4);float mid3(float, float, float);vec2  mid3(vec2,  vec2,  vec2);vec3  mid3(vec3,  vec3,  vec3);vec4  mid3(vec4,  vec4,  vec4);int   mid3(int,   int,   int);ivec2 mid3(ivec2, ivec2, ivec2);ivec3 mid3(ivec3, ivec3, ivec3);ivec4 mid3(ivec4, ivec4, ivec4);uint  mid3(uint,  uint,  uint);uvec2 mid3(uvec2, uvec2, uvec2);uvec3 mid3(uvec3, uvec3, uvec3);uvec4 mid3(uvec4, uvec4, uvec4);float16_t min3(float16_t, float16_t, float16_t);f16vec2   min3(f16vec2,   f16vec2,   f16vec2);f16vec3   min3(f16vec3,   f16vec3,   f16vec3);f16vec4   min3(f16vec4,   f16vec4,   f16vec4);float16_t max3(float16_t, float16_t, float16_t);f16vec2   max3(f16vec2,   f16vec2,   f16vec2);f16vec3   max3(f16vec3,   f16vec3,   f16vec3);f16vec4   max3(f16vec4,   f16vec4,   f16vec4);float16_t mid3(float16_t, float16_t, float16_t);f16vec2   mid3(f16vec2,   f16vec2,   f16vec2);f16vec3   mid3(f16vec3,   f16vec3,   f16vec3);f16vec4   mid3(f16vec4,   f16vec4,   f16vec4);int16_t   min3(int16_t,   int16_t,   int16_t);i16vec2   min3(i16vec2,   i16vec2,   i16vec2);i16vec3   min3(i16vec3,   i16vec3,   i16vec3);i16vec4   min3(i16vec4,   i16vec4,   i16vec4);int16_t   max3(int16_t,   int16_t,   int16_t);i16vec2   max3(i16vec2,   i16vec2,   i16vec2);i16vec3   max3(i16vec3,   i16vec3,   i16vec3);i16vec4   max3(i16vec4,   i16vec4,   i16vec4);int16_t   mid3(int16_t,   int16_t,   int16_t);i16vec2   mid3(i16vec2,   i16vec2,   i16vec2);i16vec3   mid3(i16vec3,   i16vec3,   i16vec3);i16vec4   mid3(i16vec4,   i16vec4,   i16vec4);uint16_t  min3(uint16_t,  uint16_t,  uint16_t);u16vec2   min3(u16vec2,   u16vec2,   u16vec2);u16vec3   min3(u16vec3,   u16vec3,   u16vec3);u16vec4   min3(u16vec4,   u16vec4,   u16vec4);uint16_t  max3(uint16_t,  uint16_t,  uint16_t);u16vec2   max3(u16vec2,   u16vec2,   u16vec2);u16vec3   max3(u16vec3,   u16vec3,   u16vec3);u16vec4   max3(u16vec4,   u16vec4,   u16vec4);uint16_t  mid3(uint16_t,  uint16_t,  uint16_t);u16vec2   mid3(u16vec2,   u16vec2,   u16vec2);u16vec3   mid3(u16vec3,   u16vec3,   u16vec3);u16vec4   mid3(u16vec4,   u16vec4,   u16vec4);
float minInvocationsAMD(float);vec2  minInvocationsAMD(vec2);vec3  minInvocationsAMD(vec3);vec4  minInvocationsAMD(vec4);int   minInvocationsAMD(int);ivec2 minInvocationsAMD(ivec2);ivec3 minInvocationsAMD(ivec3);ivec4 minInvocationsAMD(ivec4);uint  minInvocationsAMD(uint);uvec2 minInvocationsAMD(uvec2);uvec3 minInvocationsAMD(uvec3);uvec4 minInvocationsAMD(uvec4);double minInvocationsAMD(double);dvec2  minInvocationsAMD(dvec2);dvec3  minInvocationsAMD(dvec3);dvec4  minInvocationsAMD(dvec4);int64_t minInvocationsAMD(int64_t);i64vec2 minInvocationsAMD(i64vec2);i64vec3 minInvocationsAMD(i64vec3);i64vec4 minInvocationsAMD(i64vec4);uint64_t minInvocationsAMD(uint64_t);u64vec2  minInvocationsAMD(u64vec2);u64vec3  minInvocationsAMD(u64vec3);u64vec4  minInvocationsAMD(u64vec4);float16_t minInvocationsAMD(float16_t);f16vec2   minInvocationsAMD(f16vec2);f16vec3   minInvocationsAMD(f16vec3);f16vec4   minInvocationsAMD(f16vec4);int16_t minInvocationsAMD(int16_t);i16vec2 minInvocationsAMD(i16vec2);i16vec3 minInvocationsAMD(i16vec3);i16vec4 minInvocationsAMD(i16vec4);uint16_t minInvocationsAMD(uint16_t);u16vec2  minInvocationsAMD(u16vec2);u16vec3  minInvocationsAMD(u16vec3);u16vec4  minInvocationsAMD(u16vec4);float minInvocationsInclusiveScanAMD(float);vec2  minInvocationsInclusiveScanAMD(vec2);vec3  minInvocationsInclusiveScanAMD(vec3);vec4  minInvocationsInclusiveScanAMD(vec4);int   minInvocationsInclusiveScanAMD(int);ivec2 minInvocationsInclusiveScanAMD(ivec2);ivec3 minInvocationsInclusiveScanAMD(ivec3);ivec4 minInvocationsInclusiveScanAMD(ivec4);uint  minInvocationsInclusiveScanAMD(uint);uvec2 minInvocationsInclusiveScanAMD(uvec2);uvec3 minInvocationsInclusiveScanAMD(uvec3);uvec4 minInvocationsInclusiveScanAMD(uvec4);double minInvocationsInclusiveScanAMD(double);dvec2  minInvocationsInclusiveScanAMD(dvec2);dvec3  minInvocationsInclusiveScanAMD(dvec3);dvec4  minInvocationsInclusiveScanAMD(dvec4);int64_t minInvocationsInclusiveScanAMD(int64_t);i64vec2 minInvocationsInclusiveScanAMD(i64vec2);i64vec3 minInvocationsInclusiveScanAMD(i64vec3);i64vec4 minInvocationsInclusiveScanAMD(i64vec4);uint64_t minInvocationsInclusiveScanAMD(uint64_t);u64vec2  minInvocationsInclusiveScanAMD(u64vec2);u64vec3  minInvocationsInclusiveScanAMD(u64vec3);u64vec4  minInvocationsInclusiveScanAMD(u64vec4);float16_t minInvocationsInclusiveScanAMD(float16_t);f16vec2   minInvocationsInclusiveScanAMD(f16vec2);f16vec3   minInvocationsInclusiveScanAMD(f16vec3);f16vec4   minInvocationsInclusiveScanAMD(f16vec4);int16_t minInvocationsInclusiveScanAMD(int16_t);i16vec2 minInvocationsInclusiveScanAMD(i16vec2);i16vec3 minInvocationsInclusiveScanAMD(i16vec3);i16vec4 minInvocationsInclusiveScanAMD(i16vec4);uint16_t minInvocationsInclusiveScanAMD(uint16_t);u16vec2  minInvocationsInclusiveScanAMD(u16vec2);u16vec3  minInvocationsInclusiveScanAMD(u16vec3);u16vec4  minInvocationsInclusiveScanAMD(u16vec4);float minInvocationsExclusiveScanAMD(float);vec2  minInvocationsExclusiveScanAMD(vec2);vec3  minInvocationsExclusiveScanAMD(vec3);vec4  minInvocationsExclusiveScanAMD(vec4);int   minInvocationsExclusiveScanAMD(int);ivec2 minInvocationsExclusiveScanAMD(ivec2);ivec3 minInvocationsExclusiveScanAMD(ivec3);ivec4 minInvocationsExclusiveScanAMD(ivec4);uint  minInvocationsExclusiveScanAMD(uint);uvec2 minInvocationsExclusiveScanAMD(uvec2);uvec3 minInvocationsExclusiveScanAMD(uvec3);uvec4 minInvocationsExclusiveScanAMD(uvec4);double minInvocationsExclusiveScanAMD(double);dvec2  minInvocationsExclusiveScanAMD(dvec2);dvec3  minInvocationsExclusiveScanAMD(dvec3);dvec4  minInvocationsExclusiveScanAMD(dvec4);int64_t minInvocationsExclusiveScanAMD(int64_t);i64vec2 minInvocationsExclusiveScanAMD(i64vec2);i64vec3 minInvocationsExclusiveScanAMD(i64vec3);i64vec4 minInvocationsExclusiveScanAMD(i64vec4);uint64_t minInvocationsExclusiveScanAMD(uint64_t);u64vec2  minInvocationsExclusiveScanAMD(u64vec2);u64vec3  minInvocationsExclusiveScanAMD(u64vec3);u64vec4  minInvocationsExclusiveScanAMD(u64vec4);float16_t minInvocationsExclusiveScanAMD(float16_t);f16vec2   minInvocationsExclusiveScanAMD(f16vec2);f16vec3   minInvocationsExclusiveScanAMD(f16vec3);f16vec4   minInvocationsExclusiveScanAMD(f16vec4);int16_t minInvocationsExclusiveScanAMD(int16_t);i16vec2 minInvocationsExclusiveScanAMD(i16vec2);i16vec3 minInvocationsExclusiveScanAMD(i16vec3);i16vec4 minInvocationsExclusiveScanAMD(i16vec4);uint16_t minInvocationsExclusiveScanAMD(uint16_t);u16vec2  minInvocationsExclusiveScanAMD(u16vec2);u16vec3  minInvocationsExclusiveScanAMD(u16vec3);u16vec4  minInvocationsExclusiveScanAMD(u16vec4);float maxInvocationsAMD(float);vec2  maxInvocationsAMD(vec2);vec3  maxInvocationsAMD(vec3);vec4  maxInvocationsAMD(vec4);int   maxInvocationsAMD(int);ivec2 maxInvocationsAMD(ivec2);ivec3 maxInvocationsAMD(ivec3);ivec4 maxInvocationsAMD(ivec4);uint  maxInvocationsAMD(uint);uvec2 maxInvocationsAMD(uvec2);uvec3 maxInvocationsAMD(uvec3);uvec4 maxInvocationsAMD(uvec4);double maxInvocationsAMD(double);dvec2  maxInvocationsAMD(dvec2);dvec3  maxInvocationsAMD(dvec3);dvec4  maxInvocationsAMD(dvec4);int64_t maxInvocationsAMD(int64_t);i64vec2 maxInvocationsAMD(i64vec2);i64vec3 maxInvocationsAMD(i64vec3);i64vec4 maxInvocationsAMD(i64vec4);uint64_t maxInvocationsAMD(uint64_t);u64vec2  maxInvocationsAMD(u64vec2);u64vec3  maxInvocationsAMD(u64vec3);u64vec4  maxInvocationsAMD(u64vec4);float16_t maxInvocationsAMD(float16_t);f16vec2   maxInvocationsAMD(f16vec2);f16vec3   maxInvocationsAMD(f16vec3);f16vec4   maxInvocationsAMD(f16vec4);int16_t maxInvocationsAMD(int16_t);i16vec2 maxInvocationsAMD(i16vec2);i16vec3 maxInvocationsAMD(i16vec3);i16vec4 maxInvocationsAMD(i16vec4);uint16_t maxInvocationsAMD(uint16_t);u16vec2  maxInvocationsAMD(u16vec2);u16vec3  maxInvocationsAMD(u16vec3);u16vec4  maxInvocationsAMD(u16vec4);float maxInvocationsInclusiveScanAMD(float);vec2  maxInvocationsInclusiveScanAMD(vec2);vec3  maxInvocationsInclusiveScanAMD(vec3);vec4  maxInvocationsInclusiveScanAMD(vec4);int   maxInvocationsInclusiveScanAMD(int);ivec2 maxInvocationsInclusiveScanAMD(ivec2);ivec3 maxInvocationsInclusiveScanAMD(ivec3);ivec4 maxInvocationsInclusiveScanAMD(ivec4);uint  maxInvocationsInclusiveScanAMD(uint);uvec2 maxInvocationsInclusiveScanAMD(uvec2);uvec3 maxInvocationsInclusiveScanAMD(uvec3);uvec4 maxInvocationsInclusiveScanAMD(uvec4);double maxInvocationsInclusiveScanAMD(double);dvec2  maxInvocationsInclusiveScanAMD(dvec2);dvec3  maxInvocationsInclusiveScanAMD(dvec3);dvec4  maxInvocationsInclusiveScanAMD(dvec4);int64_t maxInvocationsInclusiveScanAMD(int64_t);i64vec2 maxInvocationsInclusiveScanAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanAMD(i64vec4);uint64_t maxInvocationsInclusiveScanAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanAMD(u64vec4);float16_t maxInvocationsInclusiveScanAMD(float16_t);f16vec2   maxInvocationsInclusiveScanAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanAMD(f16vec4);int16_t maxInvocationsInclusiveScanAMD(int16_t);i16vec2 maxInvocationsInclusiveScanAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanAMD(i16vec4);uint16_t maxInvocationsInclusiveScanAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanAMD(u16vec4);float maxInvocationsExclusiveScanAMD(float);vec2  maxInvocationsExclusiveScanAMD(vec2);vec3  maxInvocationsExclusiveScanAMD(vec3);vec4  maxInvocationsExclusiveScanAMD(vec4);int   maxInvocationsExclusiveScanAMD(int);ivec2 maxInvocationsExclusiveScanAMD(ivec2);ivec3 maxInvocationsExclusiveScanAMD(ivec3);ivec4 maxInvocationsExclusiveScanAMD(ivec4);uint  maxInvocationsExclusiveScanAMD(uint);uvec2 maxInvocationsExclusiveScanAMD(uvec2);uvec3 maxInvocationsExclusiveScanAMD(uvec3);uvec4 maxInvocationsExclusiveScanAMD(uvec4);double maxInvocationsExclusiveScanAMD(double);dvec2  maxInvocationsExclusiveScanAMD(dvec2);dvec3  maxInvocationsExclusiveScanAMD(dvec3);dvec4  maxInvocationsExclusiveScanAMD(dvec4);int64_t maxInvocationsExclusiveScanAMD(int64_t);i64vec2 maxInvocationsExclusiveScanAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanAMD(i64vec4);uint64_t maxInvocationsExclusiveScanAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanAMD(u64vec4);float16_t maxInvocationsExclusiveScanAMD(float16_t);f16vec2   maxInvocationsExclusiveScanAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanAMD(f16vec4);int16_t maxInvocationsExclusiveScanAMD(int16_t);i16vec2 maxInvocationsExclusiveScanAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanAMD(i16vec4);uint16_t maxInvocationsExclusiveScanAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanAMD(u16vec4);float addInvocationsAMD(float);vec2  addInvocationsAMD(vec2);vec3  addInvocationsAMD(vec3);vec4  addInvocationsAMD(vec4);int   addInvocationsAMD(int);ivec2 addInvocationsAMD(ivec2);ivec3 addInvocationsAMD(ivec3);ivec4 addInvocationsAMD(ivec4);uint  addInvocationsAMD(uint);uvec2 addInvocationsAMD(uvec2);uvec3 addInvocationsAMD(uvec3);uvec4 addInvocationsAMD(uvec4);double  addInvocationsAMD(double);dvec2   addInvocationsAMD(dvec2);dvec3   addInvocationsAMD(dvec3);dvec4   addInvocationsAMD(dvec4);int64_t addInvocationsAMD(int64_t);i64vec2 addInvocationsAMD(i64vec2);i64vec3 addInvocationsAMD(i64vec3);i64vec4 addInvocationsAMD(i64vec4);uint64_t addInvocationsAMD(uint64_t);u64vec2  addInvocationsAMD(u64vec2);u64vec3  addInvocationsAMD(u64vec3);u64vec4  addInvocationsAMD(u64vec4);float16_t addInvocationsAMD(float16_t);f16vec2   addInvocationsAMD(f16vec2);f16vec3   addInvocationsAMD(f16vec3);f16vec4   addInvocationsAMD(f16vec4);int16_t addInvocationsAMD(int16_t);i16vec2 addInvocationsAMD(i16vec2);i16vec3 addInvocationsAMD(i16vec3);i16vec4 addInvocationsAMD(i16vec4);uint16_t addInvocationsAMD(uint16_t);u16vec2  addInvocationsAMD(u16vec2);u16vec3  addInvocationsAMD(u16vec3);u16vec4  addInvocationsAMD(u16vec4);float addInvocationsInclusiveScanAMD(float);vec2  addInvocationsInclusiveScanAMD(vec2);vec3  addInvocationsInclusiveScanAMD(vec3);vec4  addInvocationsInclusiveScanAMD(vec4);int   addInvocationsInclusiveScanAMD(int);ivec2 addInvocationsInclusiveScanAMD(ivec2);ivec3 addInvocationsInclusiveScanAMD(ivec3);ivec4 addInvocationsInclusiveScanAMD(ivec4);uint  addInvocationsInclusiveScanAMD(uint);uvec2 addInvocationsInclusiveScanAMD(uvec2);uvec3 addInvocationsInclusiveScanAMD(uvec3);uvec4 addInvocationsInclusiveScanAMD(uvec4);double  addInvocationsInclusiveScanAMD(double);dvec2   addInvocationsInclusiveScanAMD(dvec2);dvec3   addInvocationsInclusiveScanAMD(dvec3);dvec4   addInvocationsInclusiveScanAMD(dvec4);int64_t addInvocationsInclusiveScanAMD(int64_t);i64vec2 addInvocationsInclusiveScanAMD(i64vec2);i64vec3 addInvocationsInclusiveScanAMD(i64vec3);i64vec4 addInvocationsInclusiveScanAMD(i64vec4);uint64_t addInvocationsInclusiveScanAMD(uint64_t);u64vec2  addInvocationsInclusiveScanAMD(u64vec2);u64vec3  addInvocationsInclusiveScanAMD(u64vec3);u64vec4  addInvocationsInclusiveScanAMD(u64vec4);float16_t addInvocationsInclusiveScanAMD(float16_t);f16vec2   addInvocationsInclusiveScanAMD(f16vec2);f16vec3   addInvocationsInclusiveScanAMD(f16vec3);f16vec4   addInvocationsInclusiveScanAMD(f16vec4);int16_t addInvocationsInclusiveScanAMD(int16_t);i16vec2 addInvocationsInclusiveScanAMD(i16vec2);i16vec3 addInvocationsInclusiveScanAMD(i16vec3);i16vec4 addInvocationsInclusiveScanAMD(i16vec4);uint16_t addInvocationsInclusiveScanAMD(uint16_t);u16vec2  addInvocationsInclusiveScanAMD(u16vec2);u16vec3  addInvocationsInclusiveScanAMD(u16vec3);u16vec4  addInvocationsInclusiveScanAMD(u16vec4);float addInvocationsExclusiveScanAMD(float);vec2  addInvocationsExclusiveScanAMD(vec2);vec3  addInvocationsExclusiveScanAMD(vec3);vec4  addInvocationsExclusiveScanAMD(vec4);int   addInvocationsExclusiveScanAMD(int);ivec2 addInvocationsExclusiveScanAMD(ivec2);ivec3 addInvocationsExclusiveScanAMD(ivec3);ivec4 addInvocationsExclusiveScanAMD(ivec4);uint  addInvocationsExclusiveScanAMD(uint);uvec2 addInvocationsExclusiveScanAMD(uvec2);uvec3 addInvocationsExclusiveScanAMD(uvec3);uvec4 addInvocationsExclusiveScanAMD(uvec4);double  addInvocationsExclusiveScanAMD(double);dvec2   addInvocationsExclusiveScanAMD(dvec2);dvec3   addInvocationsExclusiveScanAMD(dvec3);dvec4   addInvocationsExclusiveScanAMD(dvec4);int64_t addInvocationsExclusiveScanAMD(int64_t);i64vec2 addInvocationsExclusiveScanAMD(i64vec2);i64vec3 addInvocationsExclusiveScanAMD(i64vec3);i64vec4 addInvocationsExclusiveScanAMD(i64vec4);uint64_t addInvocationsExclusiveScanAMD(uint64_t);u64vec2  addInvocationsExclusiveScanAMD(u64vec2);u64vec3  addInvocationsExclusiveScanAMD(u64vec3);u64vec4  addInvocationsExclusiveScanAMD(u64vec4);float16_t addInvocationsExclusiveScanAMD(float16_t);f16vec2   addInvocationsExclusiveScanAMD(f16vec2);f16vec3   addInvocationsExclusiveScanAMD(f16vec3);f16vec4   addInvocationsExclusiveScanAMD(f16vec4);int16_t addInvocationsExclusiveScanAMD(int16_t);i16vec2 addInvocationsExclusiveScanAMD(i16vec2);i16vec3 addInvocationsExclusiveScanAMD(i16vec3);i16vec4 addInvocationsExclusiveScanAMD(i16vec4);uint16_t addInvocationsExclusiveScanAMD(uint16_t);u16vec2  addInvocationsExclusiveScanAMD(u16vec2);u16vec3  addInvocationsExclusiveScanAMD(u16vec3);u16vec4  addInvocationsExclusiveScanAMD(u16vec4);float minInvocationsNonUniformAMD(float);vec2  minInvocationsNonUniformAMD(vec2);vec3  minInvocationsNonUniformAMD(vec3);vec4  minInvocationsNonUniformAMD(vec4);int   minInvocationsNonUniformAMD(int);ivec2 minInvocationsNonUniformAMD(ivec2);ivec3 minInvocationsNonUniformAMD(ivec3);ivec4 minInvocationsNonUniformAMD(ivec4);uint  minInvocationsNonUniformAMD(uint);uvec2 minInvocationsNonUniformAMD(uvec2);uvec3 minInvocationsNonUniformAMD(uvec3);uvec4 minInvocationsNonUniformAMD(uvec4);double minInvocationsNonUniformAMD(double);dvec2  minInvocationsNonUniformAMD(dvec2);dvec3  minInvocationsNonUniformAMD(dvec3);dvec4  minInvocationsNonUniformAMD(dvec4);int64_t minInvocationsNonUniformAMD(int64_t);i64vec2 minInvocationsNonUniformAMD(i64vec2);i64vec3 minInvocationsNonUniformAMD(i64vec3);i64vec4 minInvocationsNonUniformAMD(i64vec4);uint64_t minInvocationsNonUniformAMD(uint64_t);u64vec2  minInvocationsNonUniformAMD(u64vec2);u64vec3  minInvocationsNonUniformAMD(u64vec3);u64vec4  minInvocationsNonUniformAMD(u64vec4);float16_t minInvocationsNonUniformAMD(float16_t);f16vec2   minInvocationsNonUniformAMD(f16vec2);f16vec3   minInvocationsNonUniformAMD(f16vec3);f16vec4   minInvocationsNonUniformAMD(f16vec4);int16_t minInvocationsNonUniformAMD(int16_t);i16vec2 minInvocationsNonUniformAMD(i16vec2);i16vec3 minInvocationsNonUniformAMD(i16vec3);i16vec4 minInvocationsNonUniformAMD(i16vec4);uint16_t minInvocationsNonUniformAMD(uint16_t);u16vec2  minInvocationsNonUniformAMD(u16vec2);u16vec3  minInvocationsNonUniformAMD(u16vec3);u16vec4  minInvocationsNonUniformAMD(u16vec4);float minInvocationsInclusiveScanNonUniformAMD(float);vec2  minInvocationsInclusiveScanNonUniformAMD(vec2);vec3  minInvocationsInclusiveScanNonUniformAMD(vec3);vec4  minInvocationsInclusiveScanNonUniformAMD(vec4);int   minInvocationsInclusiveScanNonUniformAMD(int);ivec2 minInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsInclusiveScanNonUniformAMD(ivec4);uint  minInvocationsInclusiveScanNonUniformAMD(uint);uvec2 minInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsInclusiveScanNonUniformAMD(uvec4);double minInvocationsInclusiveScanNonUniformAMD(double);dvec2  minInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsInclusiveScanNonUniformAMD(u16vec4);float minInvocationsExclusiveScanNonUniformAMD(float);vec2  minInvocationsExclusiveScanNonUniformAMD(vec2);vec3  minInvocationsExclusiveScanNonUniformAMD(vec3);vec4  minInvocationsExclusiveScanNonUniformAMD(vec4);int   minInvocationsExclusiveScanNonUniformAMD(int);ivec2 minInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsExclusiveScanNonUniformAMD(ivec4);uint  minInvocationsExclusiveScanNonUniformAMD(uint);uvec2 minInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsExclusiveScanNonUniformAMD(uvec4);double minInvocationsExclusiveScanNonUniformAMD(double);dvec2  minInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsExclusiveScanNonUniformAMD(u16vec4);float maxInvocationsNonUniformAMD(float);vec2  maxInvocationsNonUniformAMD(vec2);vec3  maxInvocationsNonUniformAMD(vec3);vec4  maxInvocationsNonUniformAMD(vec4);int   maxInvocationsNonUniformAMD(int);ivec2 maxInvocationsNonUniformAMD(ivec2);ivec3 maxInvocationsNonUniformAMD(ivec3);ivec4 maxInvocationsNonUniformAMD(ivec4);uint  maxInvocationsNonUniformAMD(uint);uvec2 maxInvocationsNonUniformAMD(uvec2);uvec3 maxInvocationsNonUniformAMD(uvec3);uvec4 maxInvocationsNonUniformAMD(uvec4);double maxInvocationsNonUniformAMD(double);dvec2  maxInvocationsNonUniformAMD(dvec2);dvec3  maxInvocationsNonUniformAMD(dvec3);dvec4  maxInvocationsNonUniformAMD(dvec4);int64_t maxInvocationsNonUniformAMD(int64_t);i64vec2 maxInvocationsNonUniformAMD(i64vec2);i64vec3 maxInvocationsNonUniformAMD(i64vec3);i64vec4 maxInvocationsNonUniformAMD(i64vec4);uint64_t maxInvocationsNonUniformAMD(uint64_t);u64vec2  maxInvocationsNonUniformAMD(u64vec2);u64vec3  maxInvocationsNonUniformAMD(u64vec3);u64vec4  maxInvocationsNonUniformAMD(u64vec4);float16_t maxInvocationsNonUniformAMD(float16_t);f16vec2   maxInvocationsNonUniformAMD(f16vec2);f16vec3   maxInvocationsNonUniformAMD(f16vec3);f16vec4   maxInvocationsNonUniformAMD(f16vec4);int16_t maxInvocationsNonUniformAMD(int16_t);i16vec2 maxInvocationsNonUniformAMD(i16vec2);i16vec3 maxInvocationsNonUniformAMD(i16vec3);i16vec4 maxInvocationsNonUniformAMD(i16vec4);uint16_t maxInvocationsNonUniformAMD(uint16_t);u16vec2  maxInvocationsNonUniformAMD(u16vec2);u16vec3  maxInvocationsNonUniformAMD(u16vec3);u16vec4  maxInvocationsNonUniformAMD(u16vec4);float maxInvocationsInclusiveScanNonUniformAMD(float);vec2  maxInvocationsInclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsInclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsInclusiveScanNonUniformAMD(vec4);int   maxInvocationsInclusiveScanNonUniformAMD(int);ivec2 maxInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsInclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsInclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsInclusiveScanNonUniformAMD(uvec4);double maxInvocationsInclusiveScanNonUniformAMD(double);dvec2  maxInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanNonUniformAMD(u16vec4);float maxInvocationsExclusiveScanNonUniformAMD(float);vec2  maxInvocationsExclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsExclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsExclusiveScanNonUniformAMD(vec4);int   maxInvocationsExclusiveScanNonUniformAMD(int);ivec2 maxInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsExclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsExclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsExclusiveScanNonUniformAMD(uvec4);double maxInvocationsExclusiveScanNonUniformAMD(double);dvec2  maxInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanNonUniformAMD(u16vec4);float addInvocationsNonUniformAMD(float);vec2  addInvocationsNonUniformAMD(vec2);vec3  addInvocationsNonUniformAMD(vec3);vec4  addInvocationsNonUniformAMD(vec4);int   addInvocationsNonUniformAMD(int);ivec2 addInvocationsNonUniformAMD(ivec2);ivec3 addInvocationsNonUniformAMD(ivec3);ivec4 addInvocationsNonUniformAMD(ivec4);uint  addInvocationsNonUniformAMD(uint);uvec2 addInvocationsNonUniformAMD(uvec2);uvec3 addInvocationsNonUniformAMD(uvec3);uvec4 addInvocationsNonUniformAMD(uvec4);double addInvocationsNonUniformAMD(double);dvec2  addInvocationsNonUniformAMD(dvec2);dvec3  addInvocationsNonUniformAMD(dvec3);dvec4  addInvocationsNonUniformAMD(dvec4);int64_t addInvocationsNonUniformAMD(int64_t);i64vec2 addInvocationsNonUniformAMD(i64vec2);i64vec3 addInvocationsNonUniformAMD(i64vec3);i64vec4 addInvocationsNonUniformAMD(i64vec4);uint64_t addInvocationsNonUniformAMD(uint64_t);u64vec2  addInvocationsNonUniformAMD(u64vec2);u64vec3  addInvocationsNonUniformAMD(u64vec3);u64vec4  addInvocationsNonUniformAMD(u64vec4);float16_t addInvocationsNonUniformAMD(float16_t);f16vec2   addInvocationsNonUniformAMD(f16vec2);f16vec3   addInvocationsNonUniformAMD(f16vec3);f16vec4   addInvocationsNonUniformAMD(f16vec4);int16_t addInvocationsNonUniformAMD(int16_t);i16vec2 addInvocationsNonUniformAMD(i16vec2);i16vec3 addInvocationsNonUniformAMD(i16vec3);i16vec4 addInvocationsNonUniformAMD(i16vec4);uint16_t addInvocationsNonUniformAMD(uint16_t);u16vec2  addInvocationsNonUniformAMD(u16vec2);u16vec3  addInvocationsNonUniformAMD(u16vec3);u16vec4  addInvocationsNonUniformAMD(u16vec4);float addInvocationsInclusiveScanNonUniformAMD(float);vec2  addInvocationsInclusiveScanNonUniformAMD(vec2);vec3  addInvocationsInclusiveScanNonUniformAMD(vec3);vec4  addInvocationsInclusiveScanNonUniformAMD(vec4);int   addInvocationsInclusiveScanNonUniformAMD(int);ivec2 addInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsInclusiveScanNonUniformAMD(ivec4);uint  addInvocationsInclusiveScanNonUniformAMD(uint);uvec2 addInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsInclusiveScanNonUniformAMD(uvec4);double addInvocationsInclusiveScanNonUniformAMD(double);dvec2  addInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsInclusiveScanNonUniformAMD(u16vec4);float addInvocationsExclusiveScanNonUniformAMD(float);vec2  addInvocationsExclusiveScanNonUniformAMD(vec2);vec3  addInvocationsExclusiveScanNonUniformAMD(vec3);vec4  addInvocationsExclusiveScanNonUniformAMD(vec4);int   addInvocationsExclusiveScanNonUniformAMD(int);ivec2 addInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsExclusiveScanNonUniformAMD(ivec4);uint  addInvocationsExclusiveScanNonUniformAMD(uint);uvec2 addInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsExclusiveScanNonUniformAMD(uvec4);double addInvocationsExclusiveScanNonUniformAMD(double);dvec2  addInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsExclusiveScanNonUniformAMD(u16vec4);float swizzleInvocationsAMD(float, uvec4);vec2  swizzleInvocationsAMD(vec2,  uvec4);vec3  swizzleInvocationsAMD(vec3,  uvec4);vec4  swizzleInvocationsAMD(vec4,  uvec4);int   swizzleInvocationsAMD(int,   uvec4);ivec2 swizzleInvocationsAMD(ivec2, uvec4);ivec3 swizzleInvocationsAMD(ivec3, uvec4);ivec4 swizzleInvocationsAMD(ivec4, uvec4);uint  swizzleInvocationsAMD(uint,  uvec4);uvec2 swizzleInvocationsAMD(uvec2, uvec4);uvec3 swizzleInvocationsAMD(uvec3, uvec4);uvec4 swizzleInvocationsAMD(uvec4, uvec4);float swizzleInvocationsMaskedAMD(float, uvec3);vec2  swizzleInvocationsMaskedAMD(vec2,  uvec3);vec3  swizzleInvocationsMaskedAMD(vec3,  uvec3);vec4  swizzleInvocationsMaskedAMD(vec4,  uvec3);int   swizzleInvocationsMaskedAMD(int,   uvec3);ivec2 swizzleInvocationsMaskedAMD(ivec2, uvec3);ivec3 swizzleInvocationsMaskedAMD(ivec3, uvec3);ivec4 swizzleInvocationsMaskedAMD(ivec4, uvec3);uint  swizzleInvocationsMaskedAMD(uint,  uvec3);uvec2 swizzleInvocationsMaskedAMD(uvec2, uvec3);uvec3 swizzleInvocationsMaskedAMD(uvec3, uvec3);uvec4 swizzleInvocationsMaskedAMD(uvec4, uvec3);float writeInvocationAMD(float, float, uint);vec2  writeInvocationAMD(vec2,  vec2,  uint);vec3  writeInvocationAMD(vec3,  vec3,  uint);vec4  writeInvocationAMD(vec4,  vec4,  uint);int   writeInvocationAMD(int,   int,   uint);ivec2 writeInvocationAMD(ivec2, ivec2, uint);ivec3 writeInvocationAMD(ivec3, ivec3, uint);ivec4 writeInvocationAMD(ivec4, ivec4, uint);uint  writeInvocationAMD(uint,  uint,  uint);uvec2 writeInvocationAMD(uvec2, uvec2, uint);uvec3 writeInvocationAMD(uvec3, uvec3, uint);uvec4 writeInvocationAMD(uvec4, uvec4, uint);uint mbcntAMD(uint64_t);
float near;float far;float diff;
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x);
float%d
float%dx%d
float1
float16 types can only be in uniform block or buffer storage
float16BitsToInt16
float16BitsToUint16
float16_t
float16_t 
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4);
float16_t interpolateAtCentroid(float16_t);f16vec2   interpolateAtCentroid(f16vec2);f16vec3   interpolateAtCentroid(f16vec3);f16vec4   interpolateAtCentroid(f16vec4);float16_t interpolateAtSample(float16_t, int);f16vec2   interpolateAtSample(f16vec2,   int);f16vec3   interpolateAtSample(f16vec3,   int);f16vec4   interpolateAtSample(f16vec4,   int);float16_t interpolateAtOffset(float16_t, f16vec2);f16vec2   interpolateAtOffset(f16vec2,   f16vec2);f16vec3   interpolateAtOffset(f16vec3,   f16vec2);f16vec4   interpolateAtOffset(f16vec4,   f16vec2);
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f16vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 transpose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4);
float1x1
float1x2
float1x3
float1x4
float2
float2x1
float2x2
float2x3
float2x4
float3
float32_t
float32_t matrix
float32_t vector
float3x1
float3x2
float3x3
float3x4
float4
float4 %s: register( c%d );
float4x1
float4x2
float4x3
float4x4
float64_t
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4);
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2);
float64_t matrix
float64_t vector
floatBitsToInt
floatBitsToUint
floating-point fast math mode
floating-point rounding mode
floating-point suffix
flockfile
floor
floorf
floorl
fmax_common
fmin_common
fmodf
fmodl
fopen
fopen64
for (
for ( ; 
for Vulkan environment.
for header name: %s
for non-parameter, can only apply to 'in' or no storage qualifier
for sub-statement
for-loop initializer statement
for_init_statement
for_rest_statement
forcecase
forcing 32-bit vector type to non 64-bit scalar
forcing non 32-bit vector type
format
format requires readonly or writeonly memory qualifier
format_r11fg11fb10f
format_r16
format_r16f
format_r16i
format_r16snorm
format_r16ui
format_r32f
format_r32i
format_r32ui
format_r8
format_r8i
format_r8snorm
format_r8ui
format_rg16
format_rg16f
format_rg16i
format_rg16snorm
format_rg16ui
format_rg32f
format_rg32i
format_rg32ui
format_rg8
format_rg8i
format_rg8snorm
format_rg8ui
format_rgb10a2
format_rgb10a2ui
format_rgba16
format_rgba16f
format_rgba16i
format_rgba16snorm
format_rgba16ui
format_rgba32f
format_rgba32i
format_rgba32ui
format_rgba8
format_rgba8i
format_rgba8snorm
format_rgba8ui
forward_pointer(
fp128
fpext
fpmath
fprintf
fptosi
fptoui
fptrunc
fputc
fputs
fputs$UNIX2003
fract
fractional_even
fractional_even_spacing
fractional_odd
fractional_odd_spacing
fragColor
fragment
fragment input block
fragment outputs sharing the same location must be the same basic type
fragment shader barycentric
fragment shader interlock layout qualifier
fragment shader output
fragment-shader array-of-array input
fragment-shader array-of-array output
fragment-shader array-of-struct input
fragment-shader struct input
fragment-shader struct input containing an array
fragment-shader struct input containing structure
fragmentFetchAMD
fragmentMaskFetchAMD
fread
free_it
freebsd
frexp
frexpf
frexpl
friend
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftransform
ftransform()
ftrylockfile
fully_specified_type
function
function '
function already has a body
function body can't be in a declarator list
function body can't be in a typedef
function call arguments
function call, method, or subroutine call expected
function cannot take any parameter(s)
function control
function does not return a value:
function end without function start
function inside function
function name is redeclaration of existing name
function not supported
function parameter attribute
function parameter list
function parameter requires array size
function parameters
function typedefs not implemented
function_call
function_call_generic
function_call_header
function_call_header_no_parameters
function_call_header_with_parameters
function_call_or_method
function_declarator
function_definition
function_header
function_header_with_parameters
function_identifier
function_prototype
funlockfile
future reserved word in ES 300 and keyword in GLSL
fvec2
fvec3
fvec4
fwidth
fwidthCoarse
fwidthFine
fwrite
fwrite$UNIX2003
fwvHc
g.value
g2.approx.
g2.approx.ftz.f
gD9;}bH
g_boolAttr_
g_constants
g_constants[ g_nDataIdx ].%s
g_float2Attr_
g_float3Attr_
g_float4Attr_
g_floatAttr_
g_inputTexture
g_inputTexture2D_
g_inputTexture2D_%s
g_inputTexture3D_
g_inputTexture3D_%s
g_inputTextureCube_
g_inputTextureCube_%s
g_intAttr_
g_pMemAlloc
g_renderState_
g_texAttr_
g_vShared
gather-instructions
general-case cross edges (requires artificial loop)
generic
geode
geometry
geometry input primitive
geometry output primitive
geometry shader passthrough
geometry shaders
getc_unlocked
getchar
getelementptr
getenv
getitimer
getlogin_r
getpwnam
gettimeofday
gfffA
gfffffff
gfffffffH
gfffffffH+L$`H
gfffffffI
gfffffffI+
gfffffffI+J
gfffffffL
gfffffffL+
glAttachShader
glCompileShader
glCreateProgram
glCreateShader
glCreateShaderProgramv
glDeleteProgram
glDeleteProgramPipelines
glDeleteShader
glDetachShader
glGenProgramPipelines
glGetActiveUniform
glGetActiveUniformBlockName
glGetActiveUniformBlockiv
glGetActiveUniformsiv
glGetProgramBinary
glGetProgramInfoLog
glGetProgramResourceiv
glGetProgramiv
glGetShaderInfoLog
glGetShaderiv
glGetString
glGetStringi
glGetUniformBlockIndex
glGetUniformIndices
glGetUniformLocation
glIsProgram
glLinkProgram
glProgramBinary
glProgramParameteri
glShaderSource
glUseProgramStages
gl_BackColor
gl_BackSecondaryColor
gl_BaryCoordNV
gl_BaryCoordNoPerspAMD
gl_BaryCoordNoPerspCentroidAMD
gl_BaryCoordNoPerspNV
gl_BaryCoordNoPerspSampleAMD
gl_BaryCoordPullModelAMD
gl_BaryCoordSmoothAMD
gl_BaryCoordSmoothCentroidAMD
gl_BaryCoordSmoothSampleAMD
gl_BaseInstance
gl_BaseInstanceARB
gl_BaseVertex
gl_BaseVertexARB
gl_BoundingBox
gl_BoundingBoxEXT
gl_BoundingBoxOES
gl_ClipDistance
gl_ClipDistance array size
gl_ClipDistancePerViewNV
gl_ClipDistancePerViewNV array size
gl_ClipDistance[%d] = %s.%s.%s;
gl_ClipDistance[%d] = streamName.%s.%s; \
gl_ClipDistance[0]
gl_ClipDistance[0] = 0.0; // Initialize in case the shader does not write to it to avoid relying on undefined behavior.
gl_ClipDistance[0] = 0.0; \
gl_ClipDistance[0] = gl_in[0].gl_ClipDistance[0] * gl_TessCoord.x + gl_in[1].gl_ClipDistance[0] * gl_TessCoord.y +  gl_in[2].gl_ClipDistance[0] * gl_TessCoord.z;
gl_ClipDistance[0] = streamName.%s; \
gl_ClipDistance[1]
gl_ClipDistance[2]
gl_ClipDistance[3]
gl_ClipDistance[4]
gl_ClipDistance[5]
gl_ClipDistance[6]
gl_ClipDistance[7]
gl_ClipVertex
gl_Color
gl_CullDistance
gl_CullDistance array size
gl_CullDistancePerViewNV
gl_CullDistancePerViewNV array size
gl_DeviceIndex
gl_DrawID
gl_DrawIDARB
gl_EmbBackColor
gl_EmbBackSecondaryColor
gl_EmbFogFragCoord
gl_EmbFrontColor
gl_EmbFrontSecondaryColor
gl_EmbMultiTexCoord0
gl_EmbMultiTexCoord1
gl_EmbMultiTexCoord2
gl_EmbMultiTexCoord3
gl_EmbMultiTexCoord4
gl_EmbMultiTexCoord5
gl_EmbMultiTexCoord6
gl_EmbMultiTexCoord7
gl_EmbNormal
gl_EmbTexCoord
gl_EmbVertex
gl_FogCoord
gl_FogFragCoord
gl_FragColor
gl_FragCoord
gl_FragCoord origin is upper left
gl_FragCoord pixel center is integer
gl_FragCoord redeclarations must match across shaders
gl_FragData
gl_FragDepth
gl_FragDepthEXT
gl_FragFullyCoveredNV
gl_FragInvocationCountEXT
gl_FragSizeEXT
gl_FragStencilRefARB
gl_FragmentSizeNV
gl_FrontColor
gl_FrontFacing
gl_FrontSecondaryColor
gl_GlobalInvocationID
gl_HelperInvocation
gl_HitKindNV
gl_HitTNV
gl_IncomingRayFlagsNV
gl_InstanceCustomIndexNV
gl_InstanceID
gl_InstanceId
gl_InstanceIndex
gl_InvocationID
gl_InvocationsPerPixelNV
gl_LaunchIDNV
gl_LaunchSizeNV
gl_Layer
gl_Layer = int( streamName.%s ); \
gl_LayerPerViewNV
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_MaxClipDistances
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxComputeWorkGroupSize
gl_MaxCullDistances
gl_MaxMeshOutputPrimitivesNV
gl_MaxMeshOutputVerticesNV
gl_MaxMeshViewCountNV
gl_MaxMeshWorkGroupSizeNV
gl_MaxProgramTexelOffset
gl_MaxTaskWorkGroupSizeNV
gl_MaxTextureCoords
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackBuffers is %d
gl_MaxTransformFeedbackInterleavedComponents
gl_MaxTransformFeedbackInterleavedComponents is %d
gl_MaxViewports
gl_MeshPerPrimitiveNV
gl_MeshPerVertexNV
gl_MeshPrimitivesNV
gl_MeshVerticesNV
gl_MeshViewCountNV
gl_MeshViewIndicesNV
gl_MinProgramTexelOffset
gl_ModelViewProjectionMatrix_sim
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_Normal
gl_NumSamples
gl_NumSubgroups
gl_NumWorkGroups
gl_ObjectRayDirectionNV
gl_ObjectRayOriginNV
gl_ObjectToWorldNV
gl_PatchVertices
gl_PatchVerticesIn
gl_PerFragment
gl_PerVertex
gl_PointCoord
gl_PointSize
gl_Position
gl_Position = streamName.%s; \
gl_Position.y = -gl_Position.y; %s
gl_Position.z =  gl_Position.z * 2.0 - gl_Position.w; %s
gl_PositionPerViewNV
gl_PrimitiveCountNV
gl_PrimitiveID
gl_PrimitiveID = int( streamName.%s ); \
gl_PrimitiveIDIn
gl_PrimitiveIndicesNV
gl_RayTmaxNV
gl_RayTminNV
gl_SIMDGroupSizeAMD
gl_SMCountNV
gl_SMIDNV
gl_SampleID
gl_SampleMask
gl_SampleMaskIn
gl_SampleMask[0]
gl_SamplePosition
gl_ScopeDevice
gl_ScopeInvocation
gl_ScopeSubgroup
gl_ScopeWorkgroup
gl_SecondaryColor
gl_SecondaryPositionNV
gl_SecondaryViewportMaskNV
gl_SemanticsAcquire
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsAcquireRelease
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
gl_SemanticsMakeAvailable
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
gl_SemanticsRelaxed
gl_SemanticsRelease
gl_SemanticsRelease must not be used with (image) atomic load
gl_SemanticsVolatile
gl_SemanticsVolatile must not be used with memoryBarrier or controlBarrier
gl_StorageSemanticsBuffer
gl_StorageSemanticsImage
gl_StorageSemanticsNone
gl_StorageSemanticsOutput
gl_StorageSemanticsShared
gl_SubGroupEqMaskARB
gl_SubGroupGeMaskARB
gl_SubGroupGtMaskARB
gl_SubGroupInvocationARB
gl_SubGroupLeMaskARB
gl_SubGroupLtMaskARB
gl_SubGroupSizeARB
gl_SubgroupEqMask
gl_SubgroupGeMask
gl_SubgroupGtMask
gl_SubgroupID
gl_SubgroupInvocationID
gl_SubgroupLeMask
gl_SubgroupLtMask
gl_SubgroupSize
gl_TaskCountNV
gl_TessCoord
gl_TessLevelInner
gl_TessLevelOuter
gl_TexCoord
gl_TexCoord array size
gl_Vertex
gl_VertexID
gl_VertexId
gl_VertexIndex
gl_Vertex_sim
gl_ViewID_OVR
gl_ViewIndex
gl_ViewportIndex
gl_ViewportIndex = int( streamName.%s ); \
gl_ViewportMask
gl_ViewportMaskPerViewNV
gl_WarpIDNV
gl_WarpsPerSMNV
gl_WorkGroupID
gl_WorkGroupSize
gl_WorldRayDirectionNV
gl_WorldRayOriginNV
gl_WorldToObjectNV
gl_in
gl_out
gl_out[gl_InvocationID].gl_ClipDistance[%d] = %s.%s.%s;
gl_out[gl_InvocationID].gl_ClipDistance[0] = gl_in[gl_InvocationID].gl_ClipDistance[0];
gla.blendEquations
gla.entrypoint
gla.input
gla.inputPrimitive
gla.inputs
gla.invariant
gla.invocations
gla.localSize
gla.noStaticUse
gla.numVertices
gla.originUpperLeft
gla.output
gla.outputPrimitive
gla.outputs
gla.pixelCenterInteger
gla.pointMode
gla.precision
gla.shared
gla.uniform
gla.uniforms
gla.vertexOrder
gla.vertexSpacing
gla.xfbMode
gla_constGEP
gla_globalAgg
global
global 
global binding
global const initializers must be constant
global storage input qualifier cannot be used in a compute shader
global storage output qualifier cannot be used in a compute shader
global_cbuffer_binding
globallycoherent
globalopt
glslang aggregate
glslang binary operation
glslang failed to build reflection information.
glslang function call
glslang qualifier
glslang unary
glslang_binary_double_output
gnueabi
gnueabihf
gnux32
graph
greaterThan
greaterThanEqual
group operation
groupMemoryBarrier
groupshared
gs_4_0
gs_4_1
gs_5_0
gsetjmp
h VWATH
h.acc.s
h.nopack
h.r.ph
h.r.qb
h.sjlj.callsite
h.sjlj.functioncontext
h.sjlj.longjmp
h>1my
hA]A\_^[]
hA^A\
hA^A\_[
hA^A]^[
hA^_][
hA^_^[
hA_A]_^][
hA_A^A]A\
hA_A^A]A\_^[]
hA_A^A]A\_^][
hA_A^_^][
hA__[]
h_^[]
h_^][
ha1msg
haiku
half float image
half float literal
half float matrix
half float sampler
half float subpass input
half float texture
half float vector
half floating-point suffix
half1
half1x1
half1x2
half1x3
half1x4
half2
half2x1
half2x2
half2x3
half2x4
half3
half3x1
half3x2
half3x3
half3x4
half4
half4x1
half4x2
half4x3
half4x4
halfBitsToInt16
halfBitsToUint16
half_cos
half_divide
half_exp
half_exp10
half_exp2
half_log
half_log10
half_log2
half_powr
half_recip
half_rsqrt
half_sin
half_sqrt
half_tan
hared
has storage class StorageBuffer.
header name too long
help-hidden
help-list
help-list-hidden
helperInvocationEXT
hexadecimal literal too big
hexadecimal literal too long
hexagon
hidden 
highp
highp 
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth;
highp   vec4  gl_Position;mediump float gl_PointSize;
highp float gl_FragDepthEXT;
highp float near;highp float far;highp float diff;
highp int
highp ivec2 textureSize(__samplerExternal2DY2YEXT, int lod);vec4 texture(__samplerExternal2DY2YEXT, vec2);vec4 texture(__samplerExternal2DY2YEXT, vec2, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec3);vec4 textureProj(__samplerExternal2DY2YEXT, vec3, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec4);vec4 textureProj(__samplerExternal2DY2YEXT, vec4, float bias);vec4 texelFetch(__samplerExternal2DY2YEXT sampler, ivec2, int lod);
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod);
highp precision qualifier
highp uint
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2);
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4);
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint);
highp vec4  gl_Position;highp float gl_PointSize;
hitAttributeNV
hitAttributeNV block
hj>>d
hld.n
hlsl-iomap
hlsl-offsets
hlslvariablesLexerNew
hlslvariablesLexerNewSSD
hlslvariablesParserNew
hlslvariablesParserNewSSD
host unreachable
hraddshs
hread.pointer
hs_5_0
htonl
htons
http://ocsp.digicert.com0A
http://ocsp.digicert.com0C
http://ocsp.digicert.com0N
https://www.digicert.com/CPS0
hvec2
hvec3
hvec4
hyp. cosine
hyp. sine
hyp. tangent
hypot
i.256
i16vec2
i16vec3
i16vec4
i32vec2
i32vec3
i32vec4
i64vec2
i64vec3
i64vec4
i8vec2
i8vec3
i8vec4
iHD8y
iMulExtended
iOS SM 4.0 (VULKAN)
iP;D$d|
iW!]4/
icoopmatNV
icoopmatNV coopMatMulAddNV(icoopmatNV A, icoopmatNV B, icoopmatNV C);
identical
identifier
identifier after ::
identifier not previously declared
identifier removed
identifier_list
identifiers containing consecutive underscores ("__") are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version <= 300
identifiers starting with "gl_" are reserved
identify-structures
if ( gl_InvocationID == 0 )
if it has storage class Uniform.
if-conversion
if_conversion_pass
ifdef
ifetime.end
ifetime.start
ifmerge
ifndef
iglongjmp
ignoreIntersectionNV
ignored
ignoring shader_profile
ignoring unrecognized register type
iimage1D
iimage1DArray
iimage2D
iimage2DArray
iimage2DMS
iimage2DMSArray
iimage2DRect
iimage3D
iimageBuffer
iimageCube
iimageCubeArray
illegal byte sequence
illegal use of escape character
illegal use of type 'void'
ilogb
image
image access
image channel data type
image channel order
image format
image formats must match
image load store
image load-store format
image variables not declared 'writeonly' and without a format layout qualifier
image(
image1D
image1DArray
image2D
image2DArray
image2DMS
image2DMSArray
image2DRect
image3D
imageAlgorithm
imageAtomic
imageAtomicAdd
imageAtomicAnd
imageAtomicCompSwap
imageAtomicExchange
imageAtomicLoad
imageAtomicMax
imageAtomicMin
imageAtomicOr
imageAtomicStore
imageAtomicXor
imageBuffer
imageCube
imageCubeArray
imageLoad
imageLoadLod
imageLoadLodAMD
imageQuerySamples
imageQuerySize
imageSampleFootprintClampNV
imageSampleFootprintGradNV
imageSampleFootprintLodNV
imageSampleFootprintNV
imageSamples
imageSamples(readonly writeonly volatile coherent 
imageSize
imageStore
imageStoreLod
imageStoreLodAMD
immediate sampler state
implicitly-sized array
imulExtended
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTmaxNV;in    float  gl_HitTNV;in    uint   gl_HitKindNV;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_WorldToObjectNV;in    uint   gl_IncomingRayFlagsNV;
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTmaxNV;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_WorldToObjectNV;in    uint   gl_IncomingRayFlagsNV;
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTmaxNV;in    uint   gl_IncomingRayFlagsNV;
in Function or Private storage classes or as function parameters
in Vulkan evironment, OpControlBarrier execution scope must be Subgroup for Fragment, Vertex, Geometry and TessellationEvaluation execution models
in bool gl_FragFullyCoveredNV;
in float gl_ClipDistance[];
in float gl_CullDistance[];bool gl_HelperInvocation;
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;
in for stage inputs
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;};
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;highp vec4 gl_SecondaryPositionNV;highp vec4 gl_PositionPerViewNV[];} gl_in[gl_MaxPatchVertices];
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[];
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in highp   uint  gl_NumSubgroups;in highp   uint  gl_SubgroupID;
in highp int gl_DeviceIndex;
in highp int gl_DeviceIndex;in highp int gl_ViewIndex;
in highp int gl_DeviceIndex;in int gl_DrawIDARB;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_PrimitiveIDIn;in highp int gl_InvocationID;
in highp int gl_VertexID;in highp int gl_InstanceID;
in highp int gl_VertexIndex;in highp int gl_InstanceIndex;
in highp uint gl_ViewID_OVR;
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID;
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB;
in int gl_DrawID;
in int gl_InvocationID;
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_VertexIndex;in int gl_InstanceIndex;
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;in highp   uint  gl_WarpsPerSMNV;in highp   uint  gl_SMCountNV;in highp   uint  gl_WarpIDNV;in highp   uint  gl_SMIDNV;
in the OpenCL environment.
in vec2 gl_BaryCoordNoPerspAMD;in vec2 gl_BaryCoordNoPerspCentroidAMD;in vec2 gl_BaryCoordNoPerspSampleAMD;in vec2 gl_BaryCoordSmoothAMD;in vec2 gl_BaryCoordSmoothCentroidAMD;in vec2 gl_BaryCoordSmoothSampleAMD;in vec3 gl_BaryCoordPullModelAMD;
in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV;
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord;
in xfb mode
in.approx.f
in.approx.ftz.f
in/out block layout
in/out must appear before const
inappropriate io control operation
include
inclusive-or
inclusive_or_expression
incomplete method syntax
inconsistent input primitive for array size of
inconsistent output array size of
inconsistent output number of vertices for array size of
incorrect directive, expected identifier
index
index layout qualifier on fragment output
index out of range '%d'
indexable
indirect index
indirectbr
inductive loop index modified
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression"
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression"
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression"
indvar
indvar.conv
indvar.next
indvars
ineIA
infinity
infloop
info-output-file
info: 
init_declarator_list
initialized declaration
initializer
initializer list
initializer requires a variable, not a member
initializer: Output, Private, or Function
initializer_list
inity
inline
inline-cost
inline-entry-points-exhaustive
inline-threshold
inline_exhaustive_pass
inlinehint
inlinehint-threshold
inout
inout 
input
input attachment
input block
input blocks cannot be used in a mesh shader
input primitive = 
input primitive geometry redefinition
inputColorSpace
input_attachment_index
inreg
insert
insertelement
inserti128
insertvalue
instance
instcombine
instruction in its block.
instsimplify
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value);
int gl_InstanceID;
int gl_VertexID;
int scalar or vector type
int scalar or vector with the same number of 
int sparseImageLoadARB(readonly volatile coherent 
int sparseImageLoadLodAMD(readonly volatile coherent 
int textureQueryLevels(
int(uint
int16BitsToFloat16
int16BitsToHalf
int16_t
int1x1
int1x2
int1x3
int1x4
int2x1
int2x2
int2x3
int2x4
int32_t
int3x1
int3x2
int3x3
int3x4
int4x1
int4x2
int4x3
int4x4
int64BitsToDouble
int64_t
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(double);i64vec2 doubleBitsToInt64(dvec2);i64vec3 doubleBitsToInt64(dvec3);i64vec4 doubleBitsToInt64(dvec4);uint64_t doubleBitsToUint64(double);u64vec2  doubleBitsToUint64(dvec2);u64vec3  doubleBitsToUint64(dvec3);u64vec4  doubleBitsToUint64(dvec4);double int64BitsToDouble(int64_t);dvec2  int64BitsToDouble(i64vec2);dvec3  int64BitsToDouble(i64vec3);dvec4  int64BitsToDouble(i64vec4);double uint64BitsToDouble(uint64_t);dvec2  uint64BitsToDouble(u64vec2);dvec3  uint64BitsToDouble(u64vec3);dvec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int64_t findLSB(int64_t);i64vec2 findLSB(i64vec2);i64vec3 findLSB(i64vec3);i64vec4 findLSB(i64vec4);int64_t findLSB(uint64_t);i64vec2 findLSB(u64vec2);i64vec3 findLSB(u64vec3);i64vec4 findLSB(u64vec4);int64_t findMSB(int64_t);i64vec2 findMSB(i64vec2);i64vec3 findMSB(i64vec3);i64vec4 findMSB(i64vec4);int64_t findMSB(uint64_t);i64vec2 findMSB(u64vec2);i64vec3 findMSB(u64vec3);i64vec4 findMSB(u64vec4);
int8_t
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3   uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);float64_t radians(float64_t);f64vec2   radians(f64vec2);f64vec3   radians(f64vec3);f64vec4   radians(f64vec4);float64_t degrees(float64_t);f64vec2   degrees(f64vec2);f64vec3   degrees(f64vec3);f64vec4   degrees(f64vec4);float64_t sin(float64_t);f64vec2   sin(f64vec2);f64vec3   sin(f64vec3);f64vec4   sin(f64vec4);float64_t cos(float64_t);f64vec2   cos(f64vec2);f64vec3   cos(f64vec3);f64vec4   cos(f64vec4);float64_t tan(float64_t);f64vec2   tan(f64vec2);f64vec3   tan(f64vec3);f64vec4   tan(f64vec4);float64_t asin(float64_t);f64vec2   asin(f64vec2);f64vec3   asin(f64vec3);f64vec4   asin(f64vec4);float64_t acos(float64_t);f64vec2   acos(f64vec2);f64vec3   acos(f64vec3);f64vec4   acos(f64vec4);float64_t atan(float64_t, float64_t);f64vec2   atan(f64vec2,   f64vec2);f64vec3   atan(f64vec3,   f64vec3);f64vec4   atan(f64vec4,   f64vec4);float64_t atan(float64_t);f64vec2   atan(f64vec2);f64vec3   atan(f64vec3);f64vec4   atan(f64vec4);float64_t sinh(float64_t);f64vec2   sinh(f64vec2);f64vec3   sinh(f64vec3);f64vec4   sinh(f64vec4);float64_t cosh(float64_t);f64vec2   cosh(f64vec2);f64vec3   cosh(f64vec3);f64vec4   cosh(f64vec4);float64_t tanh(float64_t);f64vec2   tanh(f64vec2);f64vec3   tanh(f64vec3);f64vec4   tanh(f64vec4);float64_t asinh(float64_t);f64vec2   asinh(f64vec2);f64vec3   asinh(f64vec3);f64vec4   asinh(f64vec4);float64_t acosh(float64_t);f64vec2   acosh(f64vec2);f64vec3   acosh(f64vec3);f64vec4   acosh(f64vec4);float64_t atanh(float64_t);f64vec2   atanh(f64vec2);f64vec3   atanh(f64vec3);f64vec4   atanh(f64vec4);float64_t pow(float64_t, float64_t);f64vec2   pow(f64vec2,   f64vec2);f64vec3   pow(f64vec3,   f64vec3);f64vec4   pow(f64vec4,   f64vec4);float64_t exp(float64_t);f64vec2   exp(f64vec2);f64vec3   exp(f64vec3);f64vec4   exp(f64vec4);float64_t log(float64_t);f64vec2   log(f64vec2);f64vec3   log(f64vec3);f64vec4   log(f64vec4);float64_t exp2(float64_t);f64vec2   exp2(f64vec2);f64vec3   exp2(f64vec3);f64vec4   exp2(f64vec4);float64_t log2(float64_t);f64vec2   log2(f64vec2);f64vec3   log2(f64vec3);f64vec4   log2(f64vec4);
intBitsToFloat
integer
integer scalar or vector: 
integer_expression
intel_ocl_bicc
inteldialect 
interface
interlock ordering = 
intermVec
internal 
internal max is %d
interpolant
interpolateAtCentroid
interpolateAtOffset
interpolateAtSample
interpolateAtVertex
interpolateAtVertexAMD
interpolation qualifiers must appear before storage and precision qualifiers
interpolation_qualifier
interrupted
intersection
intrinsic without valid intrinsic ID
intrinsic-combine
inttoptr
invalid argument
invalid bitset<N> position
invalid clip semantic
invalid cull semantic
invalid default parameter value
invalid directive
invalid directive:
invalid domain
invalid hash bucket count
invalid map<K, T> key
invalid maxvertexcount
invalid outputcontrolpoints
invalid outputtopology
invalid parameter after default value parameters
invalid partitioning
invalid patch constant function
invalid preprocessor command
invalid seek
invalid string position
invalid unordered_map<K, T> key
invalid vector<T> subscript
invalid_parameter
invariant
invariant 
invariant qualifier must appear before interpolation, storage, and precision qualifiers 
invariant.load
invariant_qualifier
inverse
inverse sqrt
inversesqrt
invert-y
invocation operation
invocations
invocations = 
invoke
io error
ios_base::badbit set
ios_base::eofbit set
ios_base::failbit set
iostream
iostream stream error
iprintf
ips.l
ips.prec
ips.precr.sra.r.ph.w
ipsccp
irc.ldd
is a directory
is a matrix with stride 
is also the end of the line, so you must check your lexer rules
is an improperly straddling vector at offset 
is invalid
is missing an Offset decoration
is not post dominated by
isVoid
isampler1D
isampler1DArray
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler2DRect
isampler3D
isamplerBuffer
isamplerCube
isamplerCubeArray
isascii
iscard
isdigit
isdigittmp
isfinite
isinf
isnan
isneg
isnull
isoline
isolines
ispos
isubpassInput
isubpassInputMS
iteration_multiple
iteration_statement
iteration_statement_nonattributed
itexture1D
itexture1DArray
itexture2D
itexture2DArray
itexture2DMS
itexture2DMSArray
itexture2DRect
itexture3D
itextureBuffer
itextureCube
itextureCubeArray
itpack
its block.
itsplit
itspliti
iu+-,
iv-users
iv.approx.ftz.f
iv.sd
iv.ss
ivec2
ivec2(uvec2
ivec3
ivec3(uvec3
ivec4
ivec4(uvec4
j H+j
j>>A?1
j?V()
j?{$*
jlj.lsda
jlj.setjmp
jump_statement
just.trampoline
k H+k
k VWAVH
k0i0$
k8-sse3
k>4	F
k@L;i
k`H9k0t
keep-uncalled
kernel enqeue flags
kernel profiling info
kfreebsd
kind of sampler
l$ 9Q
l$ AUAVAWH
l$ AVH
l$ E3
l$ H+
l$ H;
l$ L;
l$ UAVAWH
l$ VATAUAWL
l$ VATAWH
l$ VAVAWH
l$ VH
l$ VWATAVAWH
l$ VWATH
l$ VWAUAVAWH
l$ VWAVH
l$ VWAWH
l$ WATAUAVAWH
l$ WATAWH
l$ WAVAWH
l$ WH
l$$Hc
l$(A;
l$(E2
l$(E3
l$(H+
l$(H;
l$0@2
l$0@8{-t
l$0A+
l$0A9u
l$0E3
l$0E9l$
l$0H+
l$0H9
l$0H9E0
l$0I+
l$0L9n 
l$0L;
l$0t;H
l$0~8H
l$8D8j-t
l$8E2
l$8E3
l$8H+
l$8H;
l$8Hk
l$8Lc!L
l$@@2
l$@A;
l$@D+
l$@E3
l$@H9E
l$@I+
l$@L+
l$@Lk
l$@M+
l$@M;
l$H@8*u
l$HE2
l$HE3
l$HH+
l$HH;
l$HHc
l$PA;
l$PE3
l$PH+
l$PH;
l$PH;C
l$PH;F
l$PH;G
l$PI+
l$PM+
l$PM;
l$Pff
l$Pfff
l$Pv2L
l$P}!
l$X8Y-t
l$X@8*u
l$XD;m
l$XH+
l$XH;C
l$XH;G
l$XI;
l$XL+
l$XM;
l$XfH
l$`@2
l$`E2
l$`E3
l$`H+
l$`H;
l$`L+
l$`L;
l$`M;
l$hE3
l$hH+
l$hH;
l$hfff
l$htPI
l$hta
l$hunH
l$pD8*u
l$pH+
l$pH;
l$pH;oX
l$pL;
l$pM;
l$ptYH
l$xH+
l$xff
l.dq.bs
l.s.ph
l.s.w
la.abs.
la.addCarry.
la.all.
la.any.
la.arraylength.
la.atomicAdd.
la.atomicAnd.
la.atomicCompExchange.
la.atomicCounter
la.atomicCounterLoad
la.atomicExchange.
la.atomicOr.
la.atomicXor.
la.bitCount.
la.bitFieldInsert.
la.bitReverse.
la.discardConditional.
la.emitStreamVertex
la.emitVertex
la.endPrimitive
la.fAbs.
la.fAcos.
la.fAcosh.
la.fAsin.
la.fAsinh.
la.fAtan.
la.fAtan2.
la.fAtanh.
la.fCeiling.
la.fClamp.
la.fCos.
la.fCosh.
la.fCross.
la.fDFdx.
la.fDFdy.
la.fDegrees.
la.fDistance.
la.fDot2.
la.fDot3.
la.fDot4.
la.fExp.
la.fExp10.
la.fExp2.
la.fFaceForward.
la.fFilterWidth.
la.fFixedTransform.
la.fFloatBitsToInt.
la.fFloor.
la.fFma.
la.fFraction.
la.fFrexp.
la.fImageAtomicExchange.
la.fImageLoad.
la.fIntBitsTofloat.
la.fInverseSqrt.
la.fIsInf.
la.fIsNan.
la.fLdexp.
la.fLength.
la.fLit.
la.fLoadComponent.
la.fLog.
la.fLog10.
la.fLog2.
la.fMatrix2TimesMatrix2.
la.fMatrix2TimesMatrix3.
la.fMatrix2TimesMatrix4.
la.fMatrix2TimesVector.
la.fMatrix3TimesMatrix2.
la.fMatrix3TimesMatrix3.
la.fMatrix3TimesMatrix4.
la.fMatrix3TimesVector.
la.fMatrix4TimesMatrix2.
la.fMatrix4TimesMatrix3.
la.fMatrix4TimesMatrix4.
la.fMatrix4TimesVector.
la.fMax.
la.fMin.
la.fMix.
la.fModF.
la.fMultiInsert.
la.fNormalize.
la.fNormalize3D.
la.fPackDouble2x32.
la.fPackHalf2x16.
la.fPackSnorm2x16.
la.fPackSnorm4x8.
la.fPackUnorm2x16.
la.fPackUnorm4x8.
la.fPow.
la.fPowi.
la.fQueryTextureLod.
la.fRTextureSample1.
la.fRTextureSample2.
la.fRTextureSample3.
la.fRTextureSample4.
la.fRTextureSampleLodRefZ1.
la.fRTextureSampleLodRefZ2.
la.fRTextureSampleLodRefZ3.
la.fRTextureSampleLodRefZ4.
la.fRTextureSampleLodRefZOffset1.
la.fRTextureSampleLodRefZOffset2.
la.fRTextureSampleLodRefZOffset3.
la.fRTextureSampleLodRefZOffset4.
la.fRTextureSampleLodRefZOffsetGrad1.
la.fRTextureSampleLodRefZOffsetGrad2.
la.fRTextureSampleLodRefZOffsetGrad3.
la.fRTextureSampleLodRefZOffsetGrad4.
la.fRadians.
la.fReadComponent.
la.fReadData.
la.fReadInterpolant.
la.fReadInterpolantComponent.
la.fReadInterpolantOffset.
la.fReadInterpolantOffsetComponent.
la.fReadInterpolantSample.
la.fReadInterpolantSampleComponent.
la.fReflect.
la.fRefract.
la.fRoundEven.
la.fRoundFast.
la.fRoundZero.
la.fSamplePosition.
la.fSaturate.
la.fSign.
la.fSin.
la.fSinh.
la.fSmoothStep.
la.fSqrt.
la.fStep.
la.fSwizzle.
la.fTan.
la.fTanh.
la.fTexelFetchOffset.
la.fTexelGather.
la.fTexelGatherOffset.
la.fTexelGatherOffsets.
la.fTextureSample.
la.fTextureSampleLodRefZ.
la.fTextureSampleLodRefZOffset.
la.fTextureSampleLodRefZOffsetGrad.
la.fUnpackDouble2x32.
la.fUnpackHalf2x16.
la.fUnpackSnorm2x16.
la.fUnpackSnorm4x8.
la.fUnpackUnorm2x16.
la.fUnpackUnorm4x8.
la.fVectorTimesMatrix2.
la.fVectorTimesMatrix3.
la.fVectorTimesMatrix4.
la.fWriteComponent.
la.fWriteData.
la.fWriteInterpolant.
la.fWriteInterpolantComponent.
la.fbMix.
la.findLSB.
la.getInterpolant.
la.iImageAtomicExchange.
la.imageAtomicAdd.
la.imageAtomicAnd.
la.imageAtomicCompExchange.
la.imageAtomicOr.
la.imageAtomicXor.
la.imageLoad.
la.imageStoreF.
la.imageStoreI.
la.interpolateAtCentroid.
la.interpolateAtOffset.
la.interpolateAtSample.
la.loadComponent.
la.memoryBarrier
la.memoryBarrierAtomicCounter
la.multiInsert.
la.not.
la.queryImageSamples.
la.queryImageSize.
la.queryTextureSize.
la.queryTextureSizeNoLod.
la.rTextureSample1.
la.rTextureSample2.
la.rTextureSample3.
la.rTextureSample4.
la.rTextureSampleLodRefZ1.
la.rTextureSampleLodRefZ2.
la.rTextureSampleLodRefZ3.
la.rTextureSampleLodRefZ4.
la.rTextureSampleLodRefZOffset1.
la.rTextureSampleLodRefZOffset2.
la.rTextureSampleLodRefZOffset3.
la.rTextureSampleLodRefZOffset4.
la.rTextureSampleLodRefZOffsetGrad1.
la.rTextureSampleLodRefZOffsetGrad2.
la.rTextureSampleLodRefZOffsetGrad3.
la.rTextureSampleLodRefZOffsetGrad4.
la.readComponent.
la.readData.
la.readInterpolantComponent.
la.sAtomicMax.
la.sAtomicMin.
la.sBitFieldExtract.
la.sClamp.
la.sFindMSB.
la.sFma.
la.sImageAtomicMax.
la.sImageAtomicMin.
la.sMax.
la.sMin.
la.sign.
la.smulExtended.
la.subBorrow.
la.swizzle.
la.texelFetchOffset.
la.texelGather.
la.texelGatherOffset.
la.texelGatherOffsets.
la.textureSample.
la.textureSampleLodRefZ.
la.textureSampleLodRefZOffset.
la.textureSampleLodRefZOffsetGrad.
la.uAtomicMax.
la.uAtomicMin.
la.uBitFieldExtract.
la.uClamp.
la.uFindMSB.
la.uFma.
la.uImageAtomicMax.
la.uImageAtomicMin.
la.uMax.
la.uMin.
la.umulExtended.
la.writeComponent.
la.writeData.
label
landingpad
lang 0x
lass.
last case/default label not followed by statements
lati.
layout
layout qualifier
layout(
layout( %s ) in;
layout( %s, %s ) in;
layout( %s, %s, %s ) in;
layout( %s, max_vertices = %d ) out;
layout( binding = %d ) 
layout( location = %d ) %s 
layout( std140, row_major ) uniform %s
layout( std140, row_major, binding=%d ) uniform %s
layout( vertices = %d ) out;
layout(binding=X) is required
layout(invocations = 
layout(local_size_x=
layout(max_vertices = 
layout(origin_upper_left) in;
layout(pixel_center_integer) in;
layout(point_mode) in;
layout(std140, row_major) uniform _Globals_ 
layout(vertices = 
layout, semantic, packoffset, or register
layout-id value
layout\s*\(.*\)\s+(in)\s+
layout\s*\(.*\)\s+(out)\s+
layout\s*\(.*\)\s+(uniform)\s+[A-Za-z0-9_]+
layout\s*\(.*\)\s+uniform\s+(highp|mediump|lowp)?\s+sampler[A-za-z0-9]+\s+[A-Za-z0-9_]+
layout_qualifier
layout_qualifier_id
layout_qualifier_id_list
lazy-value-info
lbaddi
lbmatch
lbnorm
lchown
lcolumn
lconst
lcssa
ldexp
ldexpf
ldexpl
left angle bracket
left shift second child into first child
left-shift
leftColumn
leftComp
lend.p
lendd.
lendp
lendv.p
lendvb
lendvp
lendw
length
leninc
lessThan
lessThanEqual
lexer->mTokens(): Error: No lexer rules were added to the lexer yet!
lflush
lftr.limit
lftr.wideiv
lgamma
lgamma_r
lhi.ull
lignr.b
limitation
limitations
line continuation
line_strip
lineadj
linear
lines
lines_adjacency
linkage type
linker_private 
linker_private_weak 
linkonce 
linkonce_odr 
linux
list<T> too long
literal integer
literal number
literal string
llabs
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.frintn
llvm.aarch64.neon.fsqrt
llvm.aarch64.neon.rbit
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.sha1c
llvm.aarch64.neon.sha1m
llvm.aarch64.neon.sha1p
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.sminv
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.uminv
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vabd
llvm.aarch64.neon.vabs
llvm.aarch64.neon.vacgeq
llvm.aarch64.neon.vacgtq
llvm.aarch64.neon.vaddds
llvm.aarch64.neon.vadddu
llvm.aarch64.neon.vaddv
llvm.aarch64.neon.vcage
llvm.aarch64.neon.vcagt
llvm.aarch64.neon.vceq
llvm.aarch64.neon.vcge
llvm.aarch64.neon.vcgt
llvm.aarch64.neon.vchi
llvm.aarch64.neon.vchs
llvm.aarch64.neon.vclez
llvm.aarch64.neon.vcltz
llvm.aarch64.neon.vcvtd.n.s64.f64
llvm.aarch64.neon.vcvtd.n.u64.f64
llvm.aarch64.neon.vcvtf32.n.s32
llvm.aarch64.neon.vcvtf32.n.u32
llvm.aarch64.neon.vcvtf32.s32
llvm.aarch64.neon.vcvtf32.u32
llvm.aarch64.neon.vcvtf64.n.s64
llvm.aarch64.neon.vcvtf64.n.u64
llvm.aarch64.neon.vcvtf64.s64
llvm.aarch64.neon.vcvtf64.u64
llvm.aarch64.neon.vcvts.n.s32.f32
llvm.aarch64.neon.vcvts.n.u32.f32
llvm.aarch64.neon.vld1x2
llvm.aarch64.neon.vld1x3
llvm.aarch64.neon.vld1x4
llvm.aarch64.neon.vmaxnm
llvm.aarch64.neon.vmaxnmv
llvm.aarch64.neon.vmaxv
llvm.aarch64.neon.vminnm
llvm.aarch64.neon.vminnmv
llvm.aarch64.neon.vminv
llvm.aarch64.neon.vmulx
llvm.aarch64.neon.vneg
llvm.aarch64.neon.vpadd
llvm.aarch64.neon.vpfadd
llvm.aarch64.neon.vpfaddq
llvm.aarch64.neon.vpfmaxnm
llvm.aarch64.neon.vpfmaxnmq
llvm.aarch64.neon.vpfminnm
llvm.aarch64.neon.vpfminnmq
llvm.aarch64.neon.vpmax
llvm.aarch64.neon.vpmaxnm
llvm.aarch64.neon.vpmaxq
llvm.aarch64.neon.vpmin
llvm.aarch64.neon.vpminnm
llvm.aarch64.neon.vpminq
llvm.aarch64.neon.vqdmlal
llvm.aarch64.neon.vqdmlsl
llvm.aarch64.neon.vqrshls
llvm.aarch64.neon.vqrshlu
llvm.aarch64.neon.vqshls
llvm.aarch64.neon.vqshls.n
llvm.aarch64.neon.vqshlu
llvm.aarch64.neon.vqshlu.n
llvm.aarch64.neon.vqshlus.n
llvm.aarch64.neon.vrecpx
llvm.aarch64.neon.vrshlds
llvm.aarch64.neon.vrshldu
llvm.aarch64.neon.vrshrn
llvm.aarch64.neon.vrsrads.n
llvm.aarch64.neon.vrsradu.n
llvm.aarch64.neon.vshld.n
llvm.aarch64.neon.vshlds
llvm.aarch64.neon.vshldu
llvm.aarch64.neon.vshrds.n
llvm.aarch64.neon.vshrdu.n
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsqadd
llvm.aarch64.neon.vsqrshrn
llvm.aarch64.neon.vsqrshrun
llvm.aarch64.neon.vsqshlu
llvm.aarch64.neon.vsqshrn
llvm.aarch64.neon.vsqshrun
llvm.aarch64.neon.vsrads.n
llvm.aarch64.neon.vsradu.n
llvm.aarch64.neon.vsri
llvm.aarch64.neon.vsrshr
llvm.aarch64.neon.vst1x2
llvm.aarch64.neon.vst1x3
llvm.aarch64.neon.vst1x4
llvm.aarch64.neon.vsubds
llvm.aarch64.neon.vsubdu
llvm.aarch64.neon.vtbl1
llvm.aarch64.neon.vtbl2
llvm.aarch64.neon.vtbl3
llvm.aarch64.neon.vtbl4
llvm.aarch64.neon.vtbx1
llvm.aarch64.neon.vtbx2
llvm.aarch64.neon.vtbx3
llvm.aarch64.neon.vtbx4
llvm.aarch64.neon.vtstd
llvm.aarch64.neon.vuqadd
llvm.aarch64.neon.vuqrshrn
llvm.aarch64.neon.vuqshrn
llvm.aarch64.neon.vurshr
llvm.aarch64.neon.xtn
llvm.adjust.trampoline
llvm.annotation
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacged
llvm.arm.neon.vacgeq
llvm.arm.neon.vacgtd
llvm.arm.neon.vacgtq
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vclz
llvm.arm.neon.vcnt
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld2
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshiftls
llvm.arm.neon.vshiftlu
llvm.arm.neon.vshiftn
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qsub
llvm.arm.set.fpscr
llvm.arm.sevl
llvm.arm.ssat
llvm.arm.strex
llvm.arm.strexd
llvm.arm.thread.pointer
llvm.arm.usat
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bswap
llvm.ceil
llvm.compiler.used
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.convertff
llvm.convertfsi
llvm.convertfui
llvm.convertsif
llvm.convertss
llvm.convertsu
llvm.convertuif
llvm.convertus
llvm.convertuu
llvm.copysign
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.cuda.syncthreads
llvm.dbg.declare
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.gla.abs
llvm.gla.addCarry
llvm.gla.all
llvm.gla.any
llvm.gla.arraylength
llvm.gla.atomicAdd
llvm.gla.atomicAnd
llvm.gla.atomicCompExchange
llvm.gla.atomicCounterDecrement
llvm.gla.atomicCounterIncrement
llvm.gla.atomicCounterLoad
llvm.gla.atomicExchange
llvm.gla.atomicOr
llvm.gla.atomicXor
llvm.gla.barrier
llvm.gla.bitCount
llvm.gla.bitFieldInsert
llvm.gla.bitReverse
llvm.gla.discard
llvm.gla.discardConditional
llvm.gla.emitStreamVertex
llvm.gla.emitVertex
llvm.gla.endPrimitive
llvm.gla.endStreamPrimitive
llvm.gla.fAbs
llvm.gla.fAcos
llvm.gla.fAcosh
llvm.gla.fAsin
llvm.gla.fAsinh
llvm.gla.fAtan
llvm.gla.fAtan2
llvm.gla.fAtanh
llvm.gla.fCeiling
llvm.gla.fClamp
llvm.gla.fCos
llvm.gla.fCosh
llvm.gla.fCross
llvm.gla.fDFdx
llvm.gla.fDFdy
llvm.gla.fDegrees
llvm.gla.fDistance
llvm.gla.fDot2
llvm.gla.fDot3
llvm.gla.fDot4
llvm.gla.fExp
llvm.gla.fExp10
llvm.gla.fExp2
llvm.gla.fFaceForward
llvm.gla.fFilterWidth
llvm.gla.fFixedTransform
llvm.gla.fFloatBitsToInt
llvm.gla.fFloor
llvm.gla.fFma
llvm.gla.fFraction
llvm.gla.fFrexp
llvm.gla.fImageAtomicExchange
llvm.gla.fImageLoad
llvm.gla.fIntBitsTofloat
llvm.gla.fInverseSqrt
llvm.gla.fIsInf
llvm.gla.fIsNan
llvm.gla.fLdexp
llvm.gla.fLength
llvm.gla.fLit
llvm.gla.fLoadComponent
llvm.gla.fLog
llvm.gla.fLog10
llvm.gla.fLog2
llvm.gla.fMatrix2TimesMatrix2
llvm.gla.fMatrix2TimesMatrix3
llvm.gla.fMatrix2TimesMatrix4
llvm.gla.fMatrix2TimesVector
llvm.gla.fMatrix3TimesMatrix2
llvm.gla.fMatrix3TimesMatrix3
llvm.gla.fMatrix3TimesMatrix4
llvm.gla.fMatrix3TimesVector
llvm.gla.fMatrix4TimesMatrix2
llvm.gla.fMatrix4TimesMatrix3
llvm.gla.fMatrix4TimesMatrix4
llvm.gla.fMatrix4TimesVector
llvm.gla.fMax
llvm.gla.fMin
llvm.gla.fMix
llvm.gla.fModF
llvm.gla.fMultiInsert
llvm.gla.fNormalize
llvm.gla.fNormalize3D
llvm.gla.fPackDouble2x32
llvm.gla.fPackHalf2x16
llvm.gla.fPackSnorm2x16
llvm.gla.fPackSnorm4x8
llvm.gla.fPackUnorm2x16
llvm.gla.fPackUnorm4x8
llvm.gla.fPow
llvm.gla.fPowi
llvm.gla.fQueryTextureLod
llvm.gla.fRTextureSample1
llvm.gla.fRTextureSample2
llvm.gla.fRTextureSample3
llvm.gla.fRTextureSample4
llvm.gla.fRTextureSampleLodRefZ1
llvm.gla.fRTextureSampleLodRefZ2
llvm.gla.fRTextureSampleLodRefZ3
llvm.gla.fRTextureSampleLodRefZ4
llvm.gla.fRTextureSampleLodRefZOffset1
llvm.gla.fRTextureSampleLodRefZOffset2
llvm.gla.fRTextureSampleLodRefZOffset3
llvm.gla.fRTextureSampleLodRefZOffset4
llvm.gla.fRTextureSampleLodRefZOffsetGrad1
llvm.gla.fRTextureSampleLodRefZOffsetGrad2
llvm.gla.fRTextureSampleLodRefZOffsetGrad3
llvm.gla.fRTextureSampleLodRefZOffsetGrad4
llvm.gla.fRadians
llvm.gla.fReadComponent
llvm.gla.fReadData
llvm.gla.fReadInterpolant
llvm.gla.fReadInterpolantComponent
llvm.gla.fReadInterpolantOffset
llvm.gla.fReadInterpolantOffsetComponent
llvm.gla.fReadInterpolantSample
llvm.gla.fReadInterpolantSampleComponent
llvm.gla.fReflect
llvm.gla.fRefract
llvm.gla.fRoundEven
llvm.gla.fRoundFast
llvm.gla.fRoundZero
llvm.gla.fSamplePosition
llvm.gla.fSaturate
llvm.gla.fSign
llvm.gla.fSin
llvm.gla.fSinh
llvm.gla.fSmoothStep
llvm.gla.fSqrt
llvm.gla.fStep
llvm.gla.fSwizzle
llvm.gla.fTan
llvm.gla.fTanh
llvm.gla.fTexelFetchOffset
llvm.gla.fTexelGather
llvm.gla.fTexelGatherOffset
llvm.gla.fTexelGatherOffsets
llvm.gla.fTextureSample
llvm.gla.fTextureSampleLodRefZ
llvm.gla.fTextureSampleLodRefZOffset
llvm.gla.fTextureSampleLodRefZOffsetGrad
llvm.gla.fUnpackDouble2x32
llvm.gla.fUnpackHalf2x16
llvm.gla.fUnpackSnorm2x16
llvm.gla.fUnpackSnorm4x8
llvm.gla.fUnpackUnorm2x16
llvm.gla.fUnpackUnorm4x8
llvm.gla.fVectorTimesMatrix2
llvm.gla.fVectorTimesMatrix3
llvm.gla.fVectorTimesMatrix4
llvm.gla.fWriteComponent
llvm.gla.fWriteData
llvm.gla.fWriteInterpolant
llvm.gla.fWriteInterpolantComponent
llvm.gla.fbMix
llvm.gla.findLSB
llvm.gla.getInterpolant
llvm.gla.groupMemoryBarrier
llvm.gla.iImageAtomicExchange
llvm.gla.imageAtomicAdd
llvm.gla.imageAtomicAnd
llvm.gla.imageAtomicCompExchange
llvm.gla.imageAtomicOr
llvm.gla.imageAtomicXor
llvm.gla.imageLoad
llvm.gla.imageStoreF
llvm.gla.imageStoreI
llvm.gla.interpolateAtCentroid
llvm.gla.interpolateAtOffset
llvm.gla.interpolateAtSample
llvm.gla.loadComponent
llvm.gla.memoryBarrier
llvm.gla.memoryBarrierAtomicCounter
llvm.gla.memoryBarrierBuffer
llvm.gla.memoryBarrierImage
llvm.gla.memoryBarrierShared
llvm.gla.multiInsert
llvm.gla.not
llvm.gla.queryImageSamples
llvm.gla.queryImageSize
llvm.gla.queryTextureSize
llvm.gla.queryTextureSizeNoLod
llvm.gla.rTextureSample1
llvm.gla.rTextureSample2
llvm.gla.rTextureSample3
llvm.gla.rTextureSample4
llvm.gla.rTextureSampleLodRefZ1
llvm.gla.rTextureSampleLodRefZ2
llvm.gla.rTextureSampleLodRefZ3
llvm.gla.rTextureSampleLodRefZ4
llvm.gla.rTextureSampleLodRefZOffset1
llvm.gla.rTextureSampleLodRefZOffset2
llvm.gla.rTextureSampleLodRefZOffset3
llvm.gla.rTextureSampleLodRefZOffset4
llvm.gla.rTextureSampleLodRefZOffsetGrad1
llvm.gla.rTextureSampleLodRefZOffsetGrad2
llvm.gla.rTextureSampleLodRefZOffsetGrad3
llvm.gla.rTextureSampleLodRefZOffsetGrad4
llvm.gla.readComponent
llvm.gla.readData
llvm.gla.readInterpolantComponent
llvm.gla.sAtomicMax
llvm.gla.sAtomicMin
llvm.gla.sBitFieldExtract
llvm.gla.sClamp
llvm.gla.sFindMSB
llvm.gla.sFma
llvm.gla.sImageAtomicMax
llvm.gla.sImageAtomicMin
llvm.gla.sMax
llvm.gla.sMin
llvm.gla.sign
llvm.gla.smulExtended
llvm.gla.subBorrow
llvm.gla.swizzle
llvm.gla.texelFetchOffset
llvm.gla.texelGather
llvm.gla.texelGatherOffset
llvm.gla.texelGatherOffsets
llvm.gla.textureSample
llvm.gla.textureSampleLodRefZ
llvm.gla.textureSampleLodRefZOffset
llvm.gla.textureSampleLodRefZOffsetGrad
llvm.gla.uAtomicMax
llvm.gla.uAtomicMin
llvm.gla.uBitFieldExtract
llvm.gla.uClamp
llvm.gla.uFindMSB
llvm.gla.uFma
llvm.gla.uImageAtomicMax
llvm.gla.uImageAtomicMin
llvm.gla.uMax
llvm.gla.uMin
llvm.gla.umulExtended
llvm.gla.writeComponent
llvm.gla.writeData
llvm.global_ctors
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dffixupd
llvm.hexagon.F2.dffixupn
llvm.hexagon.F2.dffixupr
llvm.hexagon.F2.dffma
llvm.hexagon.F2.dffma.lib
llvm.hexagon.F2.dffma.sc
llvm.hexagon.F2.dffms
llvm.hexagon.F2.dffms.lib
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpy
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.SI.to.SXTHI.asrh
llvm.hexagon.circ.ldd
llvm.init.trampoline
llvm.invariant.end
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.memcpy
llvm.memmove
llvm.memset
llvm.metadata
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nearbyint
llvm.nvvm.abs.i
llvm.nvvm.abs.ll
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.brev32
llvm.nvvm.brev64
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.clz.i
llvm.nvvm.clz.ll
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.h2f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.max.i
llvm.nvvm.max.ll
llvm.nvvm.max.ui
llvm.nvvm.max.ull
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.min.i
llvm.nvvm.min.ll
llvm.nvvm.min.ui
llvm.nvvm.min.ull
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.popc.i
llvm.nvvm.popc.ll
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.mtctr
llvm.ppc.sync
llvm.prefetch
llvm.ptr.annotation
llvm.ptx.bar.sync
llvm.ptx.read.clock
llvm.ptx.read.clock64
llvm.ptx.read.ctaid.w
llvm.ptx.read.ctaid.x
llvm.ptx.read.ctaid.y
llvm.ptx.read.ctaid.z
llvm.ptx.read.gridid
llvm.ptx.read.laneid
llvm.ptx.read.lanemask.eq
llvm.ptx.read.lanemask.ge
llvm.ptx.read.lanemask.gt
llvm.ptx.read.lanemask.le
llvm.ptx.read.lanemask.lt
llvm.ptx.read.nctaid.w
llvm.ptx.read.nctaid.x
llvm.ptx.read.nctaid.y
llvm.ptx.read.nctaid.z
llvm.ptx.read.nsmid
llvm.ptx.read.ntid.w
llvm.ptx.read.ntid.x
llvm.ptx.read.ntid.y
llvm.ptx.read.ntid.z
llvm.ptx.read.nwarpid
llvm.ptx.read.pm0
llvm.ptx.read.pm1
llvm.ptx.read.pm2
llvm.ptx.read.pm3
llvm.ptx.read.smid
llvm.ptx.read.tid.w
llvm.ptx.read.tid.x
llvm.ptx.read.tid.y
llvm.ptx.read.tid.z
llvm.ptx.read.warpid
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssub.with.overflow
llvm.stackprotector
llvm.stackprotectorcheck
llvm.stackrestore
llvm.stacksave
llvm.trap
llvm.trunc
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.used
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blend.pd.256
llvm.x86.avx.blend.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2.pd.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.pd.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.storeu.dq.256
llvm.x86.avx.storeu.pd.256
llvm.x86.avx.storeu.ps.256
llvm.x86.avx.vbroadcast.sd.256
llvm.x86.avx.vbroadcast.ss
llvm.x86.avx.vbroadcast.ss.256
llvm.x86.avx.vbroadcastf128.pd.256
llvm.x86.avx.vbroadcastf128.ps.256
llvm.x86.avx.vextractf128.pd.256
llvm.x86.avx.vextractf128.ps.256
llvm.x86.avx.vextractf128.si.256
llvm.x86.avx.vinsertf128.pd.256
llvm.x86.avx.vinsertf128.ps.256
llvm.x86.avx.vinsertf128.si.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.movntdqa
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendd.128
llvm.x86.avx2.pblendd.256
llvm.x86.avx2.pblendvb
llvm.x86.avx2.pblendw
llvm.x86.avx2.pbroadcastb.128
llvm.x86.avx2.pbroadcastb.256
llvm.x86.avx2.pbroadcastd.128
llvm.x86.avx2.pbroadcastd.256
llvm.x86.avx2.pbroadcastq.128
llvm.x86.avx2.pbroadcastq.256
llvm.x86.avx2.pbroadcastw.128
llvm.x86.avx2.pbroadcastw.256
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmaxs.b
llvm.x86.avx2.pmaxs.d
llvm.x86.avx2.pmaxs.w
llvm.x86.avx2.pmaxu.b
llvm.x86.avx2.pmaxu.d
llvm.x86.avx2.pmaxu.w
llvm.x86.avx2.pmins.b
llvm.x86.avx2.pmins.d
llvm.x86.avx2.pmins.w
llvm.x86.avx2.pminu.b
llvm.x86.avx2.pminu.d
llvm.x86.avx2.pminu.w
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmovsxbd
llvm.x86.avx2.pmovsxbq
llvm.x86.avx2.pmovsxbw
llvm.x86.avx2.pmovsxdq
llvm.x86.avx2.pmovsxwd
llvm.x86.avx2.pmovsxwq
llvm.x86.avx2.pmovzxbd
llvm.x86.avx2.pmovzxbq
llvm.x86.avx2.pmovzxbw
llvm.x86.avx2.pmovzxdq
llvm.x86.avx2.pmovzxwd
llvm.x86.avx2.pmovzxwq
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.dq
llvm.x86.avx2.psll.dq.bs
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.dq
llvm.x86.avx2.psrl.dq.bs
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vbroadcast.sd.pd.256
llvm.x86.avx2.vbroadcast.ss.ps
llvm.x86.avx2.vbroadcast.ss.ps.256
llvm.x86.avx2.vbroadcasti128
llvm.x86.avx2.vextracti128
llvm.x86.avx2.vinserti128
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.and.pi
llvm.x86.avx512.cmpeq.pi.512
llvm.x86.avx512.conflict.d.512
llvm.x86.avx512.conflict.d.mask.512
llvm.x86.avx512.conflict.d.maskz.512
llvm.x86.avx512.conflict.q.512
llvm.x86.avx512.conflict.q.mask.512
llvm.x86.avx512.conflict.q.maskz.512
llvm.x86.avx512.cvt.ps2dq.512
llvm.x86.avx512.cvtdq2.ps.512
llvm.x86.avx512.cvtsd2usi
llvm.x86.avx512.cvtsd2usi64
llvm.x86.avx512.cvtss2usi
llvm.x86.avx512.cvtss2usi64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpd.mask.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpi.mask.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dpq.mask.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.dps.mask.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpd.mask.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpi.mask.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qpq.mask.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather.qps.mask.512
llvm.x86.avx512.kortestc
llvm.x86.avx512.kortestz
llvm.x86.avx512.max.pd.512
llvm.x86.avx512.max.ps.512
llvm.x86.avx512.min.pd.512
llvm.x86.avx512.min.ps.512
llvm.x86.avx512.mskblend.d.512
llvm.x86.avx512.mskblend.pd.512
llvm.x86.avx512.mskblend.ps.512
llvm.x86.avx512.mskblend.q.512
llvm.x86.avx512.pbroadcastd.512
llvm.x86.avx512.pbroadcastd.i32.512
llvm.x86.avx512.pbroadcastq.512
llvm.x86.avx512.pbroadcastq.i64.512
llvm.x86.avx512.pmaxs.d
llvm.x86.avx512.pmaxs.q
llvm.x86.avx512.pmaxu.d
llvm.x86.avx512.pmaxu.q
llvm.x86.avx512.pmins.d
llvm.x86.avx512.pmins.q
llvm.x86.avx512.pminu.d
llvm.x86.avx512.pminu.q
llvm.x86.avx512.pmovzxbd
llvm.x86.avx512.pmovzxbq
llvm.x86.avx512.pmovzxdq
llvm.x86.avx512.pmovzxwd
llvm.x86.avx512.pmovzxwq
llvm.x86.avx512.psll.dq
llvm.x86.avx512.psll.dq.bs
llvm.x86.avx512.psrl.dq
llvm.x86.avx512.psrl.dq.bs
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd.512
llvm.x86.avx512.rcp28.ps.512
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rndscale.pd.512
llvm.x86.avx512.rndscale.ps.512
llvm.x86.avx512.rndscale.sd
llvm.x86.avx512.rndscale.ss
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd.512
llvm.x86.avx512.rsqrt28.ps.512
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpd.mask.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpi.mask.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dpq.mask.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.dps.mask.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpd.mask.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpi.mask.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qpq.mask.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatter.qps.mask.512
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sqrt.sd
llvm.x86.avx512.sqrt.ss
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.sd.pd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vbroadcast.ss.ps.512
llvm.x86.avx512.vcvtph2ps.512
llvm.x86.avx512.vcvtps2ph.512
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.pd.512
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.ps.512
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.pd.512
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmaddsub.ps.512
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.pd.512
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.ps.512
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.pd.512
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfmsubadd.ps.512
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.pd.512
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.ps.512
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.pd.512
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.ps.512
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.int
llvm.x86.int2mask.v16i1
llvm.x86.kadd.v16i1
llvm.x86.kand.v16i1
llvm.x86.kandn.v16i1
llvm.x86.knot.v16i1
llvm.x86.kor.v16i1
llvm.x86.kunpck.v16i1
llvm.x86.kxnor.v16i1
llvm.x86.kxor.v16i1
llvm.x86.mask2int.v16i1
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.sse.add.ss
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.div.ss
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.mul.ss
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.storeu.ps
llvm.x86.sse.sub.ss
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.add.sd
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2pd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtps2pd
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.div.sd
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.mul.sd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmaxs.w
llvm.x86.sse2.pmaxu.b
llvm.x86.sse2.pmins.w
llvm.x86.sse2.pminu.b
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.dq
llvm.x86.sse2.psll.dq.bs
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.dq
llvm.x86.sse2.psrl.dq.bs
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.storel.dq
llvm.x86.sse2.storeu.dq
llvm.x86.sse2.storeu.pd
llvm.x86.sse2.sub.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendpd
llvm.x86.sse41.blendps
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.extractps
llvm.x86.sse41.insertps
llvm.x86.sse41.movntdqa
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.pblendw
llvm.x86.sse41.pextrb
llvm.x86.sse41.pextrd
llvm.x86.sse41.pextrq
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmaxsb
llvm.x86.sse41.pmaxsd
llvm.x86.sse41.pmaxud
llvm.x86.sse41.pmaxuw
llvm.x86.sse41.pminsb
llvm.x86.sse41.pminsd
llvm.x86.sse41.pminud
llvm.x86.sse41.pminuw
llvm.x86.sse41.pmovsxbd
llvm.x86.sse41.pmovsxbq
llvm.x86.sse41.pmovsxbw
llvm.x86.sse41.pmovsxdq
llvm.x86.sse41.pmovsxwd
llvm.x86.sse41.pmovsxwq
llvm.x86.sse41.pmovzxbd
llvm.x86.sse41.pmovzxbq
llvm.x86.sse41.pmovzxbw
llvm.x86.sse41.pmovzxdq
llvm.x86.sse41.pmovzxwd
llvm.x86.sse41.pmovzxwq
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.sse4a.movnt.sd
llvm.x86.sse4a.movnt.ss
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcmov
llvm.x86.xop.vpcmov.256
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
local function declaration
local_access_chain_convert_pass
local_multi_store_elim_pass
local_single_block_load_store_elim_pass
local_single_store_elim_pass
local_size
local_size = (
local_size id
local_size ids = (
local_size_
local_size_x
local_size_x_id
local_size_y
local_size_y_id
local_size_z
local_size_z_id
location
location is too large
location on block member
location qualifier on in/out block
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
location/component/index
location=
lod bias
log10
log10f
log10l
log1p
log1pf
log1pl
log2f
log2l
logbf
logbl
logical-and
logical-or
logical-xor
logical_and_expression
logical_or_expression
logical_xor_expression
looks like this:
loop control
loop header
loop or switch
loop predicate
loop-body
loop-header
loop-merge
loop-reduce
loop-rotate
loop-simplify
loop-test
loop-unroll
loops
loor.
lower
lowerinvoke
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4);
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4);
lowp precision qualifier
lpad.phi
lrbit.
lsr.chain
lstat
lstat64
lt.rounds
lvar.p
m0@8t$ 
m0k0$
mHH9x
ma.vfm
ma.vfnm
macho
macosx
macro expansion
mageSampleFootprintGradClampNV
main(
mainBody
mainIn
mainIn[%d]
mainOut
mainOut = %s( mainIn );
mainOut = %s( mainIn, uint( gl_InvocationID ) );
mainOut = %s( patchIn, mainIn, gl_TessCoord );
malloc
malloc_cont
malloc_ret_null
malloccall
mallocsize
map/set<T> too long
map: 
mapped binding out of range: 
mapped set out of range: 
marker
maskstore.p
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3);
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);
mat2vec
mat2x2
mat2x3
mat2x4
mat3vec
mat3x2
mat3x3
mat3x4
mat4vec
mat4x2
mat4x3
mat4x4
matrix
matrix column component out of range
matrix component swizzle has too many components
matrix component swizzle missing
matrix constructed from matrix can only have one argument
matrix index out of range '%d'
matrix mult second child into first child
matrix or packing qualifiers can only be used on a uniform or buffer
matrix row component out of range
matrix scale second child into first child
matrix size
matrix swizzle
matrix type in buffer
matrix-multiply
matrix-scale
matrix-times-vector
matrixCompMult
max backedge-taken count is 
max-cg-scc-iterations
max-recurse-depth
maxInvocations
maxInvocationsAMD
maxInvocationsExclusiveScan
maxInvocationsExclusiveScanAMD
maxInvocationsExclusiveScanNonUniform
maxInvocationsExclusiveScanNonUniformAMD
maxInvocationsInclusiveScan
maxInvocationsInclusiveScanAMD
maxInvocationsInclusiveScanNonUniform
maxInvocationsInclusiveScanNonUniformAMD
maxInvocationsNonUniform
maxInvocationsNonUniformAMD
max_iterations
max_primitives
max_primitives = 
max_primitives*
max_vertices
max_vertices = 
maxanisotropy
maximum nesting depth exceeded
maxlod
maxmag
maxtessfactor
maxvertexcount
mbar.
mbar.gl
mbcnt
mbcntAMD
mbine
mediump
mediump precision qualifier
mediump vec2 unpackHalf2x16(highp uint);
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord;
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint);
mem2reg
memalign
member
member cannot contradict block
member cannot contradict block (or what block inherited from global)
member name
member of block cannot be or contain a cooperative matrix type
member of block cannot be or contain a sampler, image, or atomic_uint type
member of block cannot have a packing layout qualifier
member of nameless block was not redeclared
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
member storage qualifier cannot contradict block storage qualifier
member type
member-function definition
memberColumn
memccpy
memchr
memcmp
memcpy
memdep
memmove
memory access
memory exhausted
memory model
memory qualifiers cannot be used on this type
memory semantics ID
memory-builtins
memoryBarrier
memoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
memrchr
memset
memset_pattern16
merge
merge block
merge-blocks
merge-return
merge_return_pass
mesh shaders
mesh view output array size must be gl_MaxMeshViewCountNV or implicitly sized
message size
metadata
method does not accept any arguments
mgfff
mi.bextr.
min10float
min10float1
min10float2
min10float3
min10float4
min12int
min12int1
min12int2
min12int3
min12int4
min16float
min16float1
min16float2
min16float3
min16float4
min16int
min16int1
min16int2
min16int3
min16int4
min16uint
min16uint1
min16uint2
min16uint3
min16uint4
minInvocations
minInvocationsAMD
minInvocationsExclusiveScan
minInvocationsExclusiveScanAMD
minInvocationsExclusiveScanNonUniform
minInvocationsExclusiveScanNonUniformAMD
minInvocationsInclusiveScan
minInvocationsInclusiveScanAMD
minInvocationsInclusiveScanNonUniform
minInvocationsInclusiveScanNonUniformAMD
minInvocationsNonUniform
minInvocationsNonUniformAMD
minPrecision
min_iterations
mineq.sd
mineq.ss
mingw32
minix
minlod
minmag
minsize
miplodbias
mips64
mips64eb
mips64el
mipsallegrex
mipsallegrexel
mipseb
mipsel
misc2a
misc3a
misc4a
mismatched statements
missing #endif
missing base expression for uniform makePointerExpression
missing metadata for makePointerExpression
missing name in aggregate
missing parenthesis
missing perprimitiveNV qualifier to redeclared block member
missing perviewNV qualifier to redeclared block member
missing sampler base type
missing space after macro name
missing user function; linker needs to catch that
mkdir
mktime
moH9^
mod second child into first child
modff
modfl
module asm "
mov.256
move second child to first child
movzx
mpbfp
mpbfp.p
mpbgt
mpgdu.
mpgu.
mplteui
mpneqi
mpy2s.s
mpyh.acc
mpyrs.s
mpyrsc.s
mpyw.acc
msad4
msp430
msp430_intrcc
msubfp
mul() matrix size mismatch
mul.with.overflow.
muladd.
multiInsert with a non-scalar non-vector source
multiple post-dominance frontier entries for a discarding block
multiple prototypes for same function
multiplicative_expression
multiply second child into first child
multisample count
must be 0, 1, 2, or 3:
must be a compile-time constant:
must be a constant integer expression
must be a multiple of size of first component
must be a multiple of the member's alignment
must be a positive integer
must be a power of 2
must be at least 1
must be followed by a header name
must be followed by macro name
must be followed by version number
must be greater than 0
must be greater than or equal to 1
must be in the range [0, 2]
must be less than or equal to
must be positive
must be qualified as flat
must by followed by an integral literal
must occur first in shader
must specify 'location' to use 'component'
mutable
mxcsr
n.ftz.f
n.ull
n03>Pu
n@L;i
nD$tH
n]?iJ
naked
name already defined
name too long
named_barrier
nameless block contains a member that already has a name at global scope
names beginning with "GL_" can't be (un)defined:
names containing consecutive underscores are reserved, and an error if version <= 300:
names containing consecutive underscores are reserved:
namespace
namespace name
namespace or attribute identifier
nan(ind)
nan(snan)
native_cos
native_divide
native_exp
native_exp10
native_exp2
native_log
native_log10
native_log2
native_powr
native_recip
native_rsqrt
native_sin
native_sqrt
native_tan
nclast
ncrement
nd.andn
nd.or
nd.s0
ndStreamPrimitive
ndn.v16i1
ndscale.p
ndscale.s
near '%c' :
near char(%#02X) :
nearbyint
nearbyintf
nearbyintl
needs a literal integer
nested function found
netbsd
network down
network reset
network unreachable
newgv
nextafter
nnotation.
no buffer space
no child process
no declaration found for redeclaration
no link
no lock available
no longer supported in
no matching overloaded function found
no message
no message available
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion)
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion)
no protocol option
no qualifiers allowed for function return
no space on device
no stream resources
no such device
no such device or address
no such field in structure
no such file or directory
no such process
no-aa
no-storage-format
no_storage_format
noalias
nobuiltin
nocapture
nocona
node is still EOpNull!
noduplicate
noimplicitfloat
noinline
nointerpolation
noise
noise1
noise2
noise3
noise4
non-OpPhi instructions 
non-built-in variables within a single structure). Structure id 
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers)
non-constant initializer
non-constant offset argument
non-literal layout-id value
non-matching or non-convertible constant type for const initializer
non-opaque uniform variables need a layout(location=L)
non-opaque uniforms outside a block
non-pointer in setActiveOutput()
non-simple constant
non-structure type in ConstantBuffer
non-uniform struct contains a sampler or image:
non-uniform struct contains an accelerationStructureNV:
non-uniform struct contains an atomic_uint:
non-void function must return a value
non_uniform_qualifier
nonlazybind
nonportable when expanded from macros for preprocessor expression
nonprivate
nonreadable
nonuniformEXT
nonwritable
noperspective
noperspective 
nor.v16i1
noredzone
noreturn
normalize
not a directory
not a socket
not a stream
not allowed in nested scope
not allowed in this version
not allowed on block or structure members
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
not connected
not enough data provided for construction
not enough mdAggregate operands
not enough memory
not implemented
not supported
not supported for these tokens
not supported for this version or the enabled extensions
not supported in this stage:
not supported with this profile:
not() on a scalar
not.cond
notEqual
not_intrinsic
nothing
notinit
notlhs
notrhs
notti
nounwind
npH;i@t
nsert
nsert.
nsert.rp
nsertp
nsertps
nsertqi
nsr.w
nsw><
nt2mask.v16i1
ntelE
nterm
ntohl
ntohs
num_views
number as Result Type
number of invocations must match between compilation units
numerator
numeric literal too big
numeric literal too long
numthreads
nuw><
nvariant.end
nvidia
nvptx
nvptx64
nwind.init
nzi.b
o@H;i
oHM9}H
oI>O7
obwQ4
ock64
octal and hex sequences not supported
octal literal digit too large
octal literal too big
odwrapu
of Result Type struct
of right matrix to be equal: 
of the left operand: 
offset
offset %d in buffer %d
offset is too large:
offset on block member
offset/align
offset/align can only be used on a uniform or buffer
offset=
offsetof(
offsets argument
offsets_
og10.
ogefp
ogglebit.
ohi.i2d
old ID not mapped: 
ombineii
ombinew
one of the following storage classes: Output, Private, or 
one or more arguments
onflict.
ongjmp
onitor
only allowed when generating SPIR-V
only allowed when using GLSL for Vulkan
only applies to block members, not blocks
only apply to images
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent qualifier allowed
only one precision qualifier allowed
only outermost dimension of an array of arrays can be a specialization constant
only outermost dimension of an array of arrays can be implicitly sized
only simple assignment to non-simple matrix swizzle is supported
only supported on image with format r32f
only supported on image with format r32i or r32ui
only supported on integer images
only uniform, buffer, in, or out blocks are supported
onvert.from.fp16
onvert.to.fp16
onvertff.
onvertfsi.
onvertfui.
onvertsif.
onvertss.
onvertsu.
onvertuif.
onvertus.
onvertuu.
oor.ftz.f
op.vfrcz.p
op.vp
op.vpermil2p
opH;i
opaque
opaque('
opc.i
opc.ll
opcodes or together with Image Operand Grad
open64
openbsd
opencl1.2
opencl1.2embedded
opencl2.0
opencl2.0embedded
opencl2.1
opencl2.1embedded
opencl2.2
opencl2.2embedded
opendir
opengl4.0
opengl4.1
opengl4.2
opengl4.3
opengl4.5
operand of the result type.
operation canceled
operation in progress
operation not permitted
operation not supported
operation would block
operator
operator "" 
operator[] on a non-RW texture must be an r-value
opteron
optimize
optimize pragma syntax is incorrect
optnone
optsize
opysign.
or 0 for an integer type with Signedness of 0, 
or an array of one of these types.
or an array of this type
or scalar type: 
or scalar: 
or second child into first child
or sign extended when Signedness is 1
or storage buffer
or vector type
or vector: 
or.and
or.cond
or.or
or.v16i1
or.xacc
ore.bitrev
ore.checkevent
ore.waitevent
ori.b
origin_upper_left
ortest
os.approx.f
os.approx.ftz.f
osge32
ot$ H
ot$0H
ot.v16i1
ound.
ound.ftz.f
ound.r
oundsat
oundscheck
out float gl_ClipDistance[1]
out float gl_ClipDistance[1];
out float gl_ClipDistance[];
out float4 gl_Position
out for stage outputs
out gl_MeshPerVertexNV {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];float gl_CullDistance[];perviewNV vec4 gl_PositionPerViewNV[];perviewNV float gl_ClipDistancePerViewNV[][];perviewNV float gl_CullDistancePerViewNV[][];} gl_MeshVerticesNV[];
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize;};
out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;};
out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
out highp int gl_PrimitiveID;out highp int gl_Layer;
out int  gl_ViewportMask[];out vec4 gl_SecondaryPositionNV;out int  gl_SecondaryViewportMaskNV[];out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV[];
out int gl_FragStencilRefARB;
out int gl_ViewportIndex;
out int gl_ViewportIndex;out int gl_Layer;
out int gl_ViewportMask[];out int gl_SecondaryViewportMaskNV[];out vec4 gl_SecondaryPositionNV;out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV[];
out uint gl_PrimitiveCountNV;out uint gl_PrimitiveIndicesNV[];in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;
out uint gl_TaskCountNV;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];
out vec4 gl_ClipVertex;
out vec4 gl_Position
outer product
outerProduct
output
output block
output blocks cannot be used in a task shader
output primitive = 
output primitive geometry redefinition
outputFormat
outputPatch[%d] = %s( mainIn, %d );
outputcontrolpoints
outputtopology
ove.double
overlapping offsets at
overlapping use of location
overloaded functions must have the same parameter precision qualifiers for argument
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same return type
override_coverage
ovmsk.p
ovmsk.pd
ovmsk.ps
ovmskb.128
ovnt.s
ovntdqa
owner dead
o|$0f
p ATAVAWH
p AWH
p L+p
p WAVAWH
p(L+p I
p.ps.256
p.s1.sat
p0n05
p1f3q>
p>.G1
pA\^[
pA\_^][
pA]A\_^]
pA]_^
pA^A\]
pA^A\_^[
pA^A]A\^]
pA^^]
pA^_]
pA^_^
pA^_^][
pA_A\]
pA_A\_^[
pA_A]A\_^][
pA_A]_
pA_A]_][
pA_A^A\_^[]
pA_A^A\_^[]H
pA_A^A\_^][
pA_A^A]A\]
pA_A^A]A\^][
pA_A^A]A\_
pA_A^A]A\_^[
pA_A^A]A\_^]
pA_A^A]_[
pA_A^]
pA_A^^
pA_A^_^]
pA_^[
pA_^]
pA__^
pHI9M@u#A
pHL;t$8t
pack16
pack32
pack64
packDouble2x32
packFloat2x16
packHalf2x16
packInt2x16
packInt2x32
packInt4x16
packSnorm2x16
packSnorm4x8
packUint2x16
packUint2x32
packUint4x16
packUnorm2x16
packUnorm4x8
pack_matrix
packed
packoffset
param
parameter_declaration
parameter_declarator
parameter_type_specifier
parenthesized array constructor not allowed
partial_count
partition
partitioning
passthrough
patch
patch 
patch constant function not found
patch out highp vec4 gl_BoundingBox[2];
patchIn
patchOut
patchOut = %s( mainIn );
patchOut = %s( outputPatch );
patchconstantfunc
payload number
pc.altivec.
pc.altivec.v
pc.dcb
pc.dcbtst
pc.is.decremented.ctr.nonzero
pc.mtctr.
pclose
peel_count
penryn
pentium
pentium-m
pentium-mmx
pentium2
pentium3
pentium4
pentiumpro
peq.pi.512
perm2i128
permission denied
perprimitiveNV
perprimitiveNV out gl_MeshPerPrimitiveNV {int gl_PrimitiveID;int gl_Layer;int gl_ViewportIndex;int gl_ViewportMask[];perviewNV int gl_LayerPerViewNV[];perviewNV int gl_ViewportMaskPerViewNV[][];} gl_MeshPrimitivesNV[];
perror
pervertexNV
perviewNV
pfsubr
phi-node-folding-threshold
phitmp
pipe(
pipe_storage
pixel_center_integer
pixel_interlock_ordered
pixel_interlock_unordered
platr
pm>6/
pmpyh
point
point_mode
pointer definition.
points
popcount
popen
posix_memalign
possibly multi-word literal integer
possibly multi-word literal number
post depth coverage
post-discard
post-loop-break
post-loop-continue
post-return
post-switch-break
post_coverage_coverage
post_depth_coverage
post_depth_coverage requires early_fragment_tests
postdomtree
postfix_expression
powerpc
powerpc64
powerpc64le
powrecip
ppc_fp128
ppcf128
pprox.f
pragma
pread
precise
precise qualifier must appear first
precise_qualifier
precision
precision mediump float; // this will be almost entirely overridden by individual declarations
precision qualifier must appear as last qualifier
precision statement
precision_qualifier
predefined names can't be (un)defined:
prefetch
preprocessor directive cannot be preceded by another token
preprocessor evaluation
prescott
present
primary_expression
print
print pass arguments to pass to 'opt'
print pass details when it is executed
print pass name before it is executed
print pass structure before run()
print-after
print-after-all
print-all-options
print-before
print-before-all
print-options
printf
printing a <null> value
private
private 
product
profile
projection with arrayed sampler
projection with cube sampler
propagate-lines
propagate_line_info_pass
protected
protected 
protocol error
protocol not supported
ps2dq.512
ps_3_0
ps_4_0
ps_4_1
ps_5_0
psadbw
ptrtoint
ptx_device
ptx_kernel
public
punct
purecall
push_constant
putchar
pwrite
pyu.up
q(H+q H
q.256
q.qb.ph
q.s.w.ph
q.w.ph
q2.ps.512
q8L+q0H
q>F,3
qHL9l$xt
qPfff
qS>g?h3
qXfA+
qb.ph
qrt.p
qrt.ps.256
qrt.r
qrt.s
qsort
qu.ph.qb
qu.s.qb.ph
quads
qualifier
qualifier has no effect on non-output parameters
queue
queuefamilycoherent
quotient
qx.s.w.ph
qx.sa.w.ph
r	E;`
r	I;h(s
r	Vr.>T
r 9_ t
r H+r
r%HcC
r)w#H
r,C9\
r.andi
r.andix
r.andn
r.ori
r/H;Epr
r/I9\
r11f_g11f_b10f
r16_snorm
r16ui
r32ui
r4L;x s.H
r8_snorm
r9L9E
r:D8v
r>w<H
rDvKH+
rK@8{-t
rLwJH
rNI+J
rNm>)
rTwRH
rWwUI
r[wYH
r]vdH
raddh
radians
rameaddress
random
range
range%d
ray-generation
rayPayloadInNV
rayPayloadInNV block
rayPayloadNV
rayPayloadNV block
rch64.neon.
rch64.neon.v
rcolumn
read only file system
read storage image
readFirstInvocation
readFirstInvocationARB
readInvocation
readInvocationARB
readlink
readnone
readonly
realloc
reallocf
realpath
reassociate
receu.ph.qb
recip
redeclaration
redeclaration of array with a different array dimensions or sizes
redeclaration of array with a different element type
redeclaration of array with size
redeclaration only allowed for override_coverage layout
redeclaration only allowed for viewport_relative or secondary_view_offset layout
redeclaring non-array as array
redefinition
redefinition of built-in function
redundancy-elimination
redundancy_elim_pass
redundant_line_info_elim_pass
reference
reference conversion to uvec2
reflect
refract
reg2mem
reg2mem alloca point
regex_error
regex_error(error_backref): The expression contained an invalid back reference.
regex_error(error_badbrace): The expression contained an invalid range in a { expression }.
regex_error(error_badrepeat): One of *?+{ was not preceded by a valid regular expression.
regex_error(error_brace): The expression contained mismatched { and }.
regex_error(error_brack): The expression contained mismatched [ and ].
regex_error(error_collate): The expression contained an invalid collating element name.
regex_error(error_complexity): The complexity of an attempted match against a regular expression exceeded a pre-set level.
regex_error(error_ctype): The expression contained an invalid character class name.
regex_error(error_escape): The expression contained an invalid escaped character, or a trailing escape.
regex_error(error_paren): The expression contained mismatched ( and ).
regex_error(error_parse)
regex_error(error_range): The expression contained an invalid character range, such as [b-a] in most encodings.
regex_error(error_space): There was insufficient memory to convert the expression into a finite state machine.
regex_error(error_stack): There was insufficient memory to determine whether the regular expression could match the specified character sequence.
regex_error(error_syntax)
register
register number description
reinterpret_cast
relational_expression
relax_float_ops
relaxed 
relaxed-errors
remainder
remove
remquo
rename
replicated qualifiers
reportIntersectionNV
require
required extension not requested:
requires SPIR-V 1.3
requires a scalar
requires a view array dimension
requires an input_attachment_index layout qualifier
requires block, or sampler/image, or atomic-counter type
requires local_size_x and local_size_y to be multiple of two
requires total group size to be multiple of four
requires uniform or buffer storage qualifier
reserve_id
resource
resource deadlock would occur
resource unavailable try again
restrict
restrict(
result ID
result out of range
resultMatrix
resume
return
return 
return type.
return value from main()
return.split
return;
returned
returns_twice
retval
reversebits
rewind
rg16_snorm
rg16f
rg16i
rg16ui
rg32f
rg32i
rg32ui
rg8_snorm
rg8ui
rgb10_a2
rgb10_a2ui
rgba16
rgba16_snorm
rgba16f
rgba16i
rgba16ui
rgba32f
rgba32i
rgba32ui
rgba8
rgba8_snorm
rgba8i
rgba8ui
ri9V vdH
ridid
right angle bracket
right shift second child into first child
right-shift
rightColumn
rightComp
rintf
rintl
rkw#I
rkwiH
rm.crc32c
rm.ldrex.
rm.neon.aesd.
rm.neon.aese.
rm.neon.aesimc.
rm.neon.aesmc.
rm.neon.sha1c.
rm.neon.sha1h.
rm.neon.sha1m.
rm.neon.sha1p.
rm.neon.sha1su0.
rm.neon.sha1su1.
rm.neon.sha256h.
rm.neon.sha256h2.
rm.neon.sha256su0.
rm.neon.sha256su1.
rm.neon.vabds.
rm.neon.vabdu.
rm.neon.vabs.
rm.neon.vacg
rm.neon.vbsl.
rm.neon.vcls.
rm.neon.vclz.
rm.neon.vcnt.
rm.neon.vcvtas.
rm.neon.vcvtau.
rm.neon.vcvtfp2fxs.
rm.neon.vcvtfp2fxu.
rm.neon.vcvtfxs2fp.
rm.neon.vcvtfxu2fp.
rm.neon.vcvtms.
rm.neon.vcvtmu.
rm.neon.vcvtns.
rm.neon.vcvtnu.
rm.neon.vcvtps.
rm.neon.vcvtpu.
rm.neon.vhadds.
rm.neon.vhaddu.
rm.neon.vhsubs.
rm.neon.vhsubu.
rm.neon.vld1.
rm.neon.vld2.
rm.neon.vld2lane.
rm.neon.vld3.
rm.neon.vld3lane.
rm.neon.vld4.
rm.neon.vld4lane.
rm.neon.vmaxnm.
rm.neon.vmaxs.
rm.neon.vmaxu.
rm.neon.vminnm.
rm.neon.vmins.
rm.neon.vminu.
rm.neon.vmullp.
rm.neon.vmulls.
rm.neon.vmullu.
rm.neon.vmulp.
rm.neon.vpadals.
rm.neon.vpadalu.
rm.neon.vpadd.
rm.neon.vpaddls.
rm.neon.vpaddlu.
rm.neon.vpmaxs.
rm.neon.vpmaxu.
rm.neon.vpmins.
rm.neon.vpminu.
rm.neon.vqabs.
rm.neon.vqadds.
rm.neon.vqaddu.
rm.neon.vqdmulh.
rm.neon.vqdmull.
rm.neon.vqmovns.
rm.neon.vqmovnsu.
rm.neon.vqmovnu.
rm.neon.vqneg.
rm.neon.vqrdmulh.
rm.neon.vqrshiftns.
rm.neon.vqrshiftnsu.
rm.neon.vqrshiftnu.
rm.neon.vqrshifts.
rm.neon.vqrshiftu.
rm.neon.vqshiftns.
rm.neon.vqshiftnsu.
rm.neon.vqshiftnu.
rm.neon.vqshifts.
rm.neon.vqshiftsu.
rm.neon.vqshiftu.
rm.neon.vqsubs.
rm.neon.vqsubu.
rm.neon.vraddhn.
rm.neon.vrecpe.
rm.neon.vrecps.
rm.neon.vrhadds.
rm.neon.vrhaddu.
rm.neon.vrinta.
rm.neon.vrintm.
rm.neon.vrintn.
rm.neon.vrintp.
rm.neon.vrintx.
rm.neon.vrintz.
rm.neon.vrshiftn.
rm.neon.vrshifts.
rm.neon.vrshiftu.
rm.neon.vrsqrte.
rm.neon.vrsqrts.
rm.neon.vrsubhn.
rm.neon.vshiftins.
rm.neon.vshiftls.
rm.neon.vshiftlu.
rm.neon.vshiftn.
rm.neon.vshifts.
rm.neon.vshiftu.
rm.neon.vst1.
rm.neon.vst2.
rm.neon.vst2lane.
rm.neon.vst3.
rm.neon.vst3lane.
rm.neon.vst4.
rm.neon.vst4lane.
rm.neon.vtb
rm.strex.
rm.vcvtr.
rm.vcvtru.
rmdir
rmil2p
rndpackwh
rndpackwhs
roadcast.s
roadcast.ss
rootn
rotate
round
roundEven
roundf
roundl
roupMemoryBarrier
row_major
rrier0.and
rrier0.or
rspirv
rsqrt
rtems
rules: A Block or BufferBlock cannot be nested within another Block or BufferBlock. 
runc.
runc.ftz.f
rwbuffer
rwbyteaddressbuffer
rwstructuredbuffer
rwstructuredbufferwithcounter
rwtexture1d
rwtexture1darray
rwtexture2d
rwtexture2darray
rwtexture3d
rwwuH
rxw0A
rz<3uvH
s	9G`
s H;x
s WATAUAVAWH
s WAVAWH
s sEH
s%fff
s*fff
s,fff
s/H9{
s390x
s4+sP+
s8fff
s>fff
s?fff
sBGRA
sGH;H
sHHcL$4I
sRGBA
sRGBx
s\L9w
s_abs
s_abs_diff
s_add_sat
s_clamp
s_hadd
s_mad24
s_mad_hi
s_mad_sat
s_max
s_min
s_mul24
s_mul_hi
s_rhadd
s_sub_sat
s_upsample
sadd.overflow
sadd.result
sample
sample 
sample mask override coverage
sample_interlock_ordered
sample_interlock_unordered
sampled_image(
sampler
sampler addressing mode
sampler binding not less than gl_MaxCombinedTextureImageUnits
sampler constructor must appear at point of use
sampler filter mode
sampler metadata
sampler type
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a scalar textureXXX type
sampler-constructor first argument must match type and dimensionality of constructor type
sampler-constructor requires two arguments
sampler-constructor second argument must be a scalar type 'sampler'
sampler/image
sampler/image types can only be used in uniform variables or function parameters:
sampler/texture/image requires layout(binding=X)
sampler1D
sampler1DARRAY
sampler1DArray
sampler1DArrayShadow
sampler1DShadow
sampler2D
sampler2DARRAY
sampler2DArray
sampler2DArrayShadow
sampler2DMS
sampler2DMSArray
sampler2DRect
sampler2DRectShadow
sampler2DShadow
sampler3D
sampler3DARRAY
sampler3DRect
samplerBuffer
samplerCUBE
samplerCUBEARRAY
samplerCube
samplerCubeArray
samplerCubeArrayShadow
samplerCubeShadow
samplerExternalOES
samplerShadow
sampler_state
sampler_typeProxy
samplers and atomic_uints cannot be output parameters
sanitize_address
sanitize_memory
sanitize_thread
sathb
sathub
saturate
savedstack
sbase.
scalar
scalar 
scalar block layout
scalar expected one element:
scalar integer expression required
scalar or vector element type
scalar or vector float type members
scalar or vector type
scalar swizzle
scalar type
scalar, vector, or struct type
scalar-evolution
scalar-evolution-max-iterations
scalar-replacement=
scalarCopy
scalar_replacement_pass
scalarize
scalarrepl
scalarrepl-ssa
scanf
scevgep
scope ID
se42.pcmp
secondary_view_offset
select
selecting output stream
selection
selection control
selection header
selection_rest_statement
selection_statement
selection_statement_nonattributed
semEqual and semUnequal must either both include gl_SemanticsVolatile or neither
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
semantic
semicolon
set is too large
setbuf
setitimer
setvbuf
shader input/output
shader stage
shaderRecordNV
shadercache
shaderrecordnv
shading_rate_interlock_ordered
shading_rate_interlock_unordered
shadow
shadow1D
shadow1DGradARB
shadow1DLod
shadow1DProj
shadow1DProjGradARB
shadow1DProjLod
shadow2D
shadow2DEXT
shadow2DGradARB
shadow2DLod
shadow2DProj
shadow2DProjEXT
shadow2DProjGradARB
shadow2DProjLod
shadow2DRect
shadow2DRectGradARB
shadow2DRectProj
shadow2DRectProjGradARB
shared
shared 
shift for version 
shift-UBO-binding
shift-image-binding
shift-sampler-binding
shift-ssbo-binding
shift-texture-binding
shift-uav-binding
shift_expression
short
shuf.w
shuffle
shuffle2
shufflevector
si642s
sideeffect 
signed
signext
simple_statement
simplification_pass
simplify-instructions
simplifycfg
simplifycfg-dup-ret
simplifycfg-hoist-cond-stores
simplifycfg-sink-common
sincos
sincospi
single_attribute
single_declaration
single_type_qualifier
sinhf
sinhl
sinpi
siprintf
sitofp
sizeQueryTemp
sizeof
sizeof(
skblend.
skblend.p
skmovq
sl.i.
sl.ri
smooth
smoothstep
snan)
sni.aes
sni.aeskeygenassist
snorm
snprintf
solaris
source
source language
source-entrypoint
sourceArg
space
space identifier
sparc
sparc64
sparcv9
sparseImageLoad
sparseImageLoadARB
sparseImageLoadLod
sparseImageLoadLodAMD
sparseTexel
sparseTexelFetch
sparseTexelFetchARB
sparseTexelFetchOffset
sparseTexelFetchOffsetARB
sparseTexelsResident
sparseTexelsResidentARB
sparseTexture
sparseTextureARB
sparseTextureClamp
sparseTextureClampARB
sparseTextureGather
sparseTextureGatherARB
sparseTextureGatherLod
sparseTextureGatherLodAMD
sparseTextureGatherLodOffset
sparseTextureGatherLodOffsetAMD
sparseTextureGatherLodOffsets
sparseTextureGatherLodOffsetsAMD
sparseTextureGatherOffset
sparseTextureGatherOffsetARB
sparseTextureGatherOffsets
sparseTextureGatherOffsetsARB
sparseTextureGrad
sparseTextureGradARB
sparseTextureGradClamp
sparseTextureGradClampARB
sparseTextureGradOffset
sparseTextureGradOffsetARB
sparseTextureGradOffsetClam
sparseTextureGradOffsetClampARB
sparseTextureLod
sparseTextureLodARB
sparseTextureLodOffset
sparseTextureLodOffsetARB
sparseTextureOffset
sparseTextureOffsetARB
sparseTextureOffsetClamp
sparseTextureOffsetClampARB
specialization-constant id already used
specialization-constant id is too large
spir instruction terminated too early
spir64
spiregg
splice
split
sprintf
spv1.0
spv1.1
spv1.2
spv1.3
spv1.4
spv1.5
spvopt_disable_
sq.s.
sq.s.w
sqrt.
sqrt.approx.
sqrtefp
sqrtf
sqrtfcall
sqrtl
sr.i.
sr.ri
sra.ph.w
srcval
sroa.load.elt
sroa.store.elt
ssa-rewrite
sscanf
sse3.pmadd.ub.sw.128
sse3.pmul.hr.sw.128
sspreq
sspstrong
stCD;
stED;
st`D;
stage-epilogue
stage-exit
stages must match when linking into a single stage
standard 
stat64
state not recoverable
statement
statement_list
statement_no_new_scope
statement_scoped
static
static_cast
statically used per shader entry point.
statvfs
statvfs64
stbit.
std140
std430
std430 requires the buffer storage qualifier
stderr
stereo view rendering
stfE;
stgE;
sthE;
storage buffer
storage buffer, or variable in Private or Function storage class
storage class
storage classes
storage classes.
storage image
storage qualifier not allowed on function parameter
storage_qualifier
store
storeTemp
storeTempPost
storeTempPre
storemerge
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcmpload
strcoll
strcpy
strcspn
strdup
stream
stream output type
stream timeout
streamName = v; \
stride is too large:
string
string literals not supported
string too long
strip-dead-prototypes
strlen
strlenfirst
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
struct
struct 
struct BindlessConstants_t {
struct DS_INPUT
struct DS_PATCH_CONSTANT_INPUT
struct GS_INPUT
struct HS_INPUT
struct HS_OUTPUT
struct HS_PATCH_CONSTANTS
struct PS_INPUT
struct VS_INPUT
struct gl_DepthRangeParameters {
struct gl_TextureFootprint2DNV {uvec2 anchor;uvec2 offset;uvec2 mask;uint lod;uint granularity;};struct gl_TextureFootprint3DNV {uvec3 anchor;uvec3 offset;uvec2 mask;uint lod;uint granularity;};bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintLodNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintLodNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintGradNV(sampler2D, vec2, vec2, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintGradClampNV(sampler2D, vec2, vec2, vec2, float, int, bool, out gl_TextureFootprint2DNV);
struct member declarations
struct-
struct-member initializers ignored
struct_declaration
struct_declaration_list
struct_declarator
struct_declarator_list
struct_specifier
structure
structure 
structure may not be contained as a member of another 
structuredbuffer
strxfrm
suM+J
sub.with.overflow.
subBorrow
subgroup op
subgroupAdd
subgroupAll
subgroupAllEqual
subgroupAnd
subgroupAny
subgroupBallot
subgroupBallotBitCount
subgroupBallotBitExtract
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupBallotInclusiveBitCount
subgroupBarrier
subgroupBroadcast
subgroupBroadcastFirst
subgroupClusteredAdd
subgroupClusteredAnd
subgroupClusteredMax
subgroupClusteredMin
subgroupClusteredMul
subgroupClusteredOr
subgroupClusteredXor
subgroupElect
subgroupExclusiveAdd
subgroupExclusiveAnd
subgroupExclusiveMax
subgroupExclusiveMin
subgroupExclusiveMul
subgroupExclusiveOr
subgroupExclusiveXor
subgroupInclusiveAdd
subgroupInclusiveAnd
subgroupInclusiveMax
subgroupInclusiveMin
subgroupInclusiveMul
subgroupInclusiveOr
subgroupInclusiveXor
subgroupInverseBallot
subgroupMax
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
subgroupMin
subgroupMul
subgroupOr
subgroupPartitionNV
subgroupPartitionedAddNV
subgroupPartitionedAndNV
subgroupPartitionedExclusiveAddNV
subgroupPartitionedExclusiveAndNV
subgroupPartitionedExclusiveMaxNV
subgroupPartitionedExclusiveMinNV
subgroupPartitionedExclusiveMulNV
subgroupPartitionedExclusiveOrNV
subgroupPartitionedExclusiveXorNV
subgroupPartitionedInclusiveAddNV
subgroupPartitionedInclusiveAndNV
subgroupPartitionedInclusiveMaxNV
subgroupPartitionedInclusiveMinNV
subgroupPartitionedInclusiveMulNV
subgroupPartitionedInclusiveOrNV
subgroupPartitionedInclusiveXorNV
subgroupPartitionedMaxNV
subgroupPartitionedMinNV
subgroupPartitionedMulNV
subgroupPartitionedOrNV
subgroupPartitionedXorNV
subgroupQuadBroadcast
subgroupQuadSwapDiagonal
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
subgroupShuffle
subgroupShuffleDown
subgroupShuffleUp
subgroupShuffleXor
subgroupXor
subgroupcoherent
subpass
subpass input
subpassInput
subpassInputMS
subpassLoad
subpassLoadMS
subroutine
substituting 'mediump'
subtract
subtract second child into first child
superp
suppress-warnings
swap.
swb.128
switch
switch (
switch statements
switch topology
switch-merge
switch-segment
switch.cast
switch.downshift
switch.gep
switch.load
switch.lookup
switch.masked
switch.shiftamt
switch.table
switch.tableidx
switch_statement
switch_statement_list
switch_statement_nonattributed
swizzle or member
swizzleInvocations
swizzleInvocationsAMD
swizzleInvocationsMasked
swizzleInvocationsMaskedAMD
swizzleInvocationsWithPatternAMD
sxD8k,t
syntax error
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
system
system.fxc
t	8^-u
t	8_-u
t	9P A
t	<,t
t	D9D$HM
t	H9/
t @8t$xt
t @8x
t H9X
t H9x
t LcE
t fff
t!D8l$`u
t!LcO
t!McY
t!fff
t"<.u
t"@8n-t
t"fff
t#<,t
t#@8(t
t#L;u
t#L;}
t#fff
t#y&H
t$ 8N	t6
t$ @2
t$ @82u
t$ ATAVAWH
t$ AVH
t$ AWH
t$ A^
t$ E3
t$ H+
t$ H9
t$ H98
t$ H;
t$ L9
t$ L;
t$ M+
t$ UH
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WATAVH
t$ WAUAVH
t$ WAUAWH
t$ WAVAWH
t$ WH
t$ ff
t$ fff
t$$H+
t$(E3
t$(H+
t$(H9Ghr
t$(H;
t$(I+
t$(I9n
t$(I;
t$(L+
t$(L;
t$(M;
t$(ff
t$(fff
t$0+A$t
t$0;|$P
t$0@2
t$0@8
t$0D9.
t$0E3
t$0E;
t$0H+
t$0H+\$pE2
t$0H9
t$0H9G
t$0H9L$H
t$0H;
t$0H;E
t$0H;t$8
t$0Hc
t$0I+
t$0I;
t$0L+
t$0M+
t$0M+t$(I
t$0M;
t$0ff
t$0fff
t$0txH
t$0u'
t$4;\$hu
t$88X,t#3
t$88Y-t
t$8;Upr4I
t$8@2
t$8A;
t$8E3
t$8H+
t$8H;
t$8H;E
t$8Hk
t$8I+
t$8L+
t$8L;
t$8fA
t$8ff
t$8fff
t$8t H
t$8t!
t$9kTu
t$@;t$`
t$@A;
t$@E3
t$@E;u
t$@H	D$@
t$@H+
t$@H97t
t$@H;
t$@H;E
t$@Hc
t$@Hcu
t$@Hk
t$@I+
t$@Ic
t$@L+
t$@fE
t$@ff
t$@un
t$AE2
t$DE3
t$H9G
t$H@8w-t
t$HE2
t$HE3
t$HH+
t$HH9
t$HH9E
t$HH;
t$HH;]X
t$HHc
t$HI;
t$HL+
t$HM;
t$HMc
t$HfA;
t$Hff
t$Hfff
t$P9E
t$P;t$T
t$PE3
t$PH+
t$PH9J
t$PH;
t$PH;_
t$PHc
t$PHcH
t$PI+
t$PI;
t$PIc
t$PIi
t$PIk
t$PL+
t$PL;
t$Pff
t$TE3
t$XD;u
t$XE3
t$XH+
t$XH;
t$XIi
t$XL+
t$XL;
t$Xff
t$XtJH
t$`;h(H
t$`A+
t$`D#
t$`D9e
t$`E3
t$`H+
t$`H;
t$`Hi
t$`I;
t$`L+
t$`t+H
t$fE;
t$hD;
t$hE3
t$hH+
t$hH;
t$hH;u
t$hHc
t$hIc
t$hLc
t$p@83u
t$pE2
t$pE3
t$pE;
t$pH+
t$pH9.
t$pH9\$ u
t$pH;
t$pHcH
t$pI9D$ t
t$pM;
t$pff
t$x;_@u
t$xD;
t$xE3
t$xH+
t$xH;
t$xI;
t$xL;
t$xff
t%D;A4s
t%H98tRH
t%H99tYH
t%L;B
t%fff
t';Q4s"
t'H91tGH
t'H98t H
t'H99t9H
t'H99tNH
t'L91tNH
t'fE9
t'fff
t'y*H
t(A8(t
t(fff
t)D8l$@t
t)H99t
t)fff
t)y,H
t*@8n-t
t*fff
t+@8=
t+L91t	H
t+y.H
t,D8m
t,D9{Hu&
t,H;D$8t%H+
t-H98t H
t-H99
t.@8+t)
t.H99
t.trampoline
t/<"t
t/H91
t/H99
t/H99t	H
t/H9uou
t/H;_
t/L9h
t/L;}xu)
t09y4v+3
t0@8|$`u
t1H98
t1L9`
t29p0
t2D9nTu
t2H9)t!L
t2H90t!H
t2H92t!H
t2H9:t:H
t2H;M
t2I9(t!I
t2fff
t3@80t
t3@8y
t3H;M
t3fff
t4D9C
t4D9H
t4D9P
t4McF
t4y H
t5D9H
t5H9x
t5H9{(t
t5L9H
t5L9P
t5L9X
t5L9x
t5LcF
t5fff
t6D9@
t6H9uou
t6L9c t
t6L9x
t7D8|$xu
t7HcF
t8D9H
t8H;T$hr
t8fff
t9D9P
t9H9{
t9H;E
t9L9k
t9fD;p:u2H
t9fff
t:D9H
t:H9_
t:L9p
t:L9x
t:fff
t;9T$0t5H
t;D9H
t;H9x
t;H;M
t<H;U
t<L9"t
t<fD9f:@
t<fff
t=9T$Pt7H
t=D;H
t=HcT$0
t=L9x
t=fff
t>A9|
t>fff
t>y%I
t?fff
t@<(t@<
t@D9@
t@H98t"H
t@y%H
tAHc3;s
tBA8v-t
tBH;h v
tBHc>;~
tC@8t;
tCH9{
tCHcP
tCfff
tD93u;H;L$`r
tDE9~Tu
tDH9p
tDLcC
tDfff
tE9L$$t?M
tEH9y
tEy*I
tEy+H
tFL9#t5I;
tFfD;p:u?
tFy+I
tGH;H
tGL;wHu
tH9L$$tBM
tH9T$$tBM
tHD9m
tHH9s
tHL;|$0u
tI3L$,
tIH9x
tIL9iHuCH
tKL9'uFL
tKfff
tLyOH
tME8fhuGH
tMH99t
tO@8{,t
tOD;m
tQH9.t!H
tQH9q8tKH
tQH9x
tQL9>t!H
tQfD9 tK
tQyTH
tRH9~
tRyUH
tSL9`
tSf91tNH
tSfff
tTfff
tU9|$`v
tVHcsP;s`u	H
tVL9x
tVf91tQH
tWH9x
tWH;]
tWHc@
tWfff
tWyZH
tXLcQ
tXfff
tXy[M
tY9y4vT3
tYfff
tYy\H
tZL9xxtT@8x
t[H99t!H
t[I9Y uUA8q
t[LcvPD;v`u	H
t\L9`
t\L9y
t\fff
t]L9a
t]fff
t_H9i
t_H9p
taL9x
tackprotector
tackprotectorcheck
tackrestore
tail 
tangent
tanhf
tanhl
tanpi
target datalayout = "
target triple = "
target-env opengl
target-env spirv1.1
target-env spirv1.2
target-env spirv1.3
target-env spirv1.4
target-env spirv1.5
target-env spirvUnknown
target-env vulkan1.0
target-env vulkan1.1
target-env vulkanUnknown
targetlibinfo
task shaders
taskNV
taskNV variables can be declared only as blocks
tbL9 u]@
tbL9`
tbL9c
tbaa.struct
tbit.
tbuffer
tbyeH
tcL9x
tcL;	
tcast.
tdL9`
tdL9x
teH9x
tefff
tempArg
tempColumn
tempReturn
template
terminateRayNV
terminator instruction outside basic block
terminator instruction outside function
ternary
tess eval input ordering
tess eval input primitive
tess eval vertex spacing
tessellation control
tessellation control barrier() cannot be placed after a return from main()
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main()
tessellation evaluation
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
tessellation patch type
tessellation shaders
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
tested first
testnzc.256
testnzc.p
tex1D
tex1Dbias
tex1Dgrad
tex1Dlod
tex1Dproj
tex2D
tex2Dbias
tex2Dgrad
tex2Dlod
tex2Dproj
tex3D
tex3Dbias
tex3Dgrad
tex3Dlod
tex3Dproj
texCUBE
texCUBEbias
texCUBEgrad
texCUBElod
texCUBEproj
texel
texel offset
texelFetch
texelFetchOffset
text file busy
texture
texture address mode
texture state
texture type for multisample
texture-rectangle sampler keyword
texture/image query
texture1D
texture1DArray
texture1DGradARB
texture1DLod
texture1DProj
texture1DProjGradARB
texture1DProjLod
texture2D
texture2DArray
texture2DGradARB
texture2DGradEXT
texture2DLod
texture2DLodEXT
texture2DMS
texture2DMSArray
texture2DProj
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjLod
texture2DProjLodEXT
texture2DRect
texture2DRectGradARB
texture2DRectProj
texture2DRectProjGradARB
texture3D
texture3DGradARB
texture3DLod
texture3DProj
texture3DProjGradARB
texture3DProjLod
textureBuffer
textureClamp
textureClampARB
textureCube
textureCubeArray
textureCubeGradARB
textureCubeGradEXT
textureCubeLod
textureCubeLodEXT
textureFetch
textureFetchOffset
textureFootprintClampNV
textureFootprintGradClampNV
textureFootprintGradNV
textureFootprintLodNV
textureFootprintNV
textureGather
textureGatherLod
textureGatherLodAMD
textureGatherLodOffset
textureGatherLodOffsetAMD
textureGatherLodOffsets
textureGatherLodOffsetsAMD
textureGatherOffset
textureGatherOffsets
textureGrad
textureGradClamp
textureGradClampARB
textureGradOffset
textureGradOffsetClamp
textureGradOffsetClampARB
textureLod
textureLodOffset
textureOffset
textureOffsetClamp
textureOffsetClampARB
textureProj
textureProjGrad
textureProjGradOffset
textureProjLod
textureProjLodOffset
textureProjOffset
textureQueryLevels
textureQueryLod
textureSamples
textureSamples and imageSamples
textureSamples(
textureSize
tgH9(u
tgamma
thH9p
that allocate pointers must be in Function or Private 
then statement
there is no such layout identifier for this stage taking an assigned value
this instruction is currently limited to 32-bit width 
this type
thread_local 
thread_local(initialexec) 
thread_local(localdynamic) 
thread_local(localexec) 
throw
thumb
thumbv
tier0.dll
time-passes
timeAMD
timed out
times
tjH9p
tjfff
tkH9x
tlM;u
tmD8t$Pt
tmD9d$8u_L
tmL9x
tmpcast
tmpfile
tmpfile64
tnL9x
tnfff
to be the reverse of those of Result Type
to storage image
to the number of columns of Result Type matrix
to the number of elements of Result Type array
to the number of members of Result Type struct
to the size of Result Type vector
toascii
together
token
token pasting (##)
too large for fragment output
too large, must be less than gl_MaxGeometryOutputVertices
too large, must be less than gl_MaxMeshOutputPrimitivesNV
too large, must be less than gl_MaxMeshOutputVerticesNV
too large; see gl_MaxComputeWorkGroupSize
too large; see gl_MaxMeshWorkGroupSizeNV
too large; see gl_MaxTaskWorkGroupSizeNV
too many arguments
too many files open
too many files open in system
too many links
too many storage qualifiers
too many symbolic link levels
toreu.
toreu.ps
tpH9x
tpL9y
tpop.
tpysH
tqL9a
tqfff
tr.annotation.
traceNV
track-memory
transform feedback qualifier
translation_unit
transpose
trexd
triangle
triangle order = 
triangle_ccw
triangle_cw
triangle_strip
triangleadj
triangles
triangles_adjacency
true case
true case is null
trunc
trunc.
truncf
truncl
tsH91un
tsL;	u
tstbit.
ttIcF
tu+K$3
tvH9q
tvH9x
tvL9A
tvfff
twL9&uiH
tx.read.
tx.read.smid
tyfD9 tsH
type ID
type Result Type array
type Result Type matrix
type cannot have precision qualifier
type contains double or 64-bit integer; xfb_offset must be a multiple of 8
type contains half float or 16-bit integer; xfb_offset must be a multiple of 2
type conversion on return values was not explicitly allowed until version 420
type does not match, or is not convertible to, the function's return type
type for RWTexture/RWBuffer
type must be an array:
type of the matrix operand: 
type of the vector operand: 
type overflows the available 4 components
type parameter
type requires declaration of default precision qualifier
type requires the Float16 or Float16Buffer capability, or an extension that explicitly enables 16-bit floating point.
type requires the Float64 capability.
type size for ID not found
type that can be constructed
type. Structure <id> 
type_name_list
type_parameter_specifier
type_parameter_specifier_list
type_parameter_specifier_opt
type_qualifier
type_specifier
type_specifier_nonarray
typedef
typename
tzH9p
tzH9s
t|H9s uvH
t|fff
t}9Eg
t~H99t H
t~L9`
u	D8`-A
u	D8a-A
u	D8b-A
u	D8c-A
u	D8g-A
u	D8g-E
u	D8k-A
u	D8n-A
u	D8o-A
u	D8o-E
u	D8r-A
u	D8s-A
u	D8z-A
u	D8{-A
u	E8`-A
u	E8h-A
u	E8n-A
u	E8o-A
u	H9w
u H9Q s
u L;I
u M9~0t	I
u M9~Ht	I
u M9~Pt	I
u!D9+w
u!D9h
u!D;Khr
u!D;Kpr
u!E8g,t
u!L;I
u"D9#w
u"D9&w
u"D9'w
u"D9+w
u"D9/w
u"HcMHH
u#D9J
u%H99u
u%H9:u
u%H;M
u%L9	u
u&D8g]t
u'Hc7;w
u'L9p
u(M9D
u)9p4v$3
u)@8k-t
u)D9~ t
u*9\$4t
u*H9X
u+L+L$XK
u,H9C
u,H9w
u,H;C
u,Hc7;w
u-D9*u
u.H9~ u
u.H;U
u.h.qb
u.ph.qb
u/@8{-t
u092u,H
u0H+u(H
u0Hc7;w
u0Ic@ I
u1!D$0H
u16vec2
u16vec3
u16vec4
u1D8c?u
u2@8+t-H
u2E8&t-H
u2fE9gju+fE9
u2fff
u32vec2
u32vec3
u32vec4
u3HcH<H
u4D9~
u59Q u
u64vec2
u64vec3
u64vec4
u6D97w
u6D;C
u78C,t
u8H9Q
u8Hcu
u8vec2
u8vec3
u8vec4
u8w	H9^
u9fff
u:H;T$hr
u:I9^
u<I9v t6
u=H;A
u?D9n
u?H9w
u?Hc+;k
u@I9H@u*A
uBD9nTu-
uBM9n
uDH;A
uEL9~Hu?I
uG@8{-t
uGfff
uH8L$AtB
uHD;t$X
uHH9w
uHI9L$
uMD9h
uMulExtended
uN8D$ u
uNfff
uPL9~(u2H
uPM+uHA
uQ8L$AtK
uQ9X uLA
uRH9H
uS8_,t
uSfD9Z
uSfff
uVH9L$Xu&
uVfff
uXD96w	H9V
uYfff
u^D8p
u_abs
u_abs_diff
u_add_sat
u_clamp
u_hadd
u_mad24
u_mad_hi
u_mad_sat
u_max
u_min
u_mul24
u_mul_hi
u_rhadd
u_sub_sat
u_upsample
u`fff
uaL9k
uadd.overflow
uaddCarry
ub'vb'v
ub.nopack
ub.q.
ub.sd
ub.sw
ub.sw.128
ubH9_
ubacc
ubadd
ubadd.p
ubaddhr
ubaddi
ubb.map
ubr.q.
ubuhs
ubus.
ucoopmatNV
ucoopmatNV coopMatMulAddNV(ucoopmatNV A, ucoopmatNV B, ucoopmatNV C);
uda.syncthreads
ueHcS
uf!T$(H!T$ 
uf.b.128
ufH;~ u`
uffer
ug<.u
ugH+M
ugH9L$Xu
uglygep
ugu0L
uh.nopack
uiD9~
uigroup
uimage1D
uimage1DArray
uimage2D
uimage2DArray
uimage2DMS
uimage2DMSArray
uimage2DRect
uimage3D
uimageBuffer
uimageCube
uimageCubeArray
uint   subgroupBallotBitCount(uvec4);
uint   subgroupBallotExclusiveBitCount(uvec4);
uint   subgroupBallotFindLSB(uvec4);
uint   subgroupBallotFindMSB(uvec4);
uint   subgroupBallotInclusiveBitCount(uvec4);
uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int);
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint);
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint);
uint fragmentMaskFetchAMD(sampler2DMS,       ivec2);uint fragmentMaskFetchAMD(isampler2DMS,      ivec2);uint fragmentMaskFetchAMD(usampler2DMS,      ivec2);uint fragmentMaskFetchAMD(sampler2DMSArray,  ivec3);uint fragmentMaskFetchAMD(isampler2DMSArray, ivec3);uint fragmentMaskFetchAMD(usampler2DMSArray, ivec3);vec4  fragmentFetchAMD(sampler2DMS,       ivec2, uint);ivec4 fragmentFetchAMD(isampler2DMS,      ivec2, uint);uvec4 fragmentFetchAMD(usampler2DMS,      ivec2, uint);vec4  fragmentFetchAMD(sampler2DMSArray,  ivec3, uint);ivec4 fragmentFetchAMD(isampler2DMSArray, ivec3, uint);uvec4 fragmentFetchAMD(usampler2DMSArray, ivec3, uint);
uint fragmentMaskFetchAMD(subpassInputMS);uint fragmentMaskFetchAMD(isubpassInputMS);uint fragmentMaskFetchAMD(usubpassInputMS);vec4  fragmentFetchAMD(subpassInputMS,  uint);ivec4 fragmentFetchAMD(isubpassInputMS, uint);uvec4 fragmentFetchAMD(usubpassInputMS, uint);
uint gl_InstanceID
uint gl_InstanceIndex
uint gl_PrimitiveID
uint gl_VertexID
uint gl_VertexIndex
uint(
uint( gl_InstanceID )
uint( gl_InstanceIndex )
uint( gl_PrimitiveID )
uint( gl_VertexID )
uint( gl_VertexIndex )
uint1
uint16BitsToFloat16
uint16BitsToHalf
uint16_t
uint1x1
uint1x2
uint1x3
uint1x4
uint2
uint2x1
uint2x2
uint2x3
uint2x4
uint3
uint32_t
uint3x1
uint3x2
uint3x3
uint3x4
uint4
uint4x1
uint4x2
uint4x3
uint4x4
uint64BitsToDouble
uint64_t
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t atomicLoad(coherent volatile in  int64_t, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int);
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4);
uint8_t
uintBitsToFloat
uistep
uitofp
uitype
ujH+F
ul.hr.sw
ul9L$4uf
ulH9L$Xu
uleu.s.ph.qb
ulhrw
ull.r
umH+F
umulExtended
umul_with_overflow
un.tmp
unable to declare patch constant function interface variable
unable to find output symbol for Append()
unable to find patch constant function built-in variable
unable to find texture symbol
unable to locate patch function parameter name
unable to remove the dup-merge block
uname
unary intrinsic
unary op for simple conditional loops
unary operator
unary_expression
unary_operator
und.p
und.r
undeclared identifier
undef
undefined macro in expression not allowed in es profile
unexpected
unexpected '#'
unexpected initializer-list type:
unexpected location
unexpected location; end of argument
unexpected location; end of replacement list
unexpected operator on texture type:
unexpected texture type for .mips[][] operator:
unexpected token
unexpected tokens following #ifdef directive - expected a newline
unexpected tokens following directive
unexpected type parameters
unexpected use of
unexpected use of .length()
ungetc
unhandled texture constructor
uniform
uniform _Globals_
uniform block
uniform block layout
uniform buffer
uniform buffer-member align
uniform initializers must be constant
uniform int gl_NumSamples;
uniform lowp int gl_NumSamples;
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog;
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords];
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB;
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB;
uniform/buffer blocks require layout(binding=X)
unimplemented
unimplemented constant type
unimplemented: OpMemberDecorate non-struct type
unimplemented: PCF input patch without entry point input patch parameter
unimplemented: clip/cull not currently implemented for this stage
unimplemented: component-level gather compare
unimplemented: entry point outputs in patch constant function invocation
unimplemented: multiple output patches in patch constant function
unimplemented: partial image updates
unimplemented: residency status
unimplemented: structure type in image or buffer
unimplemented: unhandled type
unimplemented; need ARB_shader_stencil_export
union
unknown
unknown atomic operation
unknown basic type in image format
unknown blend equation
unknown built-in variable
unknown error
unknown glslang aggregate
unknown glslang binary operation
unknown glslang unary
unknown image format
unknown image type in atomic operation
unknown interpolation method
unknown op
unknown op to invert
unknown operation with no arguments
unknown pack_matrix pragma value
unknown precision qualifier
unknown profile
unknown qualifier
unknown requalification
unknown sampler dimension
unknown stage
unknown swizzle selection
unknown type
unknown type in inductive variable
unknown type opcode
unknown variable
unknownIntrinsic(
unlink
unnamed_addr 
unorm
unorm and snorm only valid in floating point domain
unpack16
unpack32
unpack8
unpackDouble2x32
unpackFloat2x16
unpackHalf2x16
unpackInt2x16
unpackInt2x32
unpackInt4x16
unpackSnorm2x16
unpackSnorm4x8
unpackUint2x16
unpackUint2x32
unpackUint4x16
unpackUnorm2x16
unpackUnorm4x8
unpck.v16i1
unr.cmp
unreachable
unrecognized attribute
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4)
unroll
unroll-allow-partial
unroll-count
unroll-runtime
unroll-threshold
unsetenv
unsigned
unsigned integer
unsigned integer vector
unsigned literal
unsupported construction
unsupported domain type
unsupported outputtopology type
unsupported partitioning type
unterminated mips operator:
uoH;E
uoH;}
upper
urE3H
urfff
usampler1D
usampler1DArray
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler2DRect
usampler3D
usamplerBuffer
usamplerCube
usamplerCubeArray
use-storage-buffer
use-variable-pointers
use-vulkan-memory-model
use_storage_buffer
use_variable_pointers
use_vulkan_memory_model
used at end of comment, but this version does not provide line continuation
used at end of comment; the following line is still part of the comment
used to access transparent buffer backed resources. Such 
useless application of layout qualifier
using
using 
using ES precision qualifier keyword
using early_fragment_tests
using future keyword
using future non-square matrix type keyword
using future reserved keyword
using future type keyword
using point mode
using post_depth_coverage
usubBorrow
usubpassInput
usubpassInputMS
utH9x0unH
utexture1D
utexture1DArray
utexture2D
utexture2DArray
utexture2DMS
utexture2DMSArray
utexture2DRect
utexture3D
utextureBuffer
utextureCube
utextureCubeArray
utime
utimes
uu8T$wuo8T$sup
uvec2
uvec2 clock2x32ARB();uint64_t clockARB();uvec2 clockRealtime2x32EXT();uint64_t clockRealtimeEXT();
uvec2 conversion to reference
uvec3
uvec4
uvec4  subgroupBallot(bool);
uvec4  subgroupPartitionNV(%s);
uwtable
uxD9D$huqE;
uyL9E
uzKs@>
v&L+E
v'H+M
v'H+U
v*L+D$ H
v*L+D$0H
v*L+E
v+H+L$ H
v+H+L$@H
v+L+T$`H
v.d.256
v/H+MpH
v0H;t$ 
v0H;u
v0r,H
v0t08
v16f32
v16i1
v16i16
v16i32
v16i64
v16i8
v1f32
v1f64
v1i16
v1i32
v1i64
v2!L.2
v2f16
v2f32
v2f64
v2i16
v2i32
v2i64
v32i1
v32i16
v32i8
v4f16
v4f32
v4f64
v4i16
v4i32
v4i64
v64i1
v64i8
v8H;}
v8f16
v8f32
v8f64
v8i16
v8i32
v8i64
v@L;q
vHI9L$
vHfff
vIH;H
va_arg
validating: 
valloc
value
value is out of range:
value must be 0 or 1
value too large
variable declaration qualifier
variable index
variable indexing buffer block array
variable indexing fragment shader output array
variable indexing sampler array
variable indexing uniform block array
variable name expected
variable needs to be a 32-bit int scalar. 
variable with qualifier 'const' not initialized; zero initializing
variable_identifier
variables must be typed as OpTypeImage, OpTypeSampler, 
variables must be typed as OpTypeStruct, or an array of 
variables with qualifier 'const' must be initialized
variables with reference type can't have qualifier 'const'
varying
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
vb'vb'v
vbroadcastf128.p
ve.float
vec2 gl_PointCoord;
vec2 textureQueryLod(
vec2mat
vec3mat
vec4 
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth;
vec4 ftransform();
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord;
vec4 gl_FragColor;
vec4 gl_Position;float gl_PointSize;
vec4 imageLoad(readonly volatile coherent 
vec4 imageLoadLodAMD(readonly volatile coherent 
vec4 subpassLoad
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4);
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float);
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2);
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float);
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint);
vec4);
vec4mat
vector
vector index out of range '%d'
vector operand size: 
vector scale second child into first child
vector size of the right operand: 
vector size: 
vector swizzle
vector swizzle selection out of range
vector swizzle selectors not from the same set
vector swizzle too long
vector-dce
vector-scale
vector-times-matrix
vector<T> too long
vector<bool> too long
vector_dce_pass1
vector_dce_pass2
vectors
verify-dom-info
verify-indvars
verify-loop-info
verify-scev
version
version not supported
vertex
vertex index
vertex input arrays
vertex input cannot be further qualified
vertex output block
vertex spacing = 
vertex-shader `double` type input
vertex-shader array-of-array output
vertex-shader array-of-struct output
vertex-shader struct output
vertex-shader struct output containing an array
vertex-shader struct output containing structure
vertices
vertices = 
vfprintf
vfscanf
vfx_dx11
vfx_dx9
vfx_gl
vfx_gl.dll
vfx_opengl
vfxexprLexerNew
vfxexprLexerNewSSD
vfxexprParserNew
vfxexprParserNewSSD
vgusb
vhH;N`t
view port array2
viewport_relative
vinsertf128.
virtual
vload_half
vload_halfn
vloada_halfn
vloadn
vmskb
vnt.dq
void EmitStreamVertex(int);void EndStreamPrimitive(int);
void EmitVertex();void EndPrimitive();
void barrier();
void beginInvocationInterlockARB(void);void endInvocationInterlockARB(void);
void controlBarrier(int, int, int, int);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent float64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void executeCallableNV(uint, int);
void function cannot return a value
void ignoreIntersectionNV();void terminateRayNV();
void imageAtomicStore(volatile coherent 
void imageStore(writeonly volatile coherent 
void imageStoreLodAMD(writeonly volatile coherent 
void main()
void memoryBarrier();
void memoryBarrier(int, int, int);
void memoryBarrierAtomicCounter();void memoryBarrierBuffer();void memoryBarrierImage();
void memoryBarrierShared();void groupMemoryBarrier();
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool);
void subgroupMemoryBarrierShared();
void traceNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void executeCallableNV(uint, int);
void writePackedPrimitiveIndices4x8NV(uint, uint);
volatile
vpL;t$8
vprintf
vs_3_0
vs_4_0
vs_4_1
vs_5_0
vscanf
vsnprintf
vsprintf
vsscanf
vstdlib.dll
vstore_half
vstore_half_r
vstore_halfn
vstore_halfn_r
vstorea_halfn
vstorea_halfn_r
vstoren
vtA8_,t
vttsd2si64
vttss2si64
vulkan1.0
vulkan1.1
vulkan1.1spv1.4
vvm.atomic.load.add.f32.
vvm.atomic.load.dec.32.
vvm.atomic.load.inc.32.
vvm.compiler.error.
vvm.compiler.warn.
vvm.h2f
vvm.ldg.global.f.
vvm.ldg.global.i.
vvm.ldg.global.p.
vvm.ldu.global.f.
vvm.ldu.global.i.
vvm.ldu.global.p.
vvm.move.ptr.
vvm.prmt
vvm.ptr.constant.to.gen.
vvm.ptr.gen.to.constant.
vvm.ptr.gen.to.global.
vvm.ptr.gen.to.local.
vvm.ptr.gen.to.param.
vvm.ptr.gen.to.shared.
vvm.ptr.global.to.gen.
vvm.ptr.local.to.gen.
vvm.ptr.shared.to.gen.
vvm.read.ptx.sreg.
vvm.read.ptx.sreg.ctaid.
vvm.read.ptx.sreg.ntid.
vvm.read.ptx.sreg.tid.
vvm.rsqrt.approx.ftz.f
vvm.sqrt.approx.ftz.f
vx2.p
vx2.permd
vzeroall
v}`[>
w	H9K@
w	H9Q
w	H9S
w	H9U
w	H9Y
w	H9]
w	H9x
w	H9}@
w	H9~
w	H;U@
w	H;UP
w	H;U`
w	H;]Hu
w	L;E
w HcD$lH
w HcD$tH
w fD;
w'H9W t!A
w'I9V t!A
w)@8k-t
w+HcD$4H
w.128
w.D8d$<u'I
w/fA;
w0H9V`u#
w8H9N
w8H;\$8u
w8H;\$@u
w>9*w:H
w@H9w
w@H;O8t
w@H;q
w@L;q
wFu/Hc
wHthH
wKfA;
wOfD;
wQH;]
wXfA+
warf.cfa
warning: 
warpid
weak 
weak_odr 
webgpu0
webkit_jscc
when Dim is either 1D or 2D.
when more than one fragment shader output, all must have location qualifiers
while
while (
while (true) 
while loops not available
while sub-statement
win32
with ExplicitLod
with bias argument
woH9{
workgroupcoherent
write
writeInvocation
writeInvocationAMD
writePackedPrimitiveIndices4x8NV
writeonly
wrong number of arguments
wrong number of matrix columns:
wrong number of structure members
wrong protocol type
wrong vector size (or rows in a matrix column):
wtI9U
www.digicert.com1!0
www.digicert.com1$0"
www.digicert.com110/
x	HcQ
x @8x
x A;@X}
x ATAVAWH
x AV3
x AVH
x AWH
x UAVAWH
x$dt3H
x( u	
x( u;H
x( uY
x(+uh
x(;u 
x(;u=3
x(;ud
x(JtTH
x(SuV
x,%t2H
x,%t9H
x.ftz.f
x.read.
x.read.lanemask.
x.read.nctaid.
x.ull
x0v0$
x2.approx.
x2.approx.ftz.f
x8 ryH
x86-64
x86_64
x86_64-pc-win32
x86_64_sysvcc
x86_64_win64cc
x86_64h
x86_fastcallcc
x86_fp80
x86_mmx
x86_stdcallcc
x86_thiscallcc
x86mmx
x8@w	M9h@
x8@weL
x8@wtH
x9HcS
x: t3L
x: uhI
x<xtbA
x<xt{I
x@8{-t
xA	L$
xA\_[]
xA]A\[]
xA]_[]
xA^A\_[
xA^A]A\_
xA^A]A\_[]
xA^A]_]
xA^_^]
xA_A^A]A\_^[]
xA_A^A]A\_^][
xA_A^^]
xA_A^_^][
xA__^]
xHH9N
xHH9N@u
xHH9Q
xRHcQ
x_^[]
x_^][
xcore
xdigit
xfb layout qualifier
xfb_buffer
xfb_offset
xfb_stream
xfb_stride
xfb_stride is too large:
xfb_stride is too small to hold all buffer entries:
xfb_stride must be multiple of 2 for buffer holding a half float or 16-bit integer:
xfb_stride must be multiple of 4:
xfb_stride must be multiple of 8 for buffer holding a double or 64-bit integer:
xpect.
xperimental.patchpoint.i64
xperimental.patchpoint.void
xperimental.stackmap
xptefp
xpxxxx
xscale
xsvH;
xtr.rs.w
xtr.w
xtract
xtract.rp
xtractp
xtractp.rp
xtractu
xtractu.rp
xtractup
xtractup.rp
xtraiter
xwpwpp
y H+y
y(Gu(
y(Gu3
y(JuA
y(M+y I
y2s.s
y4	v$
y4	vB
y4	vb
y4	vi
yE>cb
yGH;H
yHH9F
yL v%
y\PD>!
yonah
ypeid.for
yri.addr.u2
ysu.up
yx\uUH
yxxxxxxxA
yxxxxxxxH
yxxxxxxxH+
yxxxxxxxI
yxxxxxxxI+
yxxxxxxxL
yxxxxxxxfff
z H+z
z H;C
z0x0:
z6u4H
z8wZH
z8wdH
z:st<L
z>@G'h
zH9uwutI
zY;>u:m	
zeroext
zeroinitializer
zeroupper
ziugI
zzzz 
zzzzJJJ,;JJ
zzzzzzz
zzzz{{{{||||
{ @v	H
{ AVH
{ H;M
{ } style initializers
{&1q>
{( u$
{(9u@
{(9uA
{(;u)H
{(=uC
{(Gun
{(OtQ
{(Suk
{4	r;
{8@v	H
{8@w^H
{: u4
{: u:ff
{:;u1H
{:Gu4H
{@H;y
{H@v	H
{HI;_Hu!I
{XH9{`u
{pE8~
{syH;
{xBu'H
{|]u~H
{|^uQH
{|}uJ
|	E;x
|#tAM
|$ 8_,t
|$ @2
|$ @8:u
|$ @H
|$ @L
|$ @v
|$ @v$H
|$ @v(H
|$ @v*H
|$ @vfH
|$ @w
|$ @w;H
|$ @wLH
|$ @wP
|$ A88u
|$ ATAVAWD
|$ ATAVAWH
|$ AUAVAWH
|$ AV
|$ AVAWH
|$ AVAWL
|$ AVH
|$ AVL
|$ D!
|$ D;
|$ E2
|$ E3
|$ H+
|$ H9D$Pta
|$ H9L$8t
|$ H;
|$ H;|$0
|$ H;}
|$ Hc
|$ HcZ
|$ Hk
|$ I+
|$ Ic
|$ L+
|$ L;eou
|$ M;
|$ UATAUAVAWH
|$ UATAWH
|$ UAVAWH
|$ UH
|$ ff
|$ u+I
|$ u6I;
|$(;^
|$(;|$$
|$(@88u
|$(@H
|$(@v
|$(A^
|$(D9|$$
|$(E3
|$(H+
|$(H9F
|$(H;
|$(H;E
|$(H;U
|$(I;
|$(L+
|$0@A
|$0@H
|$0@L
|$0@v
|$0@v	H
|$0@w
|$0A+
|$0A9|$
|$0A_A^
|$0E3
|$0H+
|$0H;
|$0H;t$p
|$0Hc
|$0Hc{t
|$0Ic
|$0L+
|$0L;
|$0M+
|$0M;
|$0ct-
|$0f;
|$0fff
|$0mt\
|$0s-
|$0t	A
|$0t#fff
|$0t,H
|$4At1
|$4H+
|$88X,t
|$8;3
|$8@H
|$8@I
|$8@M
|$8@v
|$8A;
|$8A;^0t
|$8A_A^A\
|$8E2
|$8E3
|$8H+
|$8H9C
|$8H;
|$8H;D$`r
|$8Hc
|$8Hk
|$8I+
|$8I;
|$8L+
|$8L;
|$8M;
|$8at-
|$8ct\
|$8t~A
|$<At1
|$@-D
|$@-H
|$@@8;u
|$@@H
|$@@L
|$@@v
|$@@v(H
|$@@w
|$@At1
|$@D;
|$@E3
|$@E8>u
|$@H+
|$@H;
|$@H;8u
|$@H;^@ul
|$@Hc
|$@Hcy
|$@I;
|$@L+
|$@L;
|$@M+
|$@f;N:
|$@ff
|$@fff
|$@t	3
|$@tII
|$@u/H
|$DH;
|$Dat1
|$Df;y
|$DfE;~
|$H@2
|$H@H
|$H@v
|$HA;
|$HE3
|$HE;
|$HH+
|$HH;
|$HH;E
|$HH;|$Pr
|$HHi
|$Hat1
|$Lat1
|$P9E
|$P9s|
|$P@8:u
|$P@H
|$P@L
|$P@v
|$P@w
|$PA;^ u
|$PE3
|$PH+
|$PH;
|$PI+
|$PI;
|$PL+
|$PL;
|$PM;
|$Pbt1
|$Pff
|$Pfff
|$PuKH
|$TE;
|$Tat
|$Tft!
|$Tit$
|$Ttt'
|$Tzt*
|$X-H
|$X-u
|$X@L
|$X@v
|$X@v	H
|$XH+
|$XH9u(
|$XH;
|$XH;E
|$XI;
|$XL;
|$Xat-
|$Xkt\
|$Xv'3
|$\.u
|$\at1
|$`@H
|$`@I
|$`@L
|$`@v
|$`@w
|$`A;
|$`CI
|$`D8:u
|$`E3
|$`H+
|$`H;
|$`H;E
|$`I+
|$`I;
|$`Ic
|$`L+
|$`bt1
|$`ff
|$`fff
|$`tkH
|$dat-
|$dct\
|$h9p4
|$h@D
|$h@H
|$h@v
|$hH+
|$hH9M
|$hH;
|$hH;E
|$hI+
|$hI;
|$hL+
|$hL;
|$hLk
|$hat-
|$hct\
|$htFL
|$p H
|$p@H
|$p@L
|$p@v
|$p@w
|$pAt&
|$pE3
|$pH+
|$pH;
|$pI+
|$pI;
|$pL9
|$pM;
|$pfD
|$pff
|$ptFH
|$puJA
|$t;}
|$x@v	H
|$xA;
|$xE3
|$xH+
|$xH9/
|$xL+
|$xL;d$0
|$xLc
|$xbt"
|$xdtQ
|$xff
|$x{u
|$|"w HcD$|H
|>fj;
|b=})>
} @v	H
} gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
} gl_in[gl_MaxPatchVertices];
} gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2];
} gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];patch out highp vec4 gl_BoundingBoxEXT[2];
}!L9	v
}' sGE3
}'@v	H
}'@v.H
}'@w,
}'fD;w
}(;u1L
}(@v	H
}+L9	v
}.L9	v
}/@v	H
}0@v	H
}0M+}(I
}1L9	v
}5f;C
}7@v	H
}7@w0
}8@v	H
};out int gl_PrimitiveID;out int gl_Layer;
};uniform gl_DepthRangeParameters gl_DepthRange;
}>fA;B
}@@v	H
}@L;y
}CfA;U
}G@v	H
}H@v	H
}OfD;
}P@v	H
}PL;p(
}Qf;]
}QfA;
}X@v	H
}XH97
}XfA;X
}YfD;
}_fA;X
}`@v	H
}bfA;
}h;}p
}h@v	H
}p@v	H
}w u`H
~ $s%r
~ @v	H
~ I+~
~!%^&*()-+=|,.<>/?;:[]{}#\
~$fff
~'HcC@H
~(2uZH
~(Gu:
~(H+~ H
~*1,V
~.fff
~0H+~(H
~8@v	H
~8@w	L9n@
~8@w	L9v@
~8@w	L9~@
~8@w	M9n@
~8@wqL
~8H+~0H
~8Hc^`;^pu	H
~8L9g
~8fff
~;fff
~@H;y
~@L;y
~@Lcg
~HHco
~Mfff
