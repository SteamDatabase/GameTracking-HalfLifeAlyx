VSoundStackScript_t
{
	Struct m_SoundStacks[83] =
	[
		VSoundStack_t
		{
			CResourceString m_StackName = "diagnostic_globals"
			CResourceString m_StackKV = ""diagnostic_globals"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
		"display_group"		"utility"
	}
	"test_opvars"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"number_of_local_players"
			{
				"data_type"		"float"
				"value"		"666.000000"
			}
			"test_array_max_value"
			{
				"data_type"		"float"
				"value"
				{
					"value"		"1.000000"
					"value"		"0.000000"
					"value"		"33.000000"
					"value"		"4.000000"
				}
			}
			"local_player_origins"
			{
				"data_type"		"float3"
				"value"
				{
					"value"		"[ 1.0, 2.0, 3.0 ]"
					"value"		"[ 2.0, 2.0, 3.0 ]"
					"value"		"[ 3.0, 2.0, 3.0 ]"
					"value"		"[ 4.0, 2.0, 3.0 ]"
				}
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "diagnostics_vsnd_lists"
			CResourceString m_StackKV = ""diagnostics_vsnd_lists"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
		"display_group"		"utility"
	}
	"bird_variations"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"value"
				{
					"value"		"sounds/diagnostics/ambient/random_amb_sfx/forest_bird01.vsnd"
					"value"		"sounds/diagnostics/ambient/random_amb_sfx/forest_bird01b.vsnd"
					"value"		"sounds/diagnostics/ambient/random_amb_sfx/forest_bird02.vsnd"
					"value"		"sounds/diagnostics/ambient/random_amb_sfx/forest_bird02b.vsnd"
					"value"		"sounds/diagnostics/ambient/random_amb_sfx/forest_bird03.vsnd"
				}
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "diagnostic.timed_silence"
			CResourceString m_StackKV = ""diagnostic.timed_silence"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"interval"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"stop_time"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_event_info.output_elapsed_time"
		"input2"		"@public.interval"
	}
	"update_prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_execute"		"@stop_time.output"
		"input_add_dependent"		"1"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "diagnostic.start_n_soundevents"
			CResourceString m_StackKV = ""diagnostic.start_n_soundevents"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"soundevent_number"
			{
				"data_type"		"float"
				"value"		"100.000000"
			}
		}
	}
	"if_less_than_num"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@goto_head.output_goto_count"
		"input2"		"@public.soundevent_number"
	}
	"start_soundevent"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"1.000000"
		"spawn_orphans"		"true"
		"input_start"		"1"
		"soundevent_name"		"diagnostic.timed_silence"
	}
	"goto_head"
	{
		"operator"		"sos_goto"
		"input_execute"		"@if_less_than_num.output"
		"input_goto_head"		"1"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "diagnostic.timed_beeper"
			CResourceString m_StackKV = ""diagnostic.timed_beeper"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"interval"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"value"		"sounds/diagnostics/beep.vsnd"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"interval_timer"
	{
		"operator"		"util_interval_timer"
		"input_interval"		"@public.interval"
		"input_start"		"1.000000"
	}
	"core_start_oneshot"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"core_start_oneshot"
		"operator_variables"
		{
			"start"
			{
				"value"		"@interval_timer.output_interval_not_elapsed"
			}
			"volume_min"
			{
				"value"		"1.000000"
			}
			"volume_max"
			{
				"value"		"1.000000"
			}
			"pitch_min"
			{
				"value"		"@public.pitch"
			}
			"pitch_max"
			{
				"value"		"@public.pitch"
			}
			"vsnd_files"
			{
				"value"		"@public.vsnd_files"
			}
		}
	}
	"update_prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_execute"		"@get_event_info.output_unstopped"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "diagnostic.timed_soundevent"
			CResourceString m_StackKV = ""diagnostic.timed_soundevent"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"interval"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"position"
			{
				"data_type"		"float3"
				"value"		"[0.0, 0.0, 0.0]"
			}
			"soundevent"
			{
				"data_type"		"string"
				"value"		"NULLSOUNDEVENT"
			}
			"count"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"interval_timer"
	{
		"operator"		"util_interval_timer"
		"input_interval"		"@public.interval"
		"input_start"		"1.000000"
	}
	"start_soundevent"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"1.000000"
		"input_start"		"@interval_timer.output_interval_elapsed"
		"soundevent_name"		"@public.soundevent"
	}
	"update_prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_execute"		"@get_event_info.output_unstopped"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
	"increment_count"
	{
		"operator"		"opvar_increment_float"
		"input_operator_name"		"public"
		"input_execute"		"@interval_timer.output_interval_elapsed"
		"input"		"1.000000"
		"check_event_data"		"false"
		"input_field_name"		"count"
		"input_use_namespace"		"0.000000"
	}
	"**timed_soundevent_count:"
	{
		"operator"		"util_print_float"
		"input_execute"		"@interval_timer.output_interval_elapsed"
		"input"		"@public.count"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_start_soundevent"
			CResourceString m_StackKV = ""test_start_soundevent"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"start_soundevent"
	{
		"operator"		"soundevent_start"
		"input_spawn_oneshots"		"0.000000"
		"input_start"		"@get_event_info.output_unstopped"
		"soundevent_name"		"Diagnostic.test_timers"
	}
	"update_prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_execute"		"@get_event_info.output_unstopped"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_start_vsnd_rand_oneshot"
			CResourceString m_StackKV = ""update_test_start_vsnd_rand_oneshot"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"
				{
					"value"		"sounds/weapons/bullet_impacts/wpn_bullet_impact_dry_zombie_01.vsnd"
					"value"		"sounds/weapons/bullet_impacts/wpn_bullet_impact_dry_zombie_02.vsnd"
					"value"		"sounds/weapons/bullet_impacts/wpn_bullet_impact_dry_zombie_03.vsnd"
				}
			}
			"restart_time"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"time_scale"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"wave_type"
			{
				"data_type"		"enum"
				"enum_field"		"mod_lfo.wave_type"
				"value"		"sin"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"LFO"
	{
		"operator"		"mod_LFO"
		"wave_type"		"sin"
		"input_frequency"		"0.300000"
		"input_scale"		"0.100000"
		"input_center"		"1"
	}
	"update_test_start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"input_start"		"@get_event_info.output_unstopped"
		"input_speaker_volumes"		"[ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]"
		"input_pitch"		"1.000000"
		"input_time_scale"		"@LFO.output"
		"input_delay"		"@public.delay"
		"input_memory_type"		"@public.memory_type"
		"input_restart_time"		"@public.restart_time"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_start_event_vsnd_rand_oneshot"
			CResourceString m_StackKV = ""update_test_start_event_vsnd_rand_oneshot"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"		"sounds/diagnostics/ambient/random_amb_sfx/forest_bird01.vsnd"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"update_test_start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"input_start"		"@get_event_info.output_unstopped"
		"input_speaker_volumes"		"[ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]"
		"input_pitch"		"1.000000"
		"input_delay"		"@public.delay"
		"input_memory_type"		"@public.memory_type"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_start_stack_vsnd_rand_oneshot"
			CResourceString m_StackKV = ""update_test_start_stack_vsnd_rand_oneshot"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"file_list_stack_name"
			{
				"data_type"		"string"
			}
			"file_list_operator_name"
			{
				"data_type"		"string"
			}
			"file_list_field_name"
			{
				"data_type"		"string"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_stack_name"		"@public.file_list_stack_name"
		"input_operator_name"		"@public.file_list_operator_name"
		"input_field_name"		"@public.file_list_field_name"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_exclusive"
	}
	"update_test_start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"input_start"		"@get_event_info.output_unstopped"
		"input_speaker_volumes"		"[ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]"
		"input_pitch"		"1.000000"
		"input_delay"		"@public.delay"
		"input_memory_type"		"@public.memory_type"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_start_event_vsnd_rand_weighted_oneshot"
			CResourceString m_StackKV = ""update_test_start_event_vsnd_rand_weighted_oneshot"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"		"sounds/diagnostics/ambient/random_amb_sfx/forest_bird01.vsnd"
			}
			"delay"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"weights"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random_weighted"
		"weights_field_name"		"public.weights"
	}
	"update_test_start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"input_start"		"@get_event_info.output_unstopped"
		"input_speaker_volumes"		"[ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]"
		"input_pitch"		"1.000000"
		"input_delay"		"@public.delay"
		"input_memory_type"		"@public.memory_type"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_timers"
			CResourceString m_StackKV = ""test_timers"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"util_timer"
	{
		"operator"		"util_timer"
		"input_start"		"1"
	}
	"**util_timer:"
	{
		"operator"		"util_print_float"
		"input"		"@util_timer.output"
	}
	"util_timer_ramp"
	{
		"operator"		"util_timer_ramp"
		"input_start"		"1"
		"input_duration"		"100"
		"input_end_value"		"100"
	}
	"**util_timer_ramp:"
	{
		"operator"		"util_print_float"
		"input"		"@util_timer_ramp.output"
	}
	"util_interval_timer"
	{
		"operator"		"util_interval_timer"
		"input_start"		"1"
		"input_interval"		"100"
	}
	"**util_interval_timer:"
	{
		"operator"		"util_print_float"
		"input"		"@util_interval_timer.output"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"update_prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_start_vsnd_lfo"
			CResourceString m_StackKV = ""update_test_start_vsnd_lfo"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float"
			{
				"data_type"		"float"
				"value"		"111.111000"
			}
			"test_floatB"
			{
				"data_type"		"float"
				"value"		"666.666016"
			}
			"test_float2"
			{
				"data_type"		"float2"
				"value"		"[ 111.111, 222.222 ]"
			}
			"test_float3"
			{
				"data_type"		"float3"
				"value"		"[ 111.111, 222.222, 333.333 ]"
			}
			"test_float4"
			{
				"data_type"		"float4"
				"value"		"[ 111.111, 222.222, 333.333, 444.444 ]"
			}
			"test_string"
			{
				"data_type"		"string"
				"value"		"string"
			}
			"test_float_array"
			{
				"data_type"		"float"
				"value"
				{
					"value"		"1.000000"
					"value"		"2.000000"
					"value"		"3.000000"
					"value"		"4.000000"
				}
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"lfo_time_scale"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@get_event_info.output_elapsed_time"
		"input2"		"2"
	}
	"lfo"
	{
		"operator"		"math_func_float"
		"function"		"cos"
		"normalize_trig"		"false"
		"input1"		"@lfo_time_scale.output"
	}
	"lfo_step"
	{
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@lfo.output"
		"input2"		"0.000000"
	}
	"lfo_pitch_scale"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@lfo.output"
		"input2"		"0.100000"
	}
	"lfo_pitch_add"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@lfo_pitch_scale.output"
		"input2"		"1.000000"
	}
	"lfo_abs"
	{
		"operator"		"math_func_float"
		"function"		"fabs"
		"input1"		"@lfo.output"
	}
	"speaker_volume_fan"
	{
		"operator"		"util_float_to_speakers"
		"input"		"@lfo_abs.output"
	}
	"play_or_stop"
	{
		"operator"		"math_float"
		"apply"		"min"
		"input1"		"@lfo_step.output"
		"input2"		"@get_event_info.output_unstopped"
	}
	"update_test_start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"sounds/diagnostics/bell.vsnd"
		"input_start"		"@play_or_stop.output"
		"input_speaker_volumes"		"@speaker_volume_fan.output"
		"input_pitch"		"@lfo_pitch_add.output"
		"input_memory_type"		"@public.memory_type"
	}
	"update_prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_opvar_event_sequence"
			CResourceString m_StackKV = ""update_test_opvar_event_sequence"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"float_sequence"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value1"		"0.000000"
				}
			}
		}
	}
	"get_event_sequence"
	{
		"operator"		"opvar_get_float"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"float_sequence"
		"array_selection_type"		"random_exclusive"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"***SEQ"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_opvar_event_multi_sequence"
			CResourceString m_StackKV = ""update_test_opvar_event_multi_sequence"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"float_sequence1"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value1"		"0.000000"
				}
			}
			"float_sequence2"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value1"		"0.000000"
				}
			}
			"float_sequence3"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value1"		"0.000000"
				}
			}
		}
	}
	"get_event_sequence1"
	{
		"operator"		"opvar_get_float"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"float_sequence1"
		"array_selection_type"		"random_exclusive"
	}
	"get_event_sequence2"
	{
		"operator"		"opvar_get_float"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"float_sequence2"
		"array_selection_type"		"random_exclusive"
	}
	"get_event_sequence3"
	{
		"operator"		"opvar_get_float"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"float_sequence3"
		"array_selection_type"		"random_exclusive"
	}
	"***SEQ1"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence1.output"
	}
	"***SEQ2"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence2.output"
	}
	"***SEQ3"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence3.output"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_opvar_stack_sequence"
			CResourceString m_StackKV = ""update_test_opvar_stack_sequence"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"float_sequence"
			{
				"data_type"		"float"
				"value"
				{
					"value1"		"11.000000"
					"value2"		"22.000000"
					"value3"		"33.000000"
					"value4"		"44.000000"
					"value5"		"55.000000"
					"value6"		"66.000000"
					"value7"		"77.000000"
					"value8"		"88.000000"
					"value9"		"99.000000"
				}
			}
		}
	}
	"get_event_sequence"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"public"
		"input_field_name"		"float_sequence"
		"array_selection_type"		"random_exclusive"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"***SEQ"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_opvar_global_stack_sequence"
			CResourceString m_StackKV = ""update_test_opvar_global_stack_sequence"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"get_event_sequence"
	{
		"operator"		"opvar_get_vsnd"
		"input_stack_name"		"diagnostics_vsnd_lists"
		"input_operator_name"		"bird_variations"
		"input_field_name"		"vsnd_files"
		"array_selection_type"		"forward"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"***SEQ"
	{
		"operator"		"util_print_vsnd"
		"input"		"@get_event_sequence.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_array_index_global_stack_sequence"
			CResourceString m_StackKV = ""update_test_array_index_global_stack_sequence"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"get_event_sequence"
	{
		"operator"		"opvar_get_random_array_index"
		"input_stack_name"		"diagnostics_vsnd_lists"
		"input_operator_name"		"bird_variations"
		"input_field_name"		"vsnd_files"
		"array_selection_type"		"random_exclusive"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"***SEQ"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_array_index_event_sequence"
			CResourceString m_StackKV = ""update_test_array_index_event_sequence"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"float_sequence"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value1"		"11.000000"
				}
			}
		}
	}
	"get_event_sequence"
	{
		"operator"		"opvar_get_random_array_index"
		"input_operator_name"		"public"
		"check_event_data"		"true"
		"input_field_name"		"float_sequence"
		"array_selection_type"		"random_exclusive"
		"input_use_namespace"		"0.000000"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"***SEQ"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_array_index_event_increment"
			CResourceString m_StackKV = ""update_test_array_index_event_increment"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"float_sequence"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value1"		"11.000000"
				}
			}
		}
	}
	"get_event_sequence"
	{
		"operator"		"opvar_increment_float"
		"input_operator_name"		"public"
		"input"		"1.000000"
		"check_event_data"		"true"
		"input_field_name"		"float_sequence"
		"array_selection_type"		"index"
		"input_use_namespace"		"0.000000"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"***SEQ"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_array_index_stack_increment"
			CResourceString m_StackKV = ""update_test_array_index_stack_increment"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"float_sequence"
			{
				"data_type"		"float"
				"value"
				{
					"value1"		"0.000000"
				}
			}
		}
	}
	"get_event_sequence"
	{
		"operator"		"opvar_increment_float"
		"input_operator_name"		"public"
		"input"		"1.000000"
		"check_event_data"		"false"
		"input_field_name"		"float_sequence"
		"array_selection_type"		"index"
		"input_use_namespace"		"0.000000"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"***SEQ"
	{
		"operator"		"util_print_float"
		"input"		"@get_event_sequence.output"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_overrides"
			CResourceString m_StackKV = ""update_test_overrides"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_override_1"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"1.000000"
		"input2"		"2.000000"
	}
	"update_test_override_2"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@update_test_override_1.output"
		"input2"		"4.000000"
	}
	"opvars"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_opvar"
			{
				"data_type"		"float"
				"value"		"1.000000"
				"interp_type"		"decibel_atten"
				"interp_min"		"-1.000000"
				"interp_max"		"1.000000"
			}
			"test_opvar2"
			{
				"data_type"		"float"
				"value"		"777.000000"
			}
		}
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_public_float1"
			{
				"data_type"		"float"
				"value"		"1.000000"
				"interp_type"		"decibel_atten"
				"interp_min"		"-1.000000"
				"interp_max"		"1.000000"
			}
			"test_public_float1"
			{
				"value"		"666.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_public"
			CResourceString m_StackKV = ""update_test_simple_public"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"public_float"
			{
				"data_type"		"float"
				"value"		"777.000000"
				"interp_type"		"decibel_atten"
				"interp_min"		"-1.000000"
				"interp_max"		"1.000000"
			}
			"override_float"
			{
				"data_type"		"float"
				"value"		"111.000000"
			}
		}
	}
	"update_test_simple_public_OPER"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.public_float"
		"input2"		"4.000000"
	}
	"update_test_get_local_opvar"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"public"
		"input_field_name"		"public_float"
		"input_use_namespace"		"true"
	}
	"update_test_get_global_opvar"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"public"
		"input_field_name"		"import1_float"
		"input_use_namespace"		"false"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_import_op"
			CResourceString m_StackKV = ""update_test_simple_import_op"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"import1_float"
			{
				"data_type"		"float"
				"value"		"666.000000"
			}
		}
	}
	"update_test_import_1"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.import1_float"
		"input2"		"4.000000"
	}
	"update_test_import_op"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_public"
		"operator_variables"
		{
			"public_float"
			{
				"value"		"999"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_serial_import_op"
			CResourceString m_StackKV = ""update_test_simple_serial_import_op"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"serial_float"
			{
				"data_type"		"float"
				"value"		"222.000000"
			}
			"serial_float2"
			{
				"data_type"		"float"
				"value"		"333.000000"
			}
			"import1_float"
			{
				"data_type"		"float"
				"value"		"666.000000"
			}
		}
	}
	"update_test_serial_import_op"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_public"
		"input_execute"		"1.000000"
		"operator_variables"
		{
			"public_float"
			{
				"value"		"999"
			}
			"public.override_float"
			{
				"field_override"		"public.override_float"
				"value"		"888"
			}
			"update_test_simple_public_OPER.input2"
			{
				"field_override"		"update_test_simple_public_OPER.input2"
				"value"		"@public.serial_float"
			}
		}
	}
	"update_test_serial_import_op2"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_public"
		"input_execute"		"0.000000"
		"operator_variables"
		{
			"public_float"
			{
				"value"		"@public.serial_float2"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_serial_import_op2"
			CResourceString m_StackKV = ""update_test_simple_serial_import_op2"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"serial_float"
			{
				"data_type"		"float"
				"value"		"222.000000"
			}
		}
	}
	"update_test_serial_import_op"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_public"
		"operator_variables"
		{
			"public_float"
			{
				"value"		"@public.serial_float"
			}
		}
	}
	"update_test_serial_import_op2"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_public"
		"operator_variables"
		{
			"public_float"
			{
				"value"		"@update_test_serial_import_op.public_float"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_nest_import_op1"
			CResourceString m_StackKV = ""update_test_simple_nest_import_op1"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"import1_float"
			{
				"data_type"		"float"
				"value"		"111.000000"
			}
		}
	}
	"update_test_import_op1"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_public"
		"operator_variables"
		{
			"public_float"
			{
				"value"		"@public.import1_float"
			}
		}
	}
	"update_test_simple_nest_import_op1_OPER"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.import1_float"
		"input2"		"4.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_nest_import_op2"
			CResourceString m_StackKV = ""update_test_simple_nest_import_op2"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"import2_float"
			{
				"data_type"		"float"
				"value"		"222.000000"
			}
		}
	}
	"update_test_import_op2"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_nest_import_op1"
		"operator_variables"
		{
			"import1_float"
			{
				"value"		"@public.import2_float"
			}
		}
	}
	"update_test_simple_nest_import_op2_OPER"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.import2_float"
		"input2"		"4.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_nest_import_op3"
			CResourceString m_StackKV = ""update_test_simple_nest_import_op3"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"import3_float"
			{
				"data_type"		"float"
				"value"		"333.000000"
			}
		}
	}
	"update_test_import_op3"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_nest_import_op2"
		"operator_variables"
		{
			"import2_float"
			{
				"value"		"@public.import3_float"
			}
		}
	}
	"update_test_simple_nest_import_op3_OPER"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.import3_float"
		"input2"		"4.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_simple_nest_import_op4"
			CResourceString m_StackKV = ""update_test_simple_nest_import_op4"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"import4_float"
			{
				"data_type"		"float"
				"value"		"444.000000"
			}
		}
	}
	"update_test_import_op4"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_simple_nest_import_op3"
		"operator_variables"
		{
			"import3_float"
			{
				"value"		"@public.import4_float"
			}
		}
	}
	"update_test_simple_nest_import_op4_OPER"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.import4_float"
		"input2"		"4.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_import_op"
			CResourceString m_StackKV = ""update_test_import_op"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_public_float0"
			{
				"data_type"		"float"
				"value"		"777.000000"
				"interp_type"		"decibel_atten"
				"interp_min"		"-1.000000"
				"interp_max"		"1.000000"
			}
		}
	}
	"update_test_import_1"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"662"
		"input2"		"4.000000"
	}
	"update_test_import_op"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_overrides"
		"operator_variables"
		{
			"test_public_float1"
			{
				"value"		"999"
			}
		}
	}
	"update_test_import_2"
	{
		"operator"		"math_float"
		"apply"		"add"
		"input1"		"@public.test_public_float0"
		"input2"		"@update_test_import_op::update_test_override_2.output"
		"operator_variables"
		{
			"test_opvar2"
			{
				"data_type"		"float"
				"value"		"@public.test_public_float0"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_convar"
			CResourceString m_StackKV = ""update_test_convar"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_convar"
	{
		"operator"		"convar_get"
		"convar"		"snd_op_test_convar"
	}
	"update_test_convar2"
	{
		"operator"		"convar_set"
		"execute_once"		"true"
		"convar"		"snd_musicvolume"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_delta"
			CResourceString m_StackKV = ""update_test_delta"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_delta"
	{
		"operator"		"math_delta"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_distant_dsp"
			CResourceString m_StackKV = ""update_test_distant_dsp"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_distant_dsp"
	{
		"operator"		"calc_distant_dsp"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_entity_info"
			CResourceString m_StackKV = ""update_test_entity_info"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_distant_dsp"
	{
		"operator"		"game_entity_info"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_falloff"
			CResourceString m_StackKV = ""update_test_falloff"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_falloff"
	{
		"operator"		"calc_falloff"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_float_filter"
			CResourceString m_StackKV = ""update_test_float_filter"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_float_filter"
	{
		"operator"		"math_filter_float"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_iterate_merge_speakers"
			CResourceString m_StackKV = ""update_test_iterate_merge_speakers"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_iterate_merge_speakers"
	{
		"operator"		"accumulate_indexed_speakers"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_mixer"
			CResourceString m_StackKV = ""update_test_mixer"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_mixer"
	{
		"operator"		"soundmixer_get_mixgroup"
		"mixgroup"		"bullethit"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_occlusion"
			CResourceString m_StackKV = ""update_test_occlusion"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_occlusion"
	{
		"operator"		"calc_occlusion_src1"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_utils"
			CResourceString m_StackKV = ""update_test_utils"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_null"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"666.000000"
			}
		}
	}
	"update_test_print_float"
	{
		"operator"		"util_print_float"
		"input"		"@update_test_null.test_float_field"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_mixlayer"
			CResourceString m_StackKV = ""update_test_mixlayer"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_mixlayer"
	{
		"operator"		"soundmixer_set_mixlayer"
		"mixgroup"		"All"
		"mixlayer"		"All"
		"field"		"dsp"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_math_string"
			CResourceString m_StackKV = ""update_test_math_string"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_math_string"
	{
		"operator"		"math_string"
		"input1"		"test3"
		"input2"		"test3"
		"apply"		"equal"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_calc_distance"
			CResourceString m_StackKV = ""update_test_calc_distance"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_calc_distance"
	{
		"operator"		"calc_distance"
		"input_position1"		"[ 110.0, 120.0 ]"
		"input_position2"		"[ 0.0, 0.0, 0.0 ]"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_listener_velocity"
			CResourceString m_StackKV = ""update_test_listener_velocity"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"limit_vector_xy"
	{
		"operator"		"math_float3"
		"apply"		"mult"
		"input1"		"@globals.output_listener_position"
		"input2"		"[ 1.0, 1.0, 0.0 ]"
	}
	"listener_velocity"
	{
		"operator"		"math_velocity"
		"input_position"		"@limit_vector_xy.output"
	}
	"***Velocity:"
	{
		"operator"		"util_print_float"
		"input"		"@listener_velocity.output_velocity"
	}
	"prevent_stop"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_goto_exit"
			CResourceString m_StackKV = ""test_goto_exit"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"dont_exit"
	{
		"operator"		"sos_goto"
		"input_execute"		"0.000000"
		"input_exit"		"0.000000"
	}
	"***success_didnt_exit:"
	{
		"operator"		"util_print_float"
		"input"		"0.000000"
	}
	"exit"
	{
		"operator"		"sos_goto"
		"input_execute"		"1.000000"
		"input_goto_end"		"true"
	}
	"***error_didnt_exit:"
	{
		"operator"		"util_print_float"
		"input"		"0.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_goto_loop_head"
			CResourceString m_StackKV = ""test_goto_loop_head"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"if_less_than_3"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@goto_head.output_goto_count"
		"input2"		"300.000000"
	}
	"***success_didnt_exit:"
	{
		"operator"		"util_print_float"
		"input"		"0.000000"
	}
	"goto_head"
	{
		"operator"		"sos_goto"
		"input_execute"		"@if_less_than_3.output"
		"input_goto_head"		"true"
	}
	"***success_DONE:"
	{
		"operator"		"util_print_float"
		"input"		"0.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_goto_loop_operator"
			CResourceString m_StackKV = ""test_goto_loop_operator"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"***pre_loop"
	{
		"operator"		"util_print_float"
		"input"		"0.000000"
	}
	"if_less_than_3"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@goto_operator.output_goto_count"
		"input2"		"3.000000"
	}
	"***success_didnt_exit:"
	{
		"operator"		"util_print_float"
		"input"		"0.000000"
	}
	"goto_operator"
	{
		"operator"		"sos_goto"
		"input_execute"		"@if_less_than_3.output"
		"input_goto_operator"		"if_less_than_3"
	}
	"***success_DONE:"
	{
		"operator"		"util_print_float"
		"input"		"0.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_limiter_lfo"
			CResourceString m_StackKV = ""test_soundevent_limiter_lfo"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"max_count"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"match_substring"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"invert_match"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"test_soundevent_limiter_lfo"
	{
		"operator"		"soundevent_limiter"
		"execute_once"		"true"
		"match_event_name"		"lfo"
		"input_max_events"		"@public.max_count"
		"match_substring"		"@public.match_substring"
		"invert_match"		"@public.invert_match"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_control_lfo_stop_at_time"
			CResourceString m_StackKV = ""test_soundevent_control_lfo_stop_at_time"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"import_stop_at_time"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"core_stop_at_time"
		"operator_variables"
		{
			"time"
			{
				"value"		"4.000000"
			}
		}
	}
	"import_lfo"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_start_vsnd_lfo"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_block"
			CResourceString m_StackKV = ""test_soundevent_block"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"duration"
			{
				"data_type"		"float"
				"value"		"5.000000"
			}
			"match_substring"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"match_event_name"
			{
				"data_type"		"string"
				"value"		"Diagnostic"
			}
		}
	}
	"test_soundevent_block"
	{
		"operator"		"soundevent_block_test"
		"event_name"		"@public.match_event_name"
		"input_event_type"		"3"
		"input_entity_index"		"666"
	}
	"set_soundevent_block"
	{
		"operator"		"soundevent_block"
		"input_duration"		"@public.duration"
		"match_substring"		"@public.match_substring"
		"match_event_name"		"@public.match_event_name"
		"input_event_type"		"3"
		"input_entity_index"		"666"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_start_oneshot"
			CResourceString m_StackKV = ""test_soundevent_start_oneshot"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"duration"
			{
				"data_type"		"float"
				"value"		"5.000000"
			}
			"test_value"
			{
				"data_type"		"float"
				"value"		"6.111000"
			}
			"test_value2"
			{
				"data_type"		"float"
				"value"		"6.222000"
			}
			"test_value3"
			{
				"data_type"		"float"
				"value"		"6.333000"
			}
			"test_value4"
			{
				"data_type"		"float"
				"value"		"6.444000"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator"		"soundevent_start"
		"input_start"		"1.000000"
		"soundevent_name"		"Diagnostic.core_start_simple_oneshot"
		"pass_opvar_args"		"true"
		"input_update_opvar1"		"1"
		"input_update_opvar2"		"0"
		"input_update_opvar3"		"1"
		"input_update_opvar4"		"0"
		"operator_variables"
		{
			"public.test_print"
			{
				"operator_arg_field"		"true"
				"data_type"		"float"
				"value"		"@public.test_value"
			}
			"public.test_print2"
			{
				"operator_arg_field"		"true"
				"data_type"		"float"
				"value"		"@public.test_value2"
			}
			"public.test_print3"
			{
				"operator_arg_field"		"true"
				"data_type"		"float"
				"value"		"@public.test_value3"
			}
		}
	}
	"test_soundevent_param"
	{
		"operator"		"soundevent_param"
		"input_guid"		"@test_soundevent_start.output_current_guid"
		"operator_variables"
		{
			"public.test_print4"
			{
				"operator_arg_field"		"true"
				"data_type"		"float"
				"value"		"@public.test_value4"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_start_lfo"
			CResourceString m_StackKV = ""test_soundevent_start_lfo"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"time"
			{
				"data_type"		"float"
				"value"		"8.000000"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"stop_time"
	{
		"operator"		"math_float"
		"apply"		"greater_than"
		"input2"		"@get_event_info.output_elapsed_time"
		"input1"		"@public.time"
	}
	"test_soundevent_start"
	{
		"operator"		"soundevent_start"
		"input_start"		"@stop_time.output"
		"soundevent_name"		"Diagnostic.test_stop_soundevents_lfo_at_time"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_start_opvar_get_ancestor"
			CResourceString m_StackKV = ""test_soundevent_start_opvar_get_ancestor"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"duration"
			{
				"data_type"		"float"
				"value"		"5.000000"
			}
		}
	}
	"update_test_opvar_null"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"1111.000000"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator"		"soundevent_start"
		"input_start"		"1.000000"
		"soundevent_name"		"Diagnostic.test_soundevent_start_opvar_get_parent"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"2222.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_start_opvar_get_parent"
			CResourceString m_StackKV = ""test_soundevent_start_opvar_get_parent"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"duration"
			{
				"data_type"		"float"
				"value"		"5.000000"
			}
		}
	}
	"update_test_opvar_null"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"3333.000000"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator"		"soundevent_start"
		"input_start"		"1.000000"
		"soundevent_name"		"Diagnostic.update_test_opvar"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"4444.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "update_test_opvar"
			CResourceString m_StackKV = ""update_test_opvar"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_opvar_null"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"666.000000"
			}
		}
	}
	"update_test_opvar_get"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"diagnostic_globals"
		"input_operator_name"		"test_opvars"
		"input_field_name"		"test_float"
		"input_use_namespace"		"false"
	}
	"update_test_opvar_set"
	{
		"input"		"666"
		"operator"		"opvar_set_float"
		"input_stack_name"		"diagnostic_globals"
		"input_operator_name"		"test_opvars"
		"input_field_name"		"test_float"
	}
	"update_test_opvar_get2"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"diagnostic_globals"
		"input_operator_name"		"test_opvars"
		"input_field_name"		"test_float"
		"input_use_namespace"		"false"
	}
	"update_test_opvar_increment"
	{
		"input"		"10"
		"operator"		"opvar_increment_float"
		"input_stack_name"		"diagnostic_globals"
		"input_operator_name"		"test_opvars"
		"input_field_name"		"test_float"
	}
	"update_test_opvar_get3"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"diagnostic_globals"
		"input_operator_name"		"test_opvars"
		"input_field_name"		"test_float"
		"input_use_namespace"		"false"
	}
	"update_test_local_opvar_set"
	{
		"input"		"999"
		"operator"		"opvar_set_float"
		"input_operator_name"		"update_test_opvar_null"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"true"
	}
	"update_test_local_opvar_get"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"update_test_opvar_null"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"true"
	}
	"update_test_parent_opvar_get"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"update_test_opvar_null"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_parent"		"true"
	}
	"update_test_parent_soundevent_start_opvar_get"
	{
		"operator"		"opvar_get_float"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_parent"		"true"
	}
	"update_test_parent_soundevent_start_opvar_set"
	{
		"input"		"1111"
		"operator"		"opvar_set_float"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_parent"		"true"
	}
	"update_test_parent_soundevent_start_opvar_get2"
	{
		"operator"		"opvar_get_float"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_parent"		"true"
	}
	"update_test_ancestor_opvar_get"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"update_test_opvar_null"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_ancestor"		"true"
	}
	"update_test_ancestor_soundevent_start_opvar_get"
	{
		"operator"		"opvar_get_float"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_ancestor"		"true"
	}
	"update_test_ancestor_soundevent_start_opvar_set"
	{
		"input"		"6666"
		"operator"		"opvar_set_float"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_ancestor"		"true"
	}
	"update_test_ancestor_soundevent_start_opvar_get2"
	{
		"operator"		"opvar_get_float"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_ancestor"		"true"
	}
	"update_test_get_array_max_value"
	{
		"operator"		"opvar_get_float"
		"input_stack_name"		"diagnostic_globals"
		"input_operator_name"		"test_opvars"
		"input_field_name"		"test_array_max_value"
		"input_use_namespace"		"false"
		"array_selection_type"		"max_value"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_get_parent_space"
			CResourceString m_StackKV = ""test_get_parent_space"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_get_parent_5"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"public"
		"input_field_name"		"test_float"
		"input_use_namespace"		"true"
		"input_get_parent"		"true"
	}
	"update_test_get_parent_space_NNNN"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"public"
		"input_field_name"		"test_float"
		"input_use_namespace"		"true"
		"input_get_parent"		"true"
	}
	"update_test_get_parent_5555"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"update_test_opvar_null"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"true"
		"input_get_parent"		"true"
	}
	"update_test_get_parent_6666"
	{
		"operator"		"opvar_get_float"
		"input_operator_name"		"update_test_opvar_null"
		"input_field_name"		"test_float_field"
		"input_use_namespace"		"false"
		"input_get_parent"		"true"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_start_opvar_get_parent_space"
			CResourceString m_StackKV = ""test_soundevent_start_opvar_get_parent_space"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float"
			{
				"data_type"		"float"
				"value"		"5.000000"
			}
		}
	}
	"update_test_opvar_null"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"5555.000000"
			}
		}
	}
	"test_soundevent_start_A"
	{
		"operator"		"soundevent_start"
		"input_start"		"1.000000"
		"soundevent_name"		"Diagnostic.test_get_parent_space"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_import_get_parent_space"
			CResourceString m_StackKV = ""test_import_get_parent_space"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_opvar_null"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float_field"
			{
				"data_type"		"float"
				"value"		"6666.000000"
			}
		}
	}
	"get_parent_space_9999"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"test_soundevent_start_opvar_get_parent_space"
		"operator_variables"
		{
			"test_float"
			{
				"value"		"9999.000000"
			}
		}
	}
	"get_parent_space_4444"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"test_soundevent_start_opvar_get_parent_space"
		"operator_variables"
		{
			"test_float"
			{
				"value"		"4444.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_random_multiple"
			CResourceString m_StackKV = ""test_random_multiple"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"update_test_rand1"
	{
		"operator"		"math_random_float"
		"input_seed"		"-1.000000"
	}
	"update_test_rand2"
	{
		"operator"		"math_random_float"
		"input_seed"		"-1.000000"
	}
	"update_test_rand3"
	{
		"operator"		"math_random_float"
		"input_seed"		"-1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_import_random_multiple"
			CResourceString m_StackKV = ""test_import_random_multiple"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"import_rand1"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"test_random_multiple"
	}
	"import_rand2"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"test_random_multiple"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_start_random_multiple"
			CResourceString m_StackKV = ""test_soundevent_start_random_multiple"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"test_soundevent_start"
	{
		"operator"		"soundevent_start"
		"input_start"		"1.000000"
		"soundevent_name"		"Diagnostic.test_random_multiple"
		"input_use_parent_seed"		"1.000000"
	}
	"test_soundevent_start2"
	{
		"operator"		"soundevent_start"
		"input_start"		"1.000000"
		"soundevent_name"		"Diagnostic.test_random_multiple"
		"input_use_parent_seed"		"1.000000"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_beep_on_track"
			CResourceString m_StackKV = ""test_beep_on_track"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"track"
			{
				"data_type"		"string"
				"value"		"default_track"
			}
			"sync_track"
			{
				"data_type"		"string"
				"value"		"none"
			}
			"sync_field"
			{
				"data_type"		"string"
				"value"		"none"
			}
			"start_point"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"0.000000"
			}
			"end_point"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"		"0.000000"
			}
			"sync_points"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value0"		"0.000000"
					"value1"		"1.000000"
				}
			}
			"priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"priority_override"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"block_equal_priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"@public.track"
		"priority_override"		"@public.priority_override"
		"block_equal_priority"		"@public.block_equal_priority"
		"input_priority"		"@public.priority"
		"input_sync_track_name"		"@public.sync_track"
		"input_sync_field_name"		"@public.sync_field"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"start"
	{
		"operator"		"math_float"
		"apply"		"less_than"
		"input1"		"@get_event_info.output_elapsed_time"
		"input2"		"1"
	}
	"not_start"
	{
		"operator"		"math_float"
		"apply"		"sub"
		"input2"		"@start.output"
		"input1"		"1.000000"
	}
	"start_beeper"
	{
		"input_execute"		"@start.output"
		"operator"		"sos_import_stack"
		"import_stack"		"diagnostic.timed_beeper"
		"operator_variables"
		{
			"interval"
			{
				"value"		"0.250000"
			}
			"pitch"
			{
				"value"		"0.900000"
			}
		}
	}
	"beeper"
	{
		"input_execute"		"@not_start.output"
		"operator"		"sos_import_stack"
		"import_stack"		"diagnostic.timed_beeper"
		"operator_variables"
		{
			"pitch"
			{
				"value"		"@public.pitch"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_vsnd_on_track"
			CResourceString m_StackKV = ""test_vsnd_on_track"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"track"
			{
				"data_type"		"string"
			}
			"sync_track"
			{
				"data_type"		"string"
				"value"		"none"
			}
			"sync_field"
			{
				"data_type"		"string"
				"value"		"none"
			}
			"wait_for_track"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"sync_points"
			{
				"soundevent_data"		"true"
				"data_type"		"float"
				"value"
				{
					"value0"		"10000.000000"
				}
			}
			"priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"priority_override"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"block_equal_priority"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"soundevent_data"		"true"
				"value"		"sounds/common/null.vsnd"
			}
		}
	}
	"test_soundevent_start"
	{
		"operator"		"track_queue"
		"input_track_name"		"@public.track"
		"priority_override"		"@public.priority_override"
		"block_equal_priority"		"@public.block_equal_priority"
		"input_priority"		"@public.priority"
		"input_sync_track_name"		"@public.sync_track"
		"input_sync_field_name"		"@public.sync_field"
		"wait_for_track"		"@public.wait_for_track"
	}
	"update_test_start_vsnd_rand_oneshot"
	{
		"operator"		"sos_import_stack"
		"import_stack"		"update_test_start_vsnd_rand_oneshot"
		"operator_variables"
		{
			"vsnd_files"
			{
				"value"		"@public.vsnd_files"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_stop_track"
			CResourceString m_StackKV = ""test_stop_track"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"track"
			{
				"data_type"		"string"
				"value"		"default_track"
			}
		}
	}
	"stop_track"
	{
		"operator"		"track_stop"
		"input_track_name"		"@public.track"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_field_override"
			CResourceString m_StackKV = ""test_soundevent_field_override"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"notpublic"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test1"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"test2"
			{
				"data_type"		"float"
				"value"		"2.000000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_vmix_8track"
			CResourceString m_StackKV = ""test_vmix_8track"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"balance"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"vgraph"
			{
				"data_type"		"string"
				"value"		"test.mix8"
			}
			"input"
			{
				"data_type"		"string"
				"value"		"test_input"
			}
			"track1"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"track2"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"track3"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"track4"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"track5"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"track6"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"track7"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"track8"
			{
				"data_type"		"string"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files1"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files2"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files3"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files4"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files5"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files6"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files7"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"vsnd_files8"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
			"volume_test_input"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"volume_fan"
	{
		"operator"		"util_float_to_speakers"
		"input"		"@public.volume"
	}
	"speakers_limit"
	{
		"operator"		"math_speakers"
		"apply"		"mult"
		"left_front"		"1.000000"
		"right_front"		"0.666000"
		"center"		"1.000000"
		"lfe"		"0.666000"
		"left_rear"		"1.000000"
		"right_rear"		"0.666000"
		"input2"		"@volume_fan.output"
	}
	"start_vmix"
	{
		"operator"		"vmix_voicegraph_start_8track"
		"vgraph_name"		"@public.vgraph"
		"input_track1"		"@public.track1"
		"input_track2"		"@public.track2"
		"input_track3"		"@public.track3"
		"input_track4"		"@public.track4"
		"input_track5"		"@public.track5"
		"input_track6"		"@public.track6"
		"input_track7"		"@public.track7"
		"input_track8"		"@public.track8"
		"input_vsnd1"		"@public.vsnd_files1"
		"input_vsnd2"		"@public.vsnd_files2"
		"input_vsnd3"		"@public.vsnd_files3"
		"input_vsnd4"		"@public.vsnd_files4"
		"input_vsnd5"		"@public.vsnd_files5"
		"input_vsnd6"		"@public.vsnd_files6"
		"input_vsnd7"		"@public.vsnd_files7"
		"input_vsnd8"		"@public.vsnd_files8"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"@get_event_info.output_unstopped"
		"input_speaker_volumes"		"@speakers_limit.output"
		"input_pitch"		"1.000000"
		"input_memory_type"		"@public.memory_type"
	}
	"send_voicegraph_value"
	{
		"operator"		"vmix_voicegraph_input"
		"input_name"		"volume_test"
		"input"		"@public.volume_test_input"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_vmix_vsnd_info"
			CResourceString m_StackKV = ""test_vmix_vsnd_info"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"value"		"sounds/misc/null.vsnd"
			}
		}
	}
	"get_vsnd"
	{
		"operator"		"opvar_get_vsnd"
		"execute_once"		"true"
		"check_event_data"		"true"
		"input_operator_name"		"public"
		"input_field_name"		"vsnd_files"
		"input_use_namespace"		"false"
		"array_selection_type"		"random"
	}
	"vsnd_info"
	{
		"operator"		"vmix_vsnd_info"
		"input_vsnd"		"@get_vsnd.output"
	}
	"**DURATION:"
	{
		"input_execute"		"1"
		"operator"		"util_print_float"
		"input"		"@vsnd_info.output_duration"
	}
	"volume_fan"
	{
		"operator"		"util_float_to_speakers"
		"input"		"1"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@get_vsnd.output"
		"execute_once"		"false"
		"input_execute"		"1.000000"
		"input_start"		"1"
		"input_speaker_volumes"		"@volume_fan.output"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_enum_opvar"
			CResourceString m_StackKV = ""test_enum_opvar"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"math_enum"
			{
				"data_type"		"enum"
				"enum_field"		"math_float.apply"
				"value"		"mult"
			}
		}
	}
	"math_test"
	{
		"operator"		"math_float"
		"apply"		"@public.math_enum"
		"input1"		"1"
		"input2"		"2"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_simple_public_field"
			CResourceString m_StackKV = ""test_simple_public_field"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float_for_import_1.111"
			{
				"data_type"		"float"
				"value"		"1.111000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_opvar_override"
			CResourceString m_StackKV = ""test_opvar_override"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"test_float"
			{
				"data_type"		"float"
				"value"		"2.222000"
			}
			"test_float"
			{
				"data_type"		"float"
				"value"		"3.333000"
			}
			"import_public_opvars"		"test_simple_public_field"
			"test_float_for_import_1.111"
			{
				"data_type"		"float"
				"value"		"4.444000"
			}
		}
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_system_properties"
			CResourceString m_StackKV = ""test_system_properties"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"start"
			{
				"data_type"		"float"
				"value"		"1.000000"
				"_system_properties"
				{
					"display_group"		"advanced"
				}
			}
			"volume"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"volume_rand_min"
			{
				"data_type"		"float"
				"value"		"0.000000"
				"_system_properties"
				{
					"display_group"		"advanced"
				}
			}
			"volume_rand_max"
			{
				"data_type"		"float"
				"value"		"0.000000"
				"_system_properties"
				{
					"display_group"		"advanced"
				}
			}
			"pitch"
			{
				"data_type"		"float"
				"value"		"1.000000"
				"_system_properties"
				{
					"display_group"		"advanced"
				}
			}
			"pitch_rand_min"
			{
				"data_type"		"float"
				"value"		"-0.050000"
				"_system_properties"
				{
					"display_group"		"advanced"
				}
			}
			"pitch_rand_max"
			{
				"data_type"		"float"
				"value"		"0.050000"
				"_system_properties"
				{
					"display_group"		"advanced"
				}
			}
			"vsnd_files"
			{
				"data_type"		"vsnd"
				"value"		"sounds/common/null.vsnd"
			}
			"memory_type"
			{
				"data_type"		"float"
				"value"		"0"
				"_system_properties"
				{
					"display_group"		"locked"
				}
			}
		}
	}
	"volume_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"1"
		"input_rand_min"		"@public.volume_rand_min"
		"input_rand_max"		"@public.volume_rand_max"
	}
	"pitch_random"
	{
		"operator"		"math_randomize_float"
		"execute_once"		"true"
		"input"		"@public.pitch"
		"input_min"		"@public.pitch_rand_min"
		"input_max"		"@public.pitch_rand_max"
	}
	"volume_mult"
	{
		"operator"		"math_float"
		"apply"		"mult"
		"input1"		"@public.volume"
		"input2"		"@volume_random.output"
	}
	"volume_fan"
	{
		"operator"		"util_float_to_speakers"
		"execute_once"		"true"
		"input"		"@volume_mult.output"
	}
	"start_vsnd"
	{
		"operator"		"vmix_vsnd_start"
		"input_vsnd"		"@public.vsnd_files"
		"execute_once"		"false"
		"input_execute"		"@public.start"
		"input_start"		"@public.start"
		"input_speaker_volumes"		"@volume_fan.output"
		"input_pitch"		"@pitch_random.output"
		"input_memory_type"		"@public.memory_type"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_entity_aabb"
			CResourceString m_StackKV = ""test_entity_aabb"
{
	"_system_properties"
	{
		"display_game"		"diagnostics"
	}
	"source_info_test"
	{
		"operator"		"game_get_source_info"
		"source"		"entity"
	}
	"get_aabb_test"
	{
		"input_execute"		"1.000000"
		"operator"		"game_entity_world_aabb"
		"input_entity_index"		"@source_info_test.output_entity_index"
	}
	"test_aabb_01"
	{
		"operator"		"util_draw_radius"
		"input_radius_min"		"1.000000"
		"input_name"		"min"
		"input_position"		"@get_aabb_test.output_pos_min"
	}
	"test_aabb_02"
	{
		"operator"		"util_draw_radius"
		"input_radius_min"		"1.000000"
		"input_name"		"max"
		"input_position"		"@get_aabb_test.output_pos_max"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_inverse_vec3"
			CResourceString m_StackKV = ""test_inverse_vec3"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"position"
			{
				"data_type"		"float3"
				"value"		"[0.0, 0.0, 0.0]"
				"_system_properties"
				{
					"display_group"		"locked"
					"display_edit_type"		"field_position_editor"
				}
			}
		}
	}
	"globals"
	{
		"operator"		"get_system_globals"
		"input_execute"		"1"
		"input_listener_index"		"0"
	}
	"inverse_vec3"
	{
		"operator"		"math_calc_directional_vec3"
		"execute_once"		"false"
		"input_start_position"		"@public.position"
		"input_center_position"		"@globals.output_listener_front"
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"inverse_vec3_01"
	{
		"operator"		"util_draw_radius"
		"input_radius_max"		"10.000000"
		"input_name"		"src"
		"input_position"		"@public.position"
	}
	"inverse_vec3_02"
	{
		"operator"		"util_draw_radius"
		"input_radius_min"		"10.000000"
		"input_name"		"result"
		"input_position"		"@inverse_vec3.output"
	}
	"add_dependent"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_groups"
			CResourceString m_StackKV = ""test_soundevent_groups"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"on"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"limiter_max"
			{
				"data_type"		"float"
				"value"		"2.000000"
			}
			"limit_opvar"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"event_type"
			{
				"data_type"		"float"
				"value"		"666"
			}
			"entity_index"
			{
				"data_type"		"float"
				"value"		"0"
			}
			"match_this"
			{
				"data_type"		"float"
				"value"		"0"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"match_eventtype"
	{
		"execute_once"		"true"
		"input_execute"		"0"
		"operator"		"soundevent_group_join"
		"input_group_name"		"match_eventtype"
		"input_opvar"		"@public.event_type"
	}
	"branch_eventtype"
	{
		"execute_once"		"true"
		"operator"		"soundevent_group_join"
		"input_group_name"		"branch_eventtype"
		"input_opvar"		"@public.event_type"
	}
	"find_branch_eventtype"
	{
		"execute_once"		"true"
		"input_execute"		"1"
		"operator"		"soundevent_group_find"
		"input_group_name"		"branch_eventtype"
	}
	"match_entityindex"
	{
		"execute_once"		"true"
		"input_execute"		"0"
		"operator"		"soundevent_group_join"
		"input_group_name"		"match_entityindex"
		"input_entity_index"		"@public.entity_index"
	}
	"branch_entityindex"
	{
		"execute_once"		"true"
		"input_execute"		"0"
		"operator"		"soundevent_group_join"
		"input_group_name"		"branch_entityindex"
		"input_entity_index"		"@public.entity_index"
	}
	"match_soundevent"
	{
		"operator"		"soundevent_group_join"
		"input_execute"		"0"
		"execute_once"		"true"
		"input_group_name"		"match_block_soundevent"
	}
	"branch_soundevent"
	{
		"operator"		"soundevent_group_join"
		"input_execute"		"0"
		"execute_once"		"true"
		"input_group_name"		"branch_soundevent"
	}
	"branch_entity_type"
	{
		"operator"		"soundevent_group_join"
		"input_execute"		"0"
		"execute_once"		"true"
		"input_group_name"		"branch_entindex_type"
		"input_opvar"		"@public.event_type"
		"input_entity_index"		"@public.entity_index"
	}
	"limit_opvar"
	{
		"operator"		"soundevent_group_opvars"
		"input_execute"		"0"
		"input_limit_opvar"		"@public.limit_opvar"
	}
	"stop_time"
	{
		"operator"		"math_float"
		"apply"		"greater_than"
		"input1"		"@get_event_info.output_elapsed_time"
		"input2"		"10"
	}
	"quit_match_event"
	{
		"operator"		"soundevent_group_quit"
		"input_execute"		"@stop_time.output"
		"execute_once"		"true"
		"input_group_result"		"@branch_eventtype.output_result"
	}
	"count_match_event"
	{
		"operator"		"soundevent_group_info"
		"input_execute"		"0"
		"input_group_result"		"@match_eventtype.output_result"
	}
	"count_find_branch_eventtype"
	{
		"operator"		"soundevent_group_info"
		"input_execute"		"1"
		"input_group_result"		"@find_branch_eventtype.output_result"
	}
	"**match_count"
	{
		"input_execute"		"1"
		"operator"		"util_print_float"
		"input"		"@count_find_branch_eventtype.output_match_count"
	}
	"add_dependent"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_groups_subname_invert"
			CResourceString m_StackKV = ""test_groups_subname_invert"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"invert"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"match_name"
	{
		"execute_once"		"true"
		"operator"		"soundevent_group_join"
		"input_group_name"		"match_subname"
		"input_invert_match"		"@public.invert"
	}
	"match_name_invert"
	{
		"execute_once"		"true"
		"operator"		"soundevent_group_join"
		"input_group_name"		"match_subname_invert"
		"input_invert_match"		"@public.invert"
	}
	"add_dependent"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_groups_entindex_invert"
			CResourceString m_StackKV = ""test_groups_entindex_invert"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"invert"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"entity_index"
			{
				"data_type"		"float"
				"value"		"777"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"match_entityindex"
	{
		"execute_once"		"true"
		"operator"		"soundevent_group_join"
		"input_group_name"		"match_entityindex"
		"input_entity_index"		"@public.entity_index"
		"input_invert_match"		"@public.invert"
	}
	"add_dependent"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_groups_opvar_invert"
			CResourceString m_StackKV = ""test_groups_opvar_invert"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"invert"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"opvar"
			{
				"data_type"		"float"
				"value"		"666"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"match_opvar"
	{
		"execute_once"		"true"
		"operator"		"soundevent_group_join"
		"input_group_name"		"match_eventtype"
		"input_opvar"		"@public.opvar"
		"input_invert_match"		"@public.invert"
	}
	"match_opvar_invert"
	{
		"execute_once"		"true"
		"operator"		"soundevent_group_join"
		"input_group_name"		"match_opvar_invert"
		"input_opvar"		"@public.opvar"
		"input_invert_match"		"@public.invert"
	}
	"add_dependent"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"@get_event_info.output_unstopped"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_soundevent_group_simple"
			CResourceString m_StackKV = ""test_soundevent_group_simple"
{
	"add_dependent"
	{
		"operator"		"soundevent_control"
		"input_add_dependent"		"1"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_group_stop"
			CResourceString m_StackKV = ""test_group_stop"
{
	"stop_group"
	{
		"execute_once"		"true"
		"operator"		"soundevent_group_stop"
		"input_group_name"		"static_group3"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "test_LFO"
			CResourceString m_StackKV = ""test_LFO"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"frequency"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"scale"
			{
				"data_type"		"float"
				"value"		"1.000000"
			}
			"center"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"wave_type"
			{
				"data_type"		"enum"
				"enum_field"		"mod_lfo.wave_type"
				"value"		"sin"
			}
		}
	}
	"get_event_info"
	{
		"operator"		"soundevent_get_info"
	}
	"LFO"
	{
		"operator"		"mod_LFO"
		"wave_type"		"@public.wave_type"
		"input_frequency"		"@public.frequency"
		"input_scale"		"@public.scale"
		"input_center"		"@public.center"
	}
	"update_test_print_float"
	{
		"operator"		"util_print_float"
		"input"		"@LFO.output"
	}
	"add_dependent"
	{
		"input_execute"		"@get_event_info.output_unstopped"
		"input_add_dependent"		"@get_event_info.output_unstopped"
		"operator"		"soundevent_control"
		"input_add_dependent"		"1"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "Diagnostic.TestCurve2d"
			CResourceString m_StackKV = ""Diagnostic.TestCurve2d"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"input"
			{
				"data_type"		"float"
				"value"		"0.000000"
			}
			"curve"
			{
				"data_type"		"float6"
				"soundevent_data"		"true"
				"value"
				{
					"value1"		"[ 0.0, 0.0, 0, 0, 0, 0 ] "
					"value2"		"[ 0.0, 1.0, 0, 0, 0, 0 ] "
				}
				"_system_properties"
				{
					"display_edit_type"		"field_curve_2d_editor"
				}
			}
		}
	}
	"curve"
	{
		"operator"		"math_curve_2d"
		"input"		"@public.input"
		"public_field_name"		"public.curve"
		"input_scale_X"		"1.000000"
		"input_scale_Y"		"1.000000"
	}
	"update_test_print_float"
	{
		"input_execute"		"1"
		"operator"		"util_print_float"
		"input"		"@curve.output"
	}
}
"
		}
		VSoundStack_t
		{
			CResourceString m_StackName = "Diagnostic.GetMixGraphInput"
			CResourceString m_StackKV = ""Diagnostic.GetMixGraphInput"
{
	"public"
	{
		"operator"		"util_null"
		"operator_variables"
		{
			"input_name"
			{
				"data_type"		"string"
				"value"		"PlayerDSP"
			}
		}
	}
	"get_input"
	{
		"operator"		"vmix_mixgraph_input_get_float"
		"input_name"		"@public.input_name"
	}
	"update_test_print_float"
	{
		"input_execute"		"1"
		"operator"		"util_print_float"
		"input"		"@get_input.output"
	}
}
"
		}
	]
}
